// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="FIR8_FIR8,hls_ip_2025_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xa7a100t-csg324-2I,HLS_INPUT_CLOCK=1000.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.883214,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=18,HLS_SYN_LUT=167,HLS_VERSION=2025_1}" *)

module FIR8 (
        ap_clk,
        ap_rst,
        clear,
        start_r,
        hh,
        mm,
        ss
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input  [0:0] clear;
input  [0:0] start_r;
output  [7:0] hh;
output  [7:0] mm;
output  [7:0] ss;

reg   [5:0] p_ss;
reg   [5:0] p_mm;
reg   [4:0] p_hh;
reg   [5:0] ap_phi_mux_p_ss_loc_2_phi_fu_90_p10;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] clear_read_read_fu_60_p2;
wire   [0:0] start_r_read_read_fu_54_p2;
wire   [5:0] add_ln59_fu_162_p2;
wire   [0:0] icmp_ln44_fu_156_p2;
wire   [0:0] icmp_ln47_fu_181_p2;
reg   [5:0] ap_phi_mux_p_mm_loc_3_phi_fu_108_p10;
wire   [5:0] add_ln56_fu_187_p2;
reg   [4:0] ap_phi_mux_p_hh_loc_3_phi_fu_125_p10;
wire   [4:0] select_ln50_fu_218_p3;
wire   [0:0] icmp_ln50_fu_206_p2;
wire   [4:0] add_ln53_fu_212_p2;
reg   [0:0] ap_NS_fsm;
wire    ap_ST_fsm_state1_blk;
reg    ap_condition_53;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 p_ss = 6'd0;
#0 p_mm = 6'd0;
#0 p_hh = 5'd0;
#0 ap_CS_fsm = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_hh <= 5'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state1)) begin
            if ((clear_read_read_fu_60_p2 == 1'd1)) begin
                p_hh <= 5'd0;
            end else if ((1'b1 == ap_condition_53)) begin
                p_hh <= select_ln50_fu_218_p3;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_mm <= 6'd0;
    end else begin
        if ((((icmp_ln47_fu_181_p2 == 1'd1) & (icmp_ln44_fu_156_p2 == 1'd1) & (start_r_read_read_fu_54_p2 == 1'd1) & (clear_read_read_fu_60_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((clear_read_read_fu_60_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
            p_mm <= 6'd0;
        end else if (((icmp_ln47_fu_181_p2 == 1'd0) & (icmp_ln44_fu_156_p2 == 1'd1) & (start_r_read_read_fu_54_p2 == 1'd1) & (clear_read_read_fu_60_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            p_mm <= add_ln56_fu_187_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        p_ss <= 6'd0;
    end else begin
        if ((((icmp_ln44_fu_156_p2 == 1'd1) & (start_r_read_read_fu_54_p2 == 1'd1) & (clear_read_read_fu_60_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((clear_read_read_fu_60_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
            p_ss <= 6'd0;
        end else if (((icmp_ln44_fu_156_p2 == 1'd0) & (start_r_read_read_fu_54_p2 == 1'd1) & (clear_read_read_fu_60_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
            p_ss <= add_ln59_fu_162_p2;
        end
    end
end

assign ap_ST_fsm_state1_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln47_fu_181_p2 == 1'd1) & (icmp_ln44_fu_156_p2 == 1'd1) & (start_r_read_read_fu_54_p2 == 1'd1) & (clear_read_read_fu_60_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_p_hh_loc_3_phi_fu_125_p10 = select_ln50_fu_218_p3;
    end else if ((((icmp_ln47_fu_181_p2 == 1'd0) & (icmp_ln44_fu_156_p2 == 1'd1) & (start_r_read_read_fu_54_p2 == 1'd1) & (clear_read_read_fu_60_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln44_fu_156_p2 == 1'd0) & (start_r_read_read_fu_54_p2 == 1'd1) & (clear_read_read_fu_60_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((start_r_read_read_fu_54_p2 == 1'd0) & (clear_read_read_fu_60_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_phi_mux_p_hh_loc_3_phi_fu_125_p10 = p_hh;
    end else if (((clear_read_read_fu_60_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_p_hh_loc_3_phi_fu_125_p10 = 5'd0;
    end else begin
        ap_phi_mux_p_hh_loc_3_phi_fu_125_p10 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln47_fu_181_p2 == 1'd0) & (icmp_ln44_fu_156_p2 == 1'd1) & (start_r_read_read_fu_54_p2 == 1'd1) & (clear_read_read_fu_60_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_p_mm_loc_3_phi_fu_108_p10 = add_ln56_fu_187_p2;
    end else if ((((icmp_ln44_fu_156_p2 == 1'd0) & (start_r_read_read_fu_54_p2 == 1'd1) & (clear_read_read_fu_60_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((start_r_read_read_fu_54_p2 == 1'd0) & (clear_read_read_fu_60_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_phi_mux_p_mm_loc_3_phi_fu_108_p10 = p_mm;
    end else if ((((icmp_ln47_fu_181_p2 == 1'd1) & (icmp_ln44_fu_156_p2 == 1'd1) & (start_r_read_read_fu_54_p2 == 1'd1) & (clear_read_read_fu_60_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((clear_read_read_fu_60_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_phi_mux_p_mm_loc_3_phi_fu_108_p10 = 6'd0;
    end else begin
        ap_phi_mux_p_mm_loc_3_phi_fu_108_p10 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln44_fu_156_p2 == 1'd0) & (start_r_read_read_fu_54_p2 == 1'd1) & (clear_read_read_fu_60_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_p_ss_loc_2_phi_fu_90_p10 = add_ln59_fu_162_p2;
    end else if (((start_r_read_read_fu_54_p2 == 1'd0) & (clear_read_read_fu_60_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_phi_mux_p_ss_loc_2_phi_fu_90_p10 = p_ss;
    end else if ((((icmp_ln47_fu_181_p2 == 1'd1) & (icmp_ln44_fu_156_p2 == 1'd1) & (start_r_read_read_fu_54_p2 == 1'd1) & (clear_read_read_fu_60_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln47_fu_181_p2 == 1'd0) & (icmp_ln44_fu_156_p2 == 1'd1) & (start_r_read_read_fu_54_p2 == 1'd1) & (clear_read_read_fu_60_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)) | ((clear_read_read_fu_60_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_phi_mux_p_ss_loc_2_phi_fu_90_p10 = 6'd0;
    end else begin
        ap_phi_mux_p_ss_loc_2_phi_fu_90_p10 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln53_fu_212_p2 = (p_hh + 5'd1);

assign add_ln56_fu_187_p2 = (p_mm + 6'd1);

assign add_ln59_fu_162_p2 = (p_ss + 6'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_condition_53 = ((icmp_ln47_fu_181_p2 == 1'd1) & (icmp_ln44_fu_156_p2 == 1'd1) & (start_r_read_read_fu_54_p2 == 1'd1) & (clear_read_read_fu_60_p2 == 1'd0));
end

assign clear_read_read_fu_60_p2 = clear;

assign hh = ap_phi_mux_p_hh_loc_3_phi_fu_125_p10;

assign icmp_ln44_fu_156_p2 = ((p_ss == 6'd59) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_181_p2 = ((p_mm == 6'd59) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_206_p2 = ((p_hh == 5'd23) ? 1'b1 : 1'b0);

assign mm = ap_phi_mux_p_mm_loc_3_phi_fu_108_p10;

assign select_ln50_fu_218_p3 = ((icmp_ln50_fu_206_p2[0:0] == 1'b1) ? 5'd0 : add_ln53_fu_212_p2);

assign ss = ap_phi_mux_p_ss_loc_2_phi_fu_90_p10;

assign start_r_read_read_fu_54_p2 = start_r;

endmodule //FIR8
