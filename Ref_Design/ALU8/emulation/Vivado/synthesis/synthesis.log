
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38+88 (git sha1 38f1b0b12, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Executing script file `ALU_wrapper.ys' --

1. Executing Verilog-2005 frontend: ../../../source/ALU_wrapper.v
Parsing Verilog input from `../../../source/ALU_wrapper.v' to AST representation.
Generating RTLIL representation for module `\ALU_wrapper'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../../../source/ALU8.v
Parsing Verilog input from `../../../source/ALU8.v' to AST representation.
Generating RTLIL representation for module `\ALU8'.
Successfully finished Verilog frontend.

3. Executing SYNTH_XILINX pass.

3.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/xilinx/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/xilinx/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\VCC'.
Generating RTLIL representation for module `\GND'.
Generating RTLIL representation for module `\IBUF'.
Generating RTLIL representation for module `\IBUFG'.
Generating RTLIL representation for module `\OBUF'.
Generating RTLIL representation for module `\IOBUF'.
Generating RTLIL representation for module `\OBUFT'.
Generating RTLIL representation for module `\BUFG'.
Generating RTLIL representation for module `\BUFGCTRL'.
Generating RTLIL representation for module `\BUFHCE'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\LUT6_2'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\$__ABC9_LUT8'.
Generating RTLIL representation for module `\MUXCY'.
Generating RTLIL representation for module `\MUXF5'.
Generating RTLIL representation for module `\MUXF6'.
Generating RTLIL representation for module `\MUXF7'.
Generating RTLIL representation for module `\MUXF8'.
Generating RTLIL representation for module `\MUXF9'.
Generating RTLIL representation for module `\XORCY'.
Generating RTLIL representation for module `\CARRY4'.
Generating RTLIL representation for module `\CARRY8'.
Generating RTLIL representation for module `\ORCY'.
Generating RTLIL representation for module `\MULT_AND'.
Generating RTLIL representation for module `\FDRE'.
Generating RTLIL representation for module `\FDRE_1'.
Generating RTLIL representation for module `\FDSE'.
Generating RTLIL representation for module `\FDSE_1'.
Generating RTLIL representation for module `\FDRSE'.
Generating RTLIL representation for module `\FDRSE_1'.
Generating RTLIL representation for module `\FDCE'.
Generating RTLIL representation for module `\FDCE_1'.
Generating RTLIL representation for module `\FDPE'.
Generating RTLIL representation for module `\FDPE_1'.
Generating RTLIL representation for module `\FDCPE'.
Generating RTLIL representation for module `\FDCPE_1'.
Generating RTLIL representation for module `\LDCE'.
Generating RTLIL representation for module `\LDPE'.
Generating RTLIL representation for module `\LDCPE'.
Generating RTLIL representation for module `\AND2B1L'.
Generating RTLIL representation for module `\OR2L'.
Generating RTLIL representation for module `\RAM16X1S'.
Generating RTLIL representation for module `\RAM16X1S_1'.
Generating RTLIL representation for module `\RAM32X1S'.
Generating RTLIL representation for module `\RAM32X1S_1'.
Generating RTLIL representation for module `\RAM64X1S'.
Generating RTLIL representation for module `\RAM64X1S_1'.
Generating RTLIL representation for module `\RAM128X1S'.
Generating RTLIL representation for module `\RAM128X1S_1'.
Generating RTLIL representation for module `\RAM256X1S'.
Generating RTLIL representation for module `\RAM512X1S'.
Generating RTLIL representation for module `\RAM16X2S'.
Generating RTLIL representation for module `\RAM32X2S'.
Generating RTLIL representation for module `\RAM64X2S'.
Generating RTLIL representation for module `\RAM16X4S'.
Generating RTLIL representation for module `\RAM32X4S'.
Generating RTLIL representation for module `\RAM16X8S'.
Generating RTLIL representation for module `\RAM32X8S'.
Generating RTLIL representation for module `\RAM16X1D'.
Generating RTLIL representation for module `\RAM16X1D_1'.
Generating RTLIL representation for module `\RAM32X1D'.
Generating RTLIL representation for module `\RAM32X1D_1'.
Generating RTLIL representation for module `\RAM64X1D'.
Generating RTLIL representation for module `\RAM64X1D_1'.
Generating RTLIL representation for module `\RAM128X1D'.
Generating RTLIL representation for module `\RAM256X1D'.
Generating RTLIL representation for module `\RAM32M'.
Generating RTLIL representation for module `\RAM32M16'.
Generating RTLIL representation for module `\RAM64M'.
Generating RTLIL representation for module `\RAM64M8'.
Generating RTLIL representation for module `\RAM32X16DR8'.
Generating RTLIL representation for module `\RAM64X8SW'.
Generating RTLIL representation for module `\ROM16X1'.
Generating RTLIL representation for module `\ROM32X1'.
Generating RTLIL representation for module `\ROM64X1'.
Generating RTLIL representation for module `\ROM128X1'.
Generating RTLIL representation for module `\ROM256X1'.
Generating RTLIL representation for module `\SRL16'.
Generating RTLIL representation for module `\SRL16E'.
Generating RTLIL representation for module `\SRLC16'.
Generating RTLIL representation for module `\SRLC16E'.
Generating RTLIL representation for module `\SRLC32E'.
Generating RTLIL representation for module `\CFGLUT5'.
Generating RTLIL representation for module `\MULT18X18'.
Generating RTLIL representation for module `\MULT18X18S'.
Generating RTLIL representation for module `\MULT18X18SIO'.
Generating RTLIL representation for module `\DSP48A'.
Generating RTLIL representation for module `\DSP48A1'.
Generating RTLIL representation for module `\DSP48'.
Generating RTLIL representation for module `\DSP48E1'.
Generating RTLIL representation for module `\RAMB18E1'.
Generating RTLIL representation for module `\RAMB36E1'.
Successfully finished Verilog frontend.

3.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/xilinx/cells_xtra.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/xilinx/cells_xtra.v' to AST representation.
Generating RTLIL representation for module `\RAMB4_S1'.
Generating RTLIL representation for module `\RAMB4_S2'.
Generating RTLIL representation for module `\RAMB4_S4'.
Generating RTLIL representation for module `\RAMB4_S8'.
Generating RTLIL representation for module `\RAMB4_S16'.
Generating RTLIL representation for module `\RAMB4_S1_S1'.
Generating RTLIL representation for module `\RAMB4_S1_S2'.
Generating RTLIL representation for module `\RAMB4_S1_S4'.
Generating RTLIL representation for module `\RAMB4_S1_S8'.
Generating RTLIL representation for module `\RAMB4_S1_S16'.
Generating RTLIL representation for module `\RAMB4_S2_S2'.
Generating RTLIL representation for module `\RAMB4_S2_S4'.
Generating RTLIL representation for module `\RAMB4_S2_S8'.
Generating RTLIL representation for module `\RAMB4_S2_S16'.
Generating RTLIL representation for module `\RAMB4_S4_S4'.
Generating RTLIL representation for module `\RAMB4_S4_S8'.
Generating RTLIL representation for module `\RAMB4_S4_S16'.
Generating RTLIL representation for module `\RAMB4_S8_S8'.
Generating RTLIL representation for module `\RAMB4_S8_S16'.
Generating RTLIL representation for module `\RAMB4_S16_S16'.
Generating RTLIL representation for module `\RAMB16_S1'.
Generating RTLIL representation for module `\RAMB16_S2'.
Generating RTLIL representation for module `\RAMB16_S4'.
Generating RTLIL representation for module `\RAMB16_S9'.
Generating RTLIL representation for module `\RAMB16_S18'.
Generating RTLIL representation for module `\RAMB16_S36'.
Generating RTLIL representation for module `\RAMB16_S1_S1'.
Generating RTLIL representation for module `\RAMB16_S1_S2'.
Generating RTLIL representation for module `\RAMB16_S1_S4'.
Generating RTLIL representation for module `\RAMB16_S1_S9'.
Generating RTLIL representation for module `\RAMB16_S1_S18'.
Generating RTLIL representation for module `\RAMB16_S1_S36'.
Generating RTLIL representation for module `\RAMB16_S2_S2'.
Generating RTLIL representation for module `\RAMB16_S2_S4'.
Generating RTLIL representation for module `\RAMB16_S2_S9'.
Generating RTLIL representation for module `\RAMB16_S2_S18'.
Generating RTLIL representation for module `\RAMB16_S2_S36'.
Generating RTLIL representation for module `\RAMB16_S4_S4'.
Generating RTLIL representation for module `\RAMB16_S4_S9'.
Generating RTLIL representation for module `\RAMB16_S4_S18'.
Generating RTLIL representation for module `\RAMB16_S4_S36'.
Generating RTLIL representation for module `\RAMB16_S9_S9'.
Generating RTLIL representation for module `\RAMB16_S9_S18'.
Generating RTLIL representation for module `\RAMB16_S9_S36'.
Generating RTLIL representation for module `\RAMB16_S18_S18'.
Generating RTLIL representation for module `\RAMB16_S18_S36'.
Generating RTLIL representation for module `\RAMB16_S36_S36'.
Generating RTLIL representation for module `\RAMB16BWE_S18'.
Generating RTLIL representation for module `\RAMB16BWE_S36'.
Generating RTLIL representation for module `\RAMB16BWE_S18_S9'.
Generating RTLIL representation for module `\RAMB16BWE_S18_S18'.
Generating RTLIL representation for module `\RAMB16BWE_S36_S9'.
Generating RTLIL representation for module `\RAMB16BWE_S36_S18'.
Generating RTLIL representation for module `\RAMB16BWE_S36_S36'.
Generating RTLIL representation for module `\RAMB16BWER'.
Generating RTLIL representation for module `\RAMB8BWER'.
Generating RTLIL representation for module `\FIFO16'.
Generating RTLIL representation for module `\RAMB16'.
Generating RTLIL representation for module `\RAMB32_S64_ECC'.
Generating RTLIL representation for module `\FIFO18'.
Generating RTLIL representation for module `\FIFO18_36'.
Generating RTLIL representation for module `\FIFO36'.
Generating RTLIL representation for module `\FIFO36_72'.
Generating RTLIL representation for module `\RAMB18'.
Generating RTLIL representation for module `\RAMB36'.
Generating RTLIL representation for module `\RAMB18SDP'.
Generating RTLIL representation for module `\RAMB36SDP'.
Generating RTLIL representation for module `\FIFO18E1'.
Generating RTLIL representation for module `\FIFO36E1'.
Generating RTLIL representation for module `\FIFO18E2'.
Generating RTLIL representation for module `\FIFO36E2'.
Generating RTLIL representation for module `\RAMB18E2'.
Generating RTLIL representation for module `\RAMB36E2'.
Generating RTLIL representation for module `\URAM288'.
Generating RTLIL representation for module `\URAM288_BASE'.
Generating RTLIL representation for module `\DSP48E'.
Generating RTLIL representation for module `\DSP48E2'.
Generating RTLIL representation for module `\FDDRCPE'.
Generating RTLIL representation for module `\FDDRRSE'.
Generating RTLIL representation for module `\IFDDRCPE'.
Generating RTLIL representation for module `\IFDDRRSE'.
Generating RTLIL representation for module `\OFDDRCPE'.
Generating RTLIL representation for module `\OFDDRRSE'.
Generating RTLIL representation for module `\OFDDRTCPE'.
Generating RTLIL representation for module `\OFDDRTRSE'.
Generating RTLIL representation for module `\IDDR2'.
Generating RTLIL representation for module `\ODDR2'.
Generating RTLIL representation for module `\IDDR'.
Generating RTLIL representation for module `\IDDR_2CLK'.
Generating RTLIL representation for module `\ODDR'.
Generating RTLIL representation for module `\IDELAYCTRL'.
Generating RTLIL representation for module `\IDELAY'.
Generating RTLIL representation for module `\ISERDES'.
Generating RTLIL representation for module `\OSERDES'.
Generating RTLIL representation for module `\IODELAY'.
Generating RTLIL representation for module `\ISERDES_NODELAY'.
Generating RTLIL representation for module `\IODELAYE1'.
Generating RTLIL representation for module `\ISERDESE1'.
Generating RTLIL representation for module `\OSERDESE1'.
Generating RTLIL representation for module `\IDELAYE2'.
Generating RTLIL representation for module `\ODELAYE2'.
Generating RTLIL representation for module `\ISERDESE2'.
Generating RTLIL representation for module `\OSERDESE2'.
Generating RTLIL representation for module `\PHASER_IN'.
Generating RTLIL representation for module `\PHASER_IN_PHY'.
Generating RTLIL representation for module `\PHASER_OUT'.
Generating RTLIL representation for module `\PHASER_OUT_PHY'.
Generating RTLIL representation for module `\PHASER_REF'.
Generating RTLIL representation for module `\PHY_CONTROL'.
Generating RTLIL representation for module `\IDDRE1'.
Generating RTLIL representation for module `\ODDRE1'.
Generating RTLIL representation for module `\IDELAYE3'.
Generating RTLIL representation for module `\ODELAYE3'.
Generating RTLIL representation for module `\ISERDESE3'.
Generating RTLIL representation for module `\OSERDESE3'.
Generating RTLIL representation for module `\BITSLICE_CONTROL'.
Generating RTLIL representation for module `\RIU_OR'.
Generating RTLIL representation for module `\RX_BITSLICE'.
Generating RTLIL representation for module `\RXTX_BITSLICE'.
Generating RTLIL representation for module `\TX_BITSLICE'.
Generating RTLIL representation for module `\TX_BITSLICE_TRI'.
Generating RTLIL representation for module `\IODELAY2'.
Generating RTLIL representation for module `\IODRP2'.
Generating RTLIL representation for module `\IODRP2_MCB'.
Generating RTLIL representation for module `\ISERDES2'.
Generating RTLIL representation for module `\OSERDES2'.
Generating RTLIL representation for module `\IBUF_DLY_ADJ'.
Generating RTLIL representation for module `\IBUF_IBUFDISABLE'.
Generating RTLIL representation for module `\IBUF_INTERMDISABLE'.
Generating RTLIL representation for module `\IBUF_ANALOG'.
Generating RTLIL representation for module `\IBUFE3'.
Generating RTLIL representation for module `\IBUFDS'.
Generating RTLIL representation for module `\IBUFDS_DLY_ADJ'.
Generating RTLIL representation for module `\IBUFDS_IBUFDISABLE'.
Generating RTLIL representation for module `\IBUFDS_INTERMDISABLE'.
Generating RTLIL representation for module `\IBUFDS_DIFF_OUT'.
Generating RTLIL representation for module `\IBUFDS_DIFF_OUT_IBUFDISABLE'.
Generating RTLIL representation for module `\IBUFDS_DIFF_OUT_INTERMDISABLE'.
Generating RTLIL representation for module `\IBUFDSE3'.
Generating RTLIL representation for module `\IBUFDS_DPHY'.
Generating RTLIL representation for module `\IBUFGDS'.
Generating RTLIL representation for module `\IBUFGDS_DIFF_OUT'.
Generating RTLIL representation for module `\IOBUF_DCIEN'.
Generating RTLIL representation for module `\IOBUF_INTERMDISABLE'.
Generating RTLIL representation for module `\IOBUFE3'.
Generating RTLIL representation for module `\IOBUFDS'.
Generating RTLIL representation for module `\IOBUFDS_DCIEN'.
Generating RTLIL representation for module `\IOBUFDS_INTERMDISABLE'.
Generating RTLIL representation for module `\IOBUFDS_DIFF_OUT'.
Generating RTLIL representation for module `\IOBUFDS_DIFF_OUT_DCIEN'.
Generating RTLIL representation for module `\IOBUFDS_DIFF_OUT_INTERMDISABLE'.
Generating RTLIL representation for module `\IOBUFDSE3'.
Generating RTLIL representation for module `\OBUFDS'.
Generating RTLIL representation for module `\OBUFDS_DPHY'.
Generating RTLIL representation for module `\OBUFTDS'.
Generating RTLIL representation for module `\KEEPER'.
Generating RTLIL representation for module `\PULLDOWN'.
Generating RTLIL representation for module `\PULLUP'.
Generating RTLIL representation for module `\DCIRESET'.
Generating RTLIL representation for module `\HPIO_VREF'.
Generating RTLIL representation for module `\BUFGCE'.
Generating RTLIL representation for module `\BUFGCE_1'.
Generating RTLIL representation for module `\BUFGMUX'.
Generating RTLIL representation for module `\BUFGMUX_1'.
Generating RTLIL representation for module `\BUFGMUX_CTRL'.
Generating RTLIL representation for module `\BUFGMUX_VIRTEX4'.
Generating RTLIL representation for module `\BUFG_GT'.
Generating RTLIL representation for module `\BUFG_GT_SYNC'.
Generating RTLIL representation for module `\BUFG_PS'.
Generating RTLIL representation for module `\BUFGCE_DIV'.
Generating RTLIL representation for module `\BUFH'.
Generating RTLIL representation for module `\BUFIO2'.
Generating RTLIL representation for module `\BUFIO2_2CLK'.
Generating RTLIL representation for module `\BUFIO2FB'.
Generating RTLIL representation for module `\BUFPLL'.
Generating RTLIL representation for module `\BUFPLL_MCB'.
Generating RTLIL representation for module `\BUFIO'.
Generating RTLIL representation for module `\BUFIODQS'.
Generating RTLIL representation for module `\BUFR'.
Generating RTLIL representation for module `\BUFMR'.
Generating RTLIL representation for module `\BUFMRCE'.
Generating RTLIL representation for module `\DCM'.
Generating RTLIL representation for module `\DCM_SP'.
Generating RTLIL representation for module `\DCM_CLKGEN'.
Generating RTLIL representation for module `\DCM_ADV'.
Generating RTLIL representation for module `\DCM_BASE'.
Generating RTLIL representation for module `\DCM_PS'.
Generating RTLIL representation for module `\PMCD'.
Generating RTLIL representation for module `\PLL_ADV'.
Generating RTLIL representation for module `\PLL_BASE'.
Generating RTLIL representation for module `\MMCM_ADV'.
Generating RTLIL representation for module `\MMCM_BASE'.
Generating RTLIL representation for module `\MMCME2_ADV'.
Generating RTLIL representation for module `\MMCME2_BASE'.
Generating RTLIL representation for module `\PLLE2_ADV'.
Generating RTLIL representation for module `\PLLE2_BASE'.
Generating RTLIL representation for module `\MMCME3_ADV'.
Generating RTLIL representation for module `\MMCME3_BASE'.
Generating RTLIL representation for module `\PLLE3_ADV'.
Generating RTLIL representation for module `\PLLE3_BASE'.
Generating RTLIL representation for module `\MMCME4_ADV'.
Generating RTLIL representation for module `\MMCME4_BASE'.
Generating RTLIL representation for module `\PLLE4_ADV'.
Generating RTLIL representation for module `\PLLE4_BASE'.
Generating RTLIL representation for module `\BUFT'.
Generating RTLIL representation for module `\IN_FIFO'.
Generating RTLIL representation for module `\OUT_FIFO'.
Generating RTLIL representation for module `\HARD_SYNC'.
Generating RTLIL representation for module `\STARTUP_SPARTAN3'.
Generating RTLIL representation for module `\STARTUP_SPARTAN3E'.
Generating RTLIL representation for module `\STARTUP_SPARTAN3A'.
Generating RTLIL representation for module `\STARTUP_SPARTAN6'.
Generating RTLIL representation for module `\STARTUP_VIRTEX4'.
Generating RTLIL representation for module `\STARTUP_VIRTEX5'.
Generating RTLIL representation for module `\STARTUP_VIRTEX6'.
Generating RTLIL representation for module `\STARTUPE2'.
Generating RTLIL representation for module `\STARTUPE3'.
Generating RTLIL representation for module `\CAPTURE_SPARTAN3'.
Generating RTLIL representation for module `\CAPTURE_SPARTAN3A'.
Generating RTLIL representation for module `\CAPTURE_VIRTEX4'.
Generating RTLIL representation for module `\CAPTURE_VIRTEX5'.
Generating RTLIL representation for module `\CAPTURE_VIRTEX6'.
Generating RTLIL representation for module `\CAPTUREE2'.
Generating RTLIL representation for module `\ICAP_SPARTAN3A'.
Generating RTLIL representation for module `\ICAP_SPARTAN6'.
Generating RTLIL representation for module `\ICAP_VIRTEX4'.
Generating RTLIL representation for module `\ICAP_VIRTEX5'.
Generating RTLIL representation for module `\ICAP_VIRTEX6'.
Generating RTLIL representation for module `\ICAPE2'.
Generating RTLIL representation for module `\ICAPE3'.
Generating RTLIL representation for module `\BSCAN_SPARTAN3'.
Generating RTLIL representation for module `\BSCAN_SPARTAN3A'.
Generating RTLIL representation for module `\BSCAN_SPARTAN6'.
Generating RTLIL representation for module `\BSCAN_VIRTEX4'.
Generating RTLIL representation for module `\BSCAN_VIRTEX5'.
Generating RTLIL representation for module `\BSCAN_VIRTEX6'.
Generating RTLIL representation for module `\BSCANE2'.
Generating RTLIL representation for module `\DNA_PORT'.
Generating RTLIL representation for module `\DNA_PORTE2'.
Generating RTLIL representation for module `\FRAME_ECC_VIRTEX4'.
Generating RTLIL representation for module `\FRAME_ECC_VIRTEX5'.
Generating RTLIL representation for module `\FRAME_ECC_VIRTEX6'.
Generating RTLIL representation for module `\FRAME_ECCE2'.
Generating RTLIL representation for module `\FRAME_ECCE3'.
Generating RTLIL representation for module `\FRAME_ECCE4'.
Generating RTLIL representation for module `\USR_ACCESS_VIRTEX4'.
Generating RTLIL representation for module `\USR_ACCESS_VIRTEX5'.
Generating RTLIL representation for module `\USR_ACCESS_VIRTEX6'.
Generating RTLIL representation for module `\USR_ACCESSE2'.
Generating RTLIL representation for module `\POST_CRC_INTERNAL'.
Generating RTLIL representation for module `\SUSPEND_SYNC'.
Generating RTLIL representation for module `\KEY_CLEAR'.
Generating RTLIL representation for module `\MASTER_JTAG'.
Generating RTLIL representation for module `\SPI_ACCESS'.
Generating RTLIL representation for module `\EFUSE_USR'.
Generating RTLIL representation for module `\SYSMON'.
Generating RTLIL representation for module `\XADC'.
Generating RTLIL representation for module `\SYSMONE1'.
Generating RTLIL representation for module `\SYSMONE4'.
Generating RTLIL representation for module `\GTPA1_DUAL'.
Generating RTLIL representation for module `\GT11_CUSTOM'.
Generating RTLIL representation for module `\GT11_DUAL'.
Generating RTLIL representation for module `\GT11CLK'.
Generating RTLIL representation for module `\GT11CLK_MGT'.
Generating RTLIL representation for module `\GTP_DUAL'.
Generating RTLIL representation for module `\GTX_DUAL'.
Generating RTLIL representation for module `\CRC32'.
Generating RTLIL representation for module `\CRC64'.
Generating RTLIL representation for module `\GTHE1_QUAD'.
Generating RTLIL representation for module `\GTXE1'.
Generating RTLIL representation for module `\IBUFDS_GTXE1'.
Generating RTLIL representation for module `\IBUFDS_GTHE1'.
Generating RTLIL representation for module `\GTHE2_CHANNEL'.
Generating RTLIL representation for module `\GTHE2_COMMON'.
Generating RTLIL representation for module `\GTPE2_CHANNEL'.
Generating RTLIL representation for module `\GTPE2_COMMON'.
Generating RTLIL representation for module `\GTXE2_CHANNEL'.
Generating RTLIL representation for module `\GTXE2_COMMON'.
Generating RTLIL representation for module `\IBUFDS_GTE2'.
Generating RTLIL representation for module `\GTHE3_CHANNEL'.
Generating RTLIL representation for module `\GTHE3_COMMON'.
Generating RTLIL representation for module `\GTYE3_CHANNEL'.
Generating RTLIL representation for module `\GTYE3_COMMON'.
Generating RTLIL representation for module `\IBUFDS_GTE3'.
Generating RTLIL representation for module `\OBUFDS_GTE3'.
Generating RTLIL representation for module `\OBUFDS_GTE3_ADV'.
Generating RTLIL representation for module `\GTHE4_CHANNEL'.
Generating RTLIL representation for module `\GTHE4_COMMON'.
Generating RTLIL representation for module `\GTYE4_CHANNEL'.
Generating RTLIL representation for module `\GTYE4_COMMON'.
Generating RTLIL representation for module `\IBUFDS_GTE4'.
Generating RTLIL representation for module `\OBUFDS_GTE4'.
Generating RTLIL representation for module `\OBUFDS_GTE4_ADV'.
Generating RTLIL representation for module `\GTM_DUAL'.
Generating RTLIL representation for module `\IBUFDS_GTM'.
Generating RTLIL representation for module `\OBUFDS_GTM'.
Generating RTLIL representation for module `\OBUFDS_GTM_ADV'.
Generating RTLIL representation for module `\HSDAC'.
Generating RTLIL representation for module `\HSADC'.
Generating RTLIL representation for module `\RFDAC'.
Generating RTLIL representation for module `\RFADC'.
Generating RTLIL representation for module `\PCIE_A1'.
Generating RTLIL representation for module `\PCIE_EP'.
Generating RTLIL representation for module `\PCIE_2_0'.
Generating RTLIL representation for module `\PCIE_2_1'.
Generating RTLIL representation for module `\PCIE_3_0'.
Generating RTLIL representation for module `\PCIE_3_1'.
Generating RTLIL representation for module `\PCIE40E4'.
Generating RTLIL representation for module `\PCIE4CE4'.
Generating RTLIL representation for module `\EMAC'.
Generating RTLIL representation for module `\TEMAC'.
Generating RTLIL representation for module `\TEMAC_SINGLE'.
Generating RTLIL representation for module `\CMAC'.
Generating RTLIL representation for module `\CMACE4'.
Generating RTLIL representation for module `\MCB'.
Generating RTLIL representation for module `\HBM_REF_CLK'.
Generating RTLIL representation for module `\HBM_SNGLBLI_INTF_APB'.
Generating RTLIL representation for module `\HBM_SNGLBLI_INTF_AXI'.
Generating RTLIL representation for module `\HBM_ONE_STACK_INTF'.
Generating RTLIL representation for module `\HBM_TWO_STACK_INTF'.
Generating RTLIL representation for module `\PPC405_ADV'.
Generating RTLIL representation for module `\PPC440'.
Generating RTLIL representation for module `\PS7'.
Generating RTLIL representation for module `\PS8'.
Generating RTLIL representation for module `\ILKN'.
Generating RTLIL representation for module `\ILKNE4'.
Generating RTLIL representation for module `\VCU'.
Generating RTLIL representation for module `\FE'.
Successfully finished Verilog frontend.

3.3. Executing HIERARCHY pass (managing design hierarchy).

3.3.1. Analyzing design hierarchy..
Top module:  \ALU_wrapper
Used module:     \ALU8

3.3.2. Analyzing design hierarchy..
Top module:  \ALU_wrapper
Used module:     \ALU8
Removed 0 unused modules.

3.4. Executing PROC pass (convert processes to netlists).

3.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1986$946 in module RAM64M.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1812$826 in module RAM32M.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1716$773 in module RAM128X1D.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1611$736 in module RAM64X1D.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1565$718 in module RAM32X1D_1.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1506$688 in module RAM32X1D.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:815$637 in module FDPE_1.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:774$634 in module FDPE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:736$619 in module FDCE_1.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:695$616 in module FDCE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:592$601 in module FDSE_1.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:559$597 in module FDSE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:527$579 in module FDRE_1.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:494$575 in module FDRE.
Removed 1 dead cases from process $proc$../../../source/ALU8.v:67$14 in module ALU8.
Marked 1 switch rules as full_case in process $proc$../../../source/ALU8.v:67$14 in module ALU8.
Removed 1 dead cases from process $proc$../../../source/ALU8.v:53$10 in module ALU8.
Marked 2 switch rules as full_case in process $proc$../../../source/ALU8.v:53$10 in module ALU8.
Marked 4 switch rules as full_case in process $proc$../../../source/ALU_wrapper.v:161$5 in module ALU_wrapper.
Marked 1 switch rules as full_case in process $proc$../../../source/ALU_wrapper.v:114$3 in module ALU_wrapper.
Marked 1 switch rules as full_case in process $proc$../../../source/ALU_wrapper.v:83$2 in module ALU_wrapper.
Marked 14 switch rules as full_case in process $proc$../../../source/ALU_wrapper.v:49$1 in module ALU_wrapper.
Removed a total of 2 dead cases.

3.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 72 assignments to connections.

3.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SRLC32E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2405$1075'.
  Set init value: \r = 0
Found init rule in `\SRLC16E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2361$1068'.
  Set init value: \r = 16'0000000000000000
Found init rule in `\SRLC16.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2329$1061'.
  Set init value: \r = 16'0000000000000000
Found init rule in `\SRL16E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2292$1058'.
  Set init value: \r = 16'0000000000000000
Found init rule in `\SRL16.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2264$1051'.
  Set init value: \r = 16'0000000000000000
Found init rule in `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1980$1024'.
  Set init value: \mem_d = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1979$1023'.
  Set init value: \mem_c = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1978$1022'.
  Set init value: \mem_b = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1977$1021'.
  Set init value: \mem_a = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1806$924'.
  Set init value: \mem_d = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1805$923'.
  Set init value: \mem_c = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1804$922'.
  Set init value: \mem_b = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1803$921'.
  Set init value: \mem_a = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM128X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1712$803'.
  Set init value: \mem = 128'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM64X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1607$766'.
  Set init value: \mem = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32X1D_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1561$730'.
  Set init value: \mem = 0
Found init rule in `\RAM32X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1502$712'.
  Set init value: \mem = 0
Found init rule in `\FDPE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$640'.
  Set init value: \Q = 1'1
Found init rule in `\FDPE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$636'.
  Set init value: \Q = 1'1
Found init rule in `\FDCE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$622'.
  Set init value: \Q = 1'0
Found init rule in `\FDCE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$618'.
  Set init value: \Q = 1'0
Found init rule in `\FDSE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$604'.
  Set init value: \Q = 1'1
Found init rule in `\FDSE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$600'.
  Set init value: \Q = 1'1
Found init rule in `\FDRE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$582'.
  Set init value: \Q = 1'0
Found init rule in `\FDRE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$578'.
  Set init value: \Q = 1'0

3.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \PRE in `\FDPE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:815$637'.
Found async reset \PRE in `\FDPE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:774$634'.
Found async reset \CLR in `\FDCE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:736$619'.
Found async reset \CLR in `\FDCE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:695$616'.
Found async reset \reset in `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:161$5'.
Found async reset \reset in `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:114$3'.
Found async reset \reset in `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:49$1'.

3.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~44 debug messages>

3.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SRLC32E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2405$1075'.
Creating decoders for process `\SRLC32E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2413$1074'.
     1/1: $0\r[31:0]
Creating decoders for process `\SRLC16E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2361$1068'.
Creating decoders for process `\SRLC16E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2369$1067'.
     1/1: $0\r[15:0]
Creating decoders for process `\SRLC16.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2329$1061'.
Creating decoders for process `\SRLC16.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2332$1060'.
Creating decoders for process `\SRL16E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2292$1058'.
Creating decoders for process `\SRL16E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2299$1057'.
     1/1: $0\r[15:0]
Creating decoders for process `\SRL16.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2264$1051'.
Creating decoders for process `\SRL16.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2266$1050'.
Creating decoders for process `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1980$1024'.
Creating decoders for process `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1979$1023'.
Creating decoders for process `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1978$1022'.
Creating decoders for process `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1977$1021'.
Creating decoders for process `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1986$946'.
     1/8: $1$lookahead\mem_d$945[63:0]$962
     2/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1991$936[5:0]$958
     3/8: $1$lookahead\mem_c$944[63:0]$961
     4/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1990$935[5:0]$957
     5/8: $1$lookahead\mem_b$943[63:0]$960
     6/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1989$934[5:0]$956
     7/8: $1$lookahead\mem_a$942[63:0]$959
     8/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1988$933[5:0]$955
Creating decoders for process `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1806$924'.
Creating decoders for process `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1805$923'.
Creating decoders for process `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1804$922'.
Creating decoders for process `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1803$921'.
Creating decoders for process `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1812$826'.
     1/8: $1$lookahead\mem_d$825[63:0]$842
     2/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1817$808[31:0]$838
     3/8: $1$lookahead\mem_c$824[63:0]$841
     4/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1816$807[31:0]$837
     5/8: $1$lookahead\mem_b$823[63:0]$840
     6/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1815$806[31:0]$836
     7/8: $1$lookahead\mem_a$822[63:0]$839
     8/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1814$805[31:0]$835
Creating decoders for process `\RAM128X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1712$803'.
Creating decoders for process `\RAM128X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1716$773'.
     1/2: $1$lookahead\mem$772[127:0]$777
     2/2: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1716$768[6:0]$776
Creating decoders for process `\RAM64X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1607$766'.
Creating decoders for process `\RAM64X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1611$736'.
     1/2: $1$lookahead\mem$735[63:0]$740
     2/2: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1611$731[5:0]$739
Creating decoders for process `\RAM32X1D_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1561$730'.
Creating decoders for process `\RAM32X1D_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1565$718'.
     1/2: $1$lookahead\mem$717[31:0]$722
     2/2: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1565$713[4:0]$721
Creating decoders for process `\RAM32X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1502$712'.
Creating decoders for process `\RAM32X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1506$688'.
     1/2: $1$lookahead\mem$687[31:0]$692
     2/2: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1506$683[4:0]$691
Creating decoders for process `\FDPE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$640'.
Creating decoders for process `\FDPE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:815$637'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDPE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$636'.
Creating decoders for process `\FDPE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:774$634'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDCE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$622'.
Creating decoders for process `\FDCE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:736$619'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDCE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$618'.
Creating decoders for process `\FDCE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:695$616'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDSE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$604'.
Creating decoders for process `\FDSE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:592$601'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDSE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$600'.
Creating decoders for process `\FDSE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:559$597'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDRE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$582'.
Creating decoders for process `\FDRE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:527$579'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDRE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$578'.
Creating decoders for process `\FDRE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:494$575'.
     1/1: $0\Q[0:0]
Creating decoders for process `\ALU8.$proc$../../../source/ALU8.v:87$21'.
Creating decoders for process `\ALU8.$proc$../../../source/ALU8.v:67$14'.
     1/1: $1\temp_BI[7:0]
Creating decoders for process `\ALU8.$proc$../../../source/ALU8.v:53$10'.
     1/2: $2\temp_logic[8:0]
     2/2: $1\temp_logic[8:0]
Creating decoders for process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:161$5'.
     1/1: $0\ACC_o[7:0]
Creating decoders for process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:114$3'.
     1/2: $0\rB[7:0]
     2/2: $0\rA[7:0]
Creating decoders for process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:83$2'.
     1/5: $1\LoadA[0:0]
     2/5: $1\OutFlag[0:0]
     3/5: $1\LoadCmd[0:0]
     4/5: $1\LoadB[0:0]
     5/5: $1\Done_o[0:0]
Creating decoders for process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:49$1'.
     1/1: $0\state[2:0]

3.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\ALU8.\temp_l' from process `\ALU8.$proc$../../../source/ALU8.v:87$21'.
No latch inferred for signal `\ALU8.\temp_h' from process `\ALU8.$proc$../../../source/ALU8.v:87$21'.
No latch inferred for signal `\ALU8.\temp_BI' from process `\ALU8.$proc$../../../source/ALU8.v:67$14'.
No latch inferred for signal `\ALU8.\temp_logic' from process `\ALU8.$proc$../../../source/ALU8.v:53$10'.
No latch inferred for signal `\ALU_wrapper.\Done_o' from process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:83$2'.
No latch inferred for signal `\ALU_wrapper.\LoadA' from process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:83$2'.
No latch inferred for signal `\ALU_wrapper.\LoadB' from process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:83$2'.
No latch inferred for signal `\ALU_wrapper.\LoadCmd' from process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:83$2'.
No latch inferred for signal `\ALU_wrapper.\OutFlag' from process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:83$2'.

3.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SRLC32E.\r' using process `\SRLC32E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2413$1074'.
  created $dff cell `$procdff$1326' with positive edge clock.
Creating register for signal `\SRLC16E.\r' using process `\SRLC16E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2369$1067'.
  created $dff cell `$procdff$1327' with positive edge clock.
Creating register for signal `\SRLC16.\r' using process `\SRLC16.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2332$1060'.
  created $dff cell `$procdff$1328' with positive edge clock.
Creating register for signal `\SRL16E.\r' using process `\SRL16E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2299$1057'.
  created $dff cell `$procdff$1329' with positive edge clock.
Creating register for signal `\SRL16.\r' using process `\SRL16.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2266$1050'.
  created $dff cell `$procdff$1330' with positive edge clock.
Creating register for signal `\RAM64M.\mem_a' using process `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1986$946'.
  created $dff cell `$procdff$1331' with positive edge clock.
Creating register for signal `\RAM64M.\mem_b' using process `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1986$946'.
  created $dff cell `$procdff$1332' with positive edge clock.
Creating register for signal `\RAM64M.\mem_c' using process `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1986$946'.
  created $dff cell `$procdff$1333' with positive edge clock.
Creating register for signal `\RAM64M.\mem_d' using process `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1986$946'.
  created $dff cell `$procdff$1334' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1988$933' using process `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1986$946'.
  created $dff cell `$procdff$1335' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1989$934' using process `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1986$946'.
  created $dff cell `$procdff$1336' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1990$935' using process `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1986$946'.
  created $dff cell `$procdff$1337' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1991$936' using process `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1986$946'.
  created $dff cell `$procdff$1338' with positive edge clock.
Creating register for signal `\RAM64M.$lookahead\mem_a$942' using process `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1986$946'.
  created $dff cell `$procdff$1339' with positive edge clock.
Creating register for signal `\RAM64M.$lookahead\mem_b$943' using process `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1986$946'.
  created $dff cell `$procdff$1340' with positive edge clock.
Creating register for signal `\RAM64M.$lookahead\mem_c$944' using process `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1986$946'.
  created $dff cell `$procdff$1341' with positive edge clock.
Creating register for signal `\RAM64M.$lookahead\mem_d$945' using process `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1986$946'.
  created $dff cell `$procdff$1342' with positive edge clock.
Creating register for signal `\RAM32M.\mem_a' using process `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1812$826'.
  created $dff cell `$procdff$1343' with positive edge clock.
Creating register for signal `\RAM32M.\mem_b' using process `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1812$826'.
  created $dff cell `$procdff$1344' with positive edge clock.
Creating register for signal `\RAM32M.\mem_c' using process `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1812$826'.
  created $dff cell `$procdff$1345' with positive edge clock.
Creating register for signal `\RAM32M.\mem_d' using process `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1812$826'.
  created $dff cell `$procdff$1346' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1814$805' using process `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1812$826'.
  created $dff cell `$procdff$1347' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1815$806' using process `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1812$826'.
  created $dff cell `$procdff$1348' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1816$807' using process `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1812$826'.
  created $dff cell `$procdff$1349' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1817$808' using process `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1812$826'.
  created $dff cell `$procdff$1350' with positive edge clock.
Creating register for signal `\RAM32M.$lookahead\mem_a$822' using process `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1812$826'.
  created $dff cell `$procdff$1351' with positive edge clock.
Creating register for signal `\RAM32M.$lookahead\mem_b$823' using process `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1812$826'.
  created $dff cell `$procdff$1352' with positive edge clock.
Creating register for signal `\RAM32M.$lookahead\mem_c$824' using process `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1812$826'.
  created $dff cell `$procdff$1353' with positive edge clock.
Creating register for signal `\RAM32M.$lookahead\mem_d$825' using process `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1812$826'.
  created $dff cell `$procdff$1354' with positive edge clock.
Creating register for signal `\RAM128X1D.\mem' using process `\RAM128X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1716$773'.
  created $dff cell `$procdff$1355' with positive edge clock.
Creating register for signal `\RAM128X1D.$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1716$768' using process `\RAM128X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1716$773'.
  created $dff cell `$procdff$1356' with positive edge clock.
Creating register for signal `\RAM128X1D.$lookahead\mem$772' using process `\RAM128X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1716$773'.
  created $dff cell `$procdff$1357' with positive edge clock.
Creating register for signal `\RAM64X1D.\mem' using process `\RAM64X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1611$736'.
  created $dff cell `$procdff$1358' with positive edge clock.
Creating register for signal `\RAM64X1D.$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1611$731' using process `\RAM64X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1611$736'.
  created $dff cell `$procdff$1359' with positive edge clock.
Creating register for signal `\RAM64X1D.$lookahead\mem$735' using process `\RAM64X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1611$736'.
  created $dff cell `$procdff$1360' with positive edge clock.
Creating register for signal `\RAM32X1D_1.\mem' using process `\RAM32X1D_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1565$718'.
  created $dff cell `$procdff$1361' with negative edge clock.
Creating register for signal `\RAM32X1D_1.$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1565$713' using process `\RAM32X1D_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1565$718'.
  created $dff cell `$procdff$1362' with negative edge clock.
Creating register for signal `\RAM32X1D_1.$lookahead\mem$717' using process `\RAM32X1D_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1565$718'.
  created $dff cell `$procdff$1363' with negative edge clock.
Creating register for signal `\RAM32X1D.\mem' using process `\RAM32X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1506$688'.
  created $dff cell `$procdff$1364' with positive edge clock.
Creating register for signal `\RAM32X1D.$bitselwrite$pos$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1506$683' using process `\RAM32X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1506$688'.
  created $dff cell `$procdff$1365' with positive edge clock.
Creating register for signal `\RAM32X1D.$lookahead\mem$687' using process `\RAM32X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1506$688'.
  created $dff cell `$procdff$1366' with positive edge clock.
Creating register for signal `\FDPE_1.\Q' using process `\FDPE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:815$637'.
  created $adff cell `$procdff$1367' with negative edge clock and positive level reset.
Creating register for signal `\FDPE.\Q' using process `\FDPE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:774$634'.
  created $adff cell `$procdff$1368' with positive edge clock and positive level reset.
Creating register for signal `\FDCE_1.\Q' using process `\FDCE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:736$619'.
  created $adff cell `$procdff$1369' with negative edge clock and positive level reset.
Creating register for signal `\FDCE.\Q' using process `\FDCE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:695$616'.
  created $adff cell `$procdff$1370' with positive edge clock and positive level reset.
Creating register for signal `\FDSE_1.\Q' using process `\FDSE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:592$601'.
  created $dff cell `$procdff$1371' with negative edge clock.
Creating register for signal `\FDSE.\Q' using process `\FDSE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:559$597'.
  created $dff cell `$procdff$1372' with positive edge clock.
Creating register for signal `\FDRE_1.\Q' using process `\FDRE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:527$579'.
  created $dff cell `$procdff$1373' with negative edge clock.
Creating register for signal `\FDRE.\Q' using process `\FDRE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:494$575'.
  created $dff cell `$procdff$1374' with positive edge clock.
Creating register for signal `\ALU_wrapper.\ACC_o' using process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:161$5'.
  created $adff cell `$procdff$1375' with positive edge clock and positive level reset.
Creating register for signal `\ALU_wrapper.\rA' using process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:114$3'.
  created $adff cell `$procdff$1376' with positive edge clock and positive level reset.
Creating register for signal `\ALU_wrapper.\rB' using process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:114$3'.
  created $adff cell `$procdff$1377' with positive edge clock and positive level reset.
Creating register for signal `\ALU_wrapper.\state' using process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:49$1'.
  created $adff cell `$procdff$1378' with positive edge clock and positive level reset.

3.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SRLC32E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2405$1075'.
Found and cleaned up 1 empty switch in `\SRLC32E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2413$1074'.
Removing empty process `SRLC32E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2413$1074'.
Removing empty process `SRLC16E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2361$1068'.
Found and cleaned up 1 empty switch in `\SRLC16E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2369$1067'.
Removing empty process `SRLC16E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2369$1067'.
Removing empty process `SRLC16.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2329$1061'.
Removing empty process `SRLC16.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2332$1060'.
Removing empty process `SRL16E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2292$1058'.
Found and cleaned up 1 empty switch in `\SRL16E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2299$1057'.
Removing empty process `SRL16E.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2299$1057'.
Removing empty process `SRL16.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2264$1051'.
Removing empty process `SRL16.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:2266$1050'.
Removing empty process `RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1980$1024'.
Removing empty process `RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1979$1023'.
Removing empty process `RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1978$1022'.
Removing empty process `RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1977$1021'.
Found and cleaned up 1 empty switch in `\RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1986$946'.
Removing empty process `RAM64M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1986$946'.
Removing empty process `RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1806$924'.
Removing empty process `RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1805$923'.
Removing empty process `RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1804$922'.
Removing empty process `RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1803$921'.
Found and cleaned up 1 empty switch in `\RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1812$826'.
Removing empty process `RAM32M.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1812$826'.
Removing empty process `RAM128X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1712$803'.
Found and cleaned up 1 empty switch in `\RAM128X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1716$773'.
Removing empty process `RAM128X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1716$773'.
Removing empty process `RAM64X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1607$766'.
Found and cleaned up 1 empty switch in `\RAM64X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1611$736'.
Removing empty process `RAM64X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1611$736'.
Removing empty process `RAM32X1D_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1561$730'.
Found and cleaned up 1 empty switch in `\RAM32X1D_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1565$718'.
Removing empty process `RAM32X1D_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1565$718'.
Removing empty process `RAM32X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1502$712'.
Found and cleaned up 1 empty switch in `\RAM32X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1506$688'.
Removing empty process `RAM32X1D.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:1506$688'.
Removing empty process `FDPE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$640'.
Found and cleaned up 1 empty switch in `\FDPE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:815$637'.
Removing empty process `FDPE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:815$637'.
Removing empty process `FDPE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$636'.
Found and cleaned up 1 empty switch in `\FDPE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:774$634'.
Removing empty process `FDPE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:774$634'.
Removing empty process `FDCE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$622'.
Found and cleaned up 1 empty switch in `\FDCE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:736$619'.
Removing empty process `FDCE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:736$619'.
Removing empty process `FDCE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$618'.
Found and cleaned up 1 empty switch in `\FDCE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:695$616'.
Removing empty process `FDCE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:695$616'.
Removing empty process `FDSE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$604'.
Found and cleaned up 2 empty switches in `\FDSE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:592$601'.
Removing empty process `FDSE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:592$601'.
Removing empty process `FDSE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$600'.
Found and cleaned up 2 empty switches in `\FDSE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:559$597'.
Removing empty process `FDSE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:559$597'.
Removing empty process `FDRE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$582'.
Found and cleaned up 2 empty switches in `\FDRE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:527$579'.
Removing empty process `FDRE_1.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:527$579'.
Removing empty process `FDRE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:0$578'.
Found and cleaned up 2 empty switches in `\FDRE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:494$575'.
Removing empty process `FDRE.$proc$/usr/local/bin/../share/yosys/xilinx/cells_sim.v:494$575'.
Removing empty process `ALU8.$proc$../../../source/ALU8.v:87$21'.
Found and cleaned up 1 empty switch in `\ALU8.$proc$../../../source/ALU8.v:67$14'.
Removing empty process `ALU8.$proc$../../../source/ALU8.v:67$14'.
Found and cleaned up 2 empty switches in `\ALU8.$proc$../../../source/ALU8.v:53$10'.
Removing empty process `ALU8.$proc$../../../source/ALU8.v:53$10'.
Found and cleaned up 4 empty switches in `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:161$5'.
Removing empty process `ALU_wrapper.$proc$../../../source/ALU_wrapper.v:161$5'.
Found and cleaned up 2 empty switches in `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:114$3'.
Removing empty process `ALU_wrapper.$proc$../../../source/ALU_wrapper.v:114$3'.
Found and cleaned up 1 empty switch in `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:83$2'.
Removing empty process `ALU_wrapper.$proc$../../../source/ALU_wrapper.v:83$2'.
Found and cleaned up 13 empty switches in `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:49$1'.
Removing empty process `ALU_wrapper.$proc$../../../source/ALU_wrapper.v:49$1'.
Cleaned up 44 empty switches.

3.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU8.
<suppressed ~2 debug messages>
Optimizing module ALU_wrapper.

3.5. Executing FLATTEN pass (flatten design).
Deleting now unused module ALU8.
<suppressed ~1 debug messages>

3.6. Executing TRIBUF pass.

3.7. Executing DEMINOUT pass (demote inout ports to input or output).

3.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..
Removed 0 unused cells and 57 unused wires.
<suppressed ~2 debug messages>

3.10. Executing CHECK pass (checking for obvious problems).
Checking module ALU_wrapper...
Found and reported 0 problems.

3.11. Executing OPT pass (performing simple optimizations).

3.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

3.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

3.11.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

3.11.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU_wrapper.
Performed a total of 0 changes.

3.11.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

3.11.6. Executing OPT_DFF pass (perform DFF optimizations).

3.11.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

3.11.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

3.11.9. Rerunning OPT passes. (Maybe there is more to do..)

3.11.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

3.11.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU_wrapper.
    New ctrl vector for $pmux cell $procmux$1293: { $procmux$1267_CMP $procmux$1279_CMP $procmux$1274_CMP $auto$opt_reduce.cc:134:opt_pmux$1381 }
  Optimizing cells in module \ALU_wrapper.
Performed a total of 1 changes.

3.11.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

3.11.13. Executing OPT_DFF pass (perform DFF optimizations).

3.11.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..

3.11.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

3.11.16. Rerunning OPT passes. (Maybe there is more to do..)

3.11.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

3.11.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU_wrapper.
Performed a total of 0 changes.

3.11.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

3.11.20. Executing OPT_DFF pass (perform DFF optimizations).

3.11.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..

3.11.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

3.11.23. Finished OPT passes. (There is nothing left to do.)

3.12. Executing FSM pass (extract and optimize FSM).

3.12.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking ALU_wrapper.state as FSM state register:
    Circuit seems to be self-resetting.

3.12.2. Executing FSM_EXTRACT pass (extracting FSM from design).

3.12.3. Executing FSM_OPT pass (simple optimizations of FSMs).

3.12.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..

3.12.5. Executing FSM_OPT pass (simple optimizations of FSMs).

3.12.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

3.12.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

3.12.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

3.13. Executing OPT pass (performing simple optimizations).

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU_wrapper.
Performed a total of 0 changes.

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

3.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$1377 ($adff) from module ALU_wrapper (D = \ABCmd_i, Q = \rB).
Adding EN signal on $procdff$1376 ($adff) from module ALU_wrapper (D = \ABCmd_i, Q = \rA).
Adding EN signal on $procdff$1375 ($adff) from module ALU_wrapper (D = $0\ACC_o[7:0], Q = \ACC_o).

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.
<suppressed ~1 debug messages>

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU_wrapper.
Performed a total of 0 changes.

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

3.13.13. Executing OPT_DFF pass (perform DFF optimizations).

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

3.13.16. Finished OPT passes. (There is nothing left to do.)

3.14. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 3) from port B of cell ALU_wrapper.$procmux$1267_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ALU_wrapper.$procmux$1279_CMP0 ($eq).
Removed top 1 bits (of 3) from mux cell ALU_wrapper.$procmux$1285 ($mux).
Removed top 1 bits (of 3) from mux cell ALU_wrapper.$procmux$1288 ($mux).
Removed top 2 bits (of 3) from port B of cell ALU_wrapper.$procmux$1325_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell ALU_wrapper.$flatten\u_ALU8.$procmux$1245_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell ALU_wrapper.$flatten\u_ALU8.$procmux$1237_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell ALU_wrapper.$flatten\u_ALU8.$ternary$../../../source/ALU8.v:48$9 ($mux).
Removed top 1 bits (of 3) from wire ALU_wrapper.$procmux$1285_Y.
Removed top 1 bits (of 3) from wire ALU_wrapper.$procmux$1288_Y.

3.15. Executing PEEPOPT pass (run peephole optimizers).

3.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

3.17. Executing PMUX2SHIFTX pass.
Inspecting $pmux cell ALU_wrapper/$flatten\u_ALU8.$procmux$1234.
  data width: 8 (next power-of-2 = 8, log2 = 3)
  checking ctrl signal \ABCmd_i [3:2]
    best permutation: \ABCmd_i [3:2]
    best xor mask: 2'00
      0: 2'11 -> 2'11 -> 2'11: 8'00000000
      1: 2'10 -> 2'10 -> 2'10: \u_ALU8.temp_logic [7:0]
      2: 2'01 -> 2'01 -> 2'01: $flatten\u_ALU8.$not$../../../source/ALU8.v:70$15_Y
      3: 2'00 -> 2'00 -> 2'00: \rB
    choices: 4
    min choice: 0
    max choice: 3
    range density: 100%
    absolute density: 100%
    full density: 100%
    update to full case.
    new min choice: 0
    new max choice: 3
    full case: true
    created $shiftx cell $auto$pmux2shiftx.cc:711:execute$1390.
Inspecting $pmux cell ALU_wrapper/$flatten\u_ALU8.$procmux$1242.
  data width: 9 (next power-of-2 = 16, log2 = 4)
  checking ctrl signal \ABCmd_i [1:0]
    best permutation: \ABCmd_i [1:0]
    best xor mask: 2'00
      0: 2'11 -> 2'11 -> 2'11: { 1'0 \rA }
      1: 2'10 -> 2'10 -> 2'10: { 1'0 $flatten\u_ALU8.$xor$../../../source/ALU8.v:57$13_Y }
      2: 2'01 -> 2'01 -> 2'01: { 1'0 $flatten\u_ALU8.$and$../../../source/ALU8.v:56$12_Y }
      3: 2'00 -> 2'00 -> 2'00: { 1'0 $flatten\u_ALU8.$or$../../../source/ALU8.v:55$11_Y }
    choices: 4
    min choice: 0
    max choice: 3
    range density: 100%
    absolute density: 100%
    full density: 100%
    update to full case.
    new min choice: 0
    new max choice: 3
    full case: true
    created $shiftx cell $auto$pmux2shiftx.cc:711:execute$1392.
Inspecting $pmux cell ALU_wrapper/$procmux$1293.
  data width: 3 (next power-of-2 = 4, log2 = 2)
  checking ctrl signal \state
    best permutation: \state
    best xor mask: 3'000
      1: 3'100 -> 3'100 -> 3'100: $procmux$1299_Y
      2: 3'011 -> 3'011 -> 3'011: $procmux$1306_Y
      3: 3'010 -> 3'010 -> 3'010: $procmux$1313_Y
    choices: 3
    min choice: 2
    max choice: 4
    range density: 100%
    absolute density: 60%
    full case: false
    created $shiftx cell $auto$pmux2shiftx.cc:711:execute$1396.
Removed 7 unused cells and 7 unused wires.

3.18. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

3.19. Executing TECHMAP pass (map to technology primitives).

3.19.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

3.19.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/xilinx/xc7_dsp_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/xilinx/xc7_dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL25X18'.
Successfully finished Verilog frontend.

3.19.3. Continuing TECHMAP pass.
Using template $paramod$a401ee114c0c9b2ce72be77ae746d4193a701a25\_80_mul for cells of type $mul.
Using template $paramod$2eefbd5b9110a217e13141bfd294cb0b740b282a\_80_mul for cells of type $mul.
Using template $paramod$09e06b97c1c3281a03f038b874a581fe14aa196c\$__MUL25X18 for cells of type $__MUL25X18.
No more expansions possible.
<suppressed ~128 debug messages>

3.20. Executing OPT_EXPR pass (perform const folding).

3.21. Executing WREDUCE pass (reducing word size of cells).

3.22. Executing XILINX_DSP pass (pack resources into DSPs).
Analysing ALU_wrapper.$mul$../../../source/ALU_wrapper.v:142$4 for Xilinx DSP packing.

<suppressed ~13 debug messages>

3.23. Executing TECHMAP pass (map to technology primitives).

3.23.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

3.23.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lcu.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lcu.v' to AST representation.
Generating RTLIL representation for module `\_80_lcu_cmp_'.
Generating RTLIL representation for module `\$__CMP2LCU'.
Successfully finished Verilog frontend.

3.23.3. Continuing TECHMAP pass.
Using template $paramod$f6897d0e7652978ed884a6b5aa0446bfbef5f56c\_80_lcu_cmp_ for cells of type $ge.
Using template $paramod$fe07bad597930806ee515799ef65d24c28335e59\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$c168ec4cb81cf86f7dbd588f2034131e9f6b5110\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$01971fc8419b6bdb76e5b8233c4f4f06e4913e0f\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$d3eeb6e2d01428a72672a53879db9de0459eb59e\$__CMP2LCU for cells of type $__CMP2LCU.
No more expansions possible.
<suppressed ~138 debug messages>

3.24. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ALU_wrapper:
  creating $macc model for $flatten\u_ALU8.$add$../../../source/ALU8.v:89$22 ($add).
  creating $macc model for $flatten\u_ALU8.$add$../../../source/ALU8.v:89$23 ($add).
  creating $macc model for $flatten\u_ALU8.$add$../../../source/ALU8.v:90$24 ($add).
  creating $macc model for $flatten\u_ALU8.$add$../../../source/ALU8.v:90$25 ($add).
  merging $macc model for $flatten\u_ALU8.$add$../../../source/ALU8.v:90$24 into $flatten\u_ALU8.$add$../../../source/ALU8.v:90$25.
  merging $macc model for $flatten\u_ALU8.$add$../../../source/ALU8.v:89$22 into $flatten\u_ALU8.$add$../../../source/ALU8.v:89$23.
  creating $alu model for $macc $flatten\u_ALU8.$add$../../../source/ALU8.v:89$23.
  creating $alu model for $macc $flatten\u_ALU8.$add$../../../source/ALU8.v:90$25.
  creating $alu cell for $flatten\u_ALU8.$add$../../../source/ALU8.v:90$25: $auto$alumacc.cc:485:replace_alu$1430
  creating $alu cell for $flatten\u_ALU8.$add$../../../source/ALU8.v:89$23: $auto$alumacc.cc:485:replace_alu$1433
  created 2 $alu and 0 $macc cells.

3.25. Executing SHARE pass (SAT-based resource sharing).

3.26. Executing OPT pass (performing simple optimizations).

3.26.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.
<suppressed ~28 debug messages>

3.26.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

3.26.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/6 on $pmux $flatten\u_ALU8.$procmux$1234.
    dead port 2/6 on $pmux $flatten\u_ALU8.$procmux$1234.
    dead port 3/6 on $pmux $flatten\u_ALU8.$procmux$1234.
    dead port 4/6 on $pmux $flatten\u_ALU8.$procmux$1234.
    dead port 6/6 on $pmux $flatten\u_ALU8.$procmux$1234.
    dead port 1/6 on $pmux $flatten\u_ALU8.$procmux$1242.
    dead port 2/6 on $pmux $flatten\u_ALU8.$procmux$1242.
    dead port 3/6 on $pmux $flatten\u_ALU8.$procmux$1242.
    dead port 4/6 on $pmux $flatten\u_ALU8.$procmux$1242.
    dead port 6/6 on $pmux $flatten\u_ALU8.$procmux$1242.
    dead port 2/6 on $pmux $procmux$1293.
    dead port 3/6 on $pmux $procmux$1293.
    dead port 4/6 on $pmux $procmux$1293.
Removed 13 multiplexer ports.
<suppressed ~12 debug messages>

3.26.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU_wrapper.
Performed a total of 0 changes.

3.26.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

3.26.6. Executing OPT_DFF pass (perform DFF optimizations).

3.26.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..
Removed 2 unused cells and 121 unused wires.
<suppressed ~3 debug messages>

3.26.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

3.26.9. Rerunning OPT passes. (Maybe there is more to do..)

3.26.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

3.26.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU_wrapper.
Performed a total of 0 changes.

3.26.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

3.26.13. Executing OPT_DFF pass (perform DFF optimizations).

3.26.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..

3.26.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

3.26.16. Finished OPT passes. (There is nothing left to do.)

3.27. Executing MEMORY pass.

3.27.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

3.27.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

3.27.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

3.27.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

3.27.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

3.27.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..

3.27.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.27.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

3.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..

3.27.10. Executing MEMORY_COLLECT pass (generating $mem cells).

3.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..

3.29. Executing MEMORY_LIBMAP pass (mapping memories to cells).

3.30. Executing TECHMAP pass (map to technology primitives).

3.30.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/xilinx/lutrams_xc5v_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/xilinx/lutrams_xc5v_map.v' to AST representation.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_SP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_DP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_QP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_OP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_SDP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_64X8SW_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_32X16DR8_'.
Successfully finished Verilog frontend.

3.30.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~9 debug messages>

3.31. Executing TECHMAP pass (map to technology primitives).

3.31.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/xilinx/brams_xc6v_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/xilinx/brams_xc6v_map.v' to AST representation.
Generating RTLIL representation for module `\$__XILINX_BLOCKRAM_TDP_'.
Generating RTLIL representation for module `\$__XILINX_BLOCKRAM_SDP_'.
Successfully finished Verilog frontend.

3.31.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

3.32. Executing OPT pass (performing simple optimizations).

3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.
<suppressed ~5 debug messages>

3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

3.32.3. Executing OPT_DFF pass (perform DFF optimizations).

3.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

3.32.5. Finished fast OPT passes.

3.33. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

3.34. Executing OPT pass (performing simple optimizations).

3.34.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

3.34.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

3.34.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~7 debug messages>

3.34.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU_wrapper.
    Consolidated identical input bits for $mux cell $procmux$1296:
      Old ports: A=3'110, B=3'011, Y=$procmux$1296_Y
      New ports: A=2'10, B=2'01, Y={ $procmux$1296_Y [2] $procmux$1296_Y [0] }
      New connections: $procmux$1296_Y [1] = 1'1
    Consolidated identical input bits for $mux cell $procmux$1303:
      Old ports: A=3'011, B=3'100, Y=$procmux$1303_Y
      New ports: A=2'01, B=2'10, Y={ $procmux$1303_Y [2] $procmux$1303_Y [0] }
      New connections: $procmux$1303_Y [1] = $procmux$1303_Y [0]
    Consolidated identical input bits for $mux cell $procmux$1310:
      Old ports: A=3'010, B=3'100, Y=$procmux$1310_Y
      New ports: A=2'01, B=2'10, Y=$procmux$1310_Y [2:1]
      New connections: $procmux$1310_Y [0] = 1'0
  Optimizing cells in module \ALU_wrapper.
    Consolidated identical input bits for $mux cell $procmux$1299:
      Old ports: A=$procmux$1296_Y, B=3'010, Y=$procmux$1299_Y
      New ports: A={ $procmux$1296_Y [2] $procmux$1296_Y [0] }, B=2'00, Y={ $procmux$1299_Y [2] $procmux$1299_Y [0] }
      New connections: $procmux$1299_Y [1] = 1'1
  Optimizing cells in module \ALU_wrapper.
Performed a total of 4 changes.

3.34.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

3.34.6. Executing OPT_SHARE pass.

3.34.7. Executing OPT_DFF pass (perform DFF optimizations).

3.34.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

3.34.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

3.34.10. Rerunning OPT passes. (Maybe there is more to do..)

3.34.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

3.34.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU_wrapper.
Performed a total of 0 changes.

3.34.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

3.34.14. Executing OPT_SHARE pass.

3.34.15. Executing OPT_DFF pass (perform DFF optimizations).

3.34.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..

3.34.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

3.34.18. Finished OPT passes. (There is nothing left to do.)

3.35. Executing XILINX_SRL pass (Xilinx shift register extraction).

3.36. Executing TECHMAP pass (map to technology primitives).

3.36.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.36.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/xilinx/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/xilinx/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_xilinx_lcu'.
Generating RTLIL representation for module `\_80_xilinx_alu'.
Successfully finished Verilog frontend.

3.36.3. Continuing TECHMAP pass.
Using template $paramod$constmap:d014e75dadbb572f92acf6b31358140a7bb4d7da$paramod$8ae51266ce98bc5533551c59a6aa22584269889d\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$55a7542f9f94f8353eeb47e045003199fd59709e\_80_xilinx_alu for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$constmap:f7e67177656d8d69a834134a38e24afd7d3b1439$paramod$7a923b88df27d766594bcce2ec3294eebd025fbe\_90_shift_shiftx for cells of type $shiftx.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$constmap:0fa503910726f6a0278714be8ded5607c6e1dce9$paramod$60b0849a71261dfc0d41b0c2b4c6a33e19ba1777\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$constmap:34b6ce674891503e306ba27885b6cda07e6759b0$paramod$66c4c1164bd65a826b3a94cf7ef8eace7ebebd7a\_90_shift_shiftx for cells of type $shift.
Using template $paramod$32e7c4d6f92ff4337599ece53082d2e88a82a9f2\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
Using template $paramod$e9c51c6dde20d0afd41ae94253554f65728b9377\_80_xilinx_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=s32'00000000000000000000000000000001 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~982 debug messages>

3.37. Executing OPT pass (performing simple optimizations).

3.37.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.
<suppressed ~127 debug messages>

3.37.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
<suppressed ~63 debug messages>
Removed a total of 21 cells.

3.37.3. Executing OPT_DFF pass (perform DFF optimizations).

3.37.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..
Removed 114 unused cells and 120 unused wires.
<suppressed ~117 debug messages>

3.37.5. Finished fast OPT passes.

3.38. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port ALU_wrapper.ABCmd_i using IBUF.
Mapping port ALU_wrapper.ACC_o using OBUF.
Mapping port ALU_wrapper.Done_LED using OBUF.
Mapping port ALU_wrapper.Done_o using OBUF.
Mapping port ALU_wrapper.LoadA_i using IBUF.
Mapping port ALU_wrapper.LoadB_i using IBUF.
Mapping port ALU_wrapper.LoadCmd_i using IBUF.
Mapping port ALU_wrapper.clk using IBUF.
Mapping port ALU_wrapper.reset using IBUF.

3.39. Executing TECHMAP pass (map to technology primitives).

3.39.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.39.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/xilinx/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/xilinx/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$__SHREG_'.
Generating RTLIL representation for module `\$__XILINX_SHREG_'.
Generating RTLIL representation for module `\$__XILINX_MUXF78'.
Successfully finished Verilog frontend.

3.39.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~76 debug messages>
Removed 0 unused cells and 6 unused wires.

3.40. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

3.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.
<suppressed ~9 debug messages>

3.42. Executing ABC pass (technology mapping using ABC).

3.42.1. Extracting gate netlist of module `\ALU_wrapper' to `<abc-temp-dir>/input.blif'..
Extracted 220 gates and 278 wires to a netlist network with 56 inputs and 48 outputs.

3.42.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       67
ABC RESULTS:        internal signals:      174
ABC RESULTS:           input signals:       56
ABC RESULTS:          output signals:       48
Removing temp directory.
Removed 0 unused cells and 167 unused wires.

3.43. Executing TECHMAP pass (map to technology primitives).

3.43.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/xilinx/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/xilinx/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCH_NPP_'.
Generating RTLIL representation for module `\$_DLATCH_PPP_'.
Successfully finished Verilog frontend.

3.43.2. Continuing TECHMAP pass.
Using template $paramod\$_DFFE_PP0P_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PP0P_.
Using template $paramod\$_DFFE_PP1P_\_TECHMAP_WIREINIT_Q_=1'x for cells of type $_DFFE_PP1P_.
No more expansions possible.
<suppressed ~67 debug messages>

3.44. Executing XILINX_SRL pass (Xilinx shift register extraction).

3.45. Executing TECHMAP pass (map to technology primitives).

3.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/xilinx/lut_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/xilinx/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

3.45.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/xilinx/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/xilinx/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$__SHREG_'.
Generating RTLIL representation for module `\$__XILINX_SHREG_'.
Generating RTLIL representation for module `\$__XILINX_MUXF78'.
Successfully finished Verilog frontend.

3.45.3. Continuing TECHMAP pass.
Using template $paramod$f4b410ec69fee77145d4861b6f5b23158bffcf60\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$371fe52b7730fd7254b5eb1e2c1182401575cbe8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$371776995a91ca301a91af69262c98f2d33f2440\$lut for cells of type $lut.
Using template $paramod$eb750eb534e7fbcf9998e7b0e3bea793f99b42f5\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod$dcb5d4db2c42b958c6154cde6277251358a19ad7\$lut for cells of type $lut.
Using template $paramod$0c61fb9db42ebd45e1e438f5020b596ef1633926\$lut for cells of type $lut.
Using template $paramod$cf3abafb2bd2e208445e11cdae140f5dbd90478d\$lut for cells of type $lut.
Using template $paramod$7a0e884f57c778808b8bbd75a88be676df1a0781\$lut for cells of type $lut.
Using template $paramod$b7dff1a16cfcf8053e9e84e884b8f857ee4731fb\$lut for cells of type $lut.
Using template $paramod$ca3b33e5f7b5437f0631c275b82fa5bf438f02cf\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod$89afbc34672699af21407a7b27fc730342761da7\$lut for cells of type $lut.
Using template $paramod$fccab364bff5fed504eefa477aad5f6649e5ea96\$lut for cells of type $lut.
Using template $paramod$4fd7b1305bda889fb7cf3da75b130d5c046d290a\$lut for cells of type $lut.
Using template $paramod$fa48c357fa7e55f76b385e0c5a7b0dc48bd37122\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$bccdc988e0b7e4308f4a377419a610bd246931cc\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$99a940b1b511157a5f74067e69e21020fb5eae8d\$lut for cells of type $lut.
Using template $paramod$e510738b2afc01e30879cc84ca044e9e257741aa\$lut for cells of type $lut.
Using template $paramod$dc41e9665158f6caac97365e95c1c2f88dcb2656\$lut for cells of type $lut.
Using template $paramod$3c849b54e6cd938404f81d693bbe7b7ae04fb4f5\$lut for cells of type $lut.
Using template $paramod$079a36792dc8fcae707e5fb4db2970d6c53ff82a\$lut for cells of type $lut.
Using template $paramod$e71acd1fd0d505c5322a040014ca4f2fbd36a053\$lut for cells of type $lut.
Using template $paramod$6ac63e260ac9358393ce55a25a74c7e990c673c3\$lut for cells of type $lut.
Using template $paramod$c0853e34aa900c2481a621c89598f613d2d49f86\$lut for cells of type $lut.
Using template $paramod$692927e279b3d5c42ee4aacb287247c0b34943ed\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~482 debug messages>

3.46. Executing XILINX_DFFOPT pass (optimize FF control signal usage).
Optimizing FFs in ALU_wrapper.

3.47. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in ALU_wrapper.
  Optimizing lut $abc$2666$auto$blifparse.cc:535:parse_blif$2685.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (6 -> 0)
  Optimizing lut $abc$2666$auto$blifparse.cc:535:parse_blif$2685.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (6 -> 1)
  Optimizing lut $abc$2666$auto$blifparse.cc:535:parse_blif$2685.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (6 -> 1)

3.48. Executing CLKBUFMAP pass (inserting clock buffers).
Inserting BUFG on ALU_wrapper.$iopadmap$clk[0].
Removed 0 unused cells and 315 unused wires.

3.49. Executing HIERARCHY pass (managing design hierarchy).

3.49.1. Analyzing design hierarchy..
Top module:  \ALU_wrapper

3.49.2. Analyzing design hierarchy..
Top module:  \ALU_wrapper
Removed 0 unused modules.

3.50. Printing statistics.

=== ALU_wrapper ===

   Number of wires:                 96
   Number of wire bits:            392
   Number of public wires:          43
   Number of public wire bits:     174
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                129
     $scopeinfo                      1
     BUFG                            1
     CARRY4                          4
     DSP48E1                         1
     FDCE                           26
     FDPE                            1
     IBUF                           13
     LUT1                            2
     LUT2                           23
     LUT3                            3
     LUT4                           16
     LUT5                            6
     LUT6                           19
     MUXF7                           2
     MUXF8                           1
     OBUF                           10

   Estimated number of LCs:         46

3.51. Executing CHECK pass (checking for obvious problems).
Checking module ALU_wrapper...
Found and reported 0 problems.

4. Executing Verilog backend.

4.1. Executing BMUXMAP pass.

4.2. Executing DEMUXMAP pass.
Dumping module `\ALU_wrapper'.

5. Printing statistics.

=== ALU_wrapper ===

   Number of wires:                 96
   Number of wire bits:            392
   Number of public wires:          43
   Number of public wire bits:     174
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                129
     $scopeinfo                      1
     BUFG                            1
     CARRY4                          4
     DSP48E1                         1
     FDCE                           26
     FDPE                            1
     IBUF                           13
     LUT1                            2
     LUT2                           23
     LUT3                            3
     LUT4                           16
     LUT5                            6
     LUT6                           19
     MUXF7                           2
     MUXF8                           1
     OBUF                           10

End of script. Logfile hash: e11dc8ead0, CPU: user 2.45s system 0.07s, MEM: 134.14 MB peak
Yosys 0.38+88 (git sha1 38f1b0b12, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 60% 21x read_verilog (1 sec), 8% 18x opt_clean (0 sec), ...
