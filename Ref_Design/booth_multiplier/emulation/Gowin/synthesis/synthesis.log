
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.41+111 (git sha1 4b67f3757, clang++ 10.0.0-4ubuntu1 -fPIC -Os)

-- Executing script file `booth_multiplier_wrapper.ys' --

1. Executing Verilog-2005 frontend: ../../booth_multiplier_wrapper.v
Parsing Verilog input from `../../booth_multiplier_wrapper.v' to AST representation.
Generating RTLIL representation for module `\booth_multiplier_wrapper'.
Warning: Replacing memory \vectOut with list of registers. See ../../booth_multiplier_wrapper.v:55
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../../../source/booth_multiplier.v
Parsing Verilog input from `../../../source/booth_multiplier.v' to AST representation.
Generating RTLIL representation for module `\booth_multiplier'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../../../source/booth_substep.v
Parsing Verilog input from `../../../source/booth_substep.v' to AST representation.
Generating RTLIL representation for module `\booth_substep'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ../../../source/eight_bit_adder_subractor.v
Parsing Verilog input from `../../../source/eight_bit_adder_subractor.v' to AST representation.
Generating RTLIL representation for module `\eight_bit_adder_subractor'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: ../../../source/fa.v
Parsing Verilog input from `../../../source/fa.v' to AST representation.
Generating RTLIL representation for module `\fa'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: ../../../source/xor2.v
Parsing Verilog input from `../../../source/xor2.v' to AST representation.
Generating RTLIL representation for module `\xor2'.
Successfully finished Verilog frontend.

7. Executing HIERARCHY pass (managing design hierarchy).

7.1. Analyzing design hierarchy..
Top module:  \booth_multiplier_wrapper
Used module:     \booth_multiplier
Used module:         \booth_substep
Used module:             \eight_bit_adder_subractor
Used module:                 \fa
Used module:                 \xor2
Reprocessing module booth_multiplier because instantiated module booth_substep has become available.
Generating RTLIL representation for module `\booth_multiplier'.
Reprocessing module booth_substep because instantiated module eight_bit_adder_subractor has become available.
Generating RTLIL representation for module `\booth_substep'.

7.2. Analyzing design hierarchy..
Top module:  \booth_multiplier_wrapper
Used module:     \booth_multiplier
Used module:         \booth_substep
Used module:             \eight_bit_adder_subractor
Used module:                 \fa
Used module:                 \xor2

7.3. Analyzing design hierarchy..
Top module:  \booth_multiplier_wrapper
Used module:     \booth_multiplier
Used module:         \booth_substep
Used module:             \eight_bit_adder_subractor
Used module:                 \fa
Used module:                 \xor2
Removed 0 unused modules.
Mapping positional arguments of cell booth_substep.myadd (eight_bit_adder_subractor).
Mapping positional arguments of cell eight_bit_adder_subractor.fa8 (fa).
Mapping positional arguments of cell eight_bit_adder_subractor.fa7 (fa).
Mapping positional arguments of cell eight_bit_adder_subractor.fa6 (fa).
Mapping positional arguments of cell eight_bit_adder_subractor.fa5 (fa).
Mapping positional arguments of cell eight_bit_adder_subractor.fa4 (fa).
Mapping positional arguments of cell eight_bit_adder_subractor.fa3 (fa).
Mapping positional arguments of cell eight_bit_adder_subractor.fa2 (fa).
Mapping positional arguments of cell eight_bit_adder_subractor.fa1 (fa).
Mapping positional arguments of cell eight_bit_adder_subractor.x7 (xor2).
Mapping positional arguments of cell eight_bit_adder_subractor.x6 (xor2).
Mapping positional arguments of cell eight_bit_adder_subractor.x5 (xor2).
Mapping positional arguments of cell eight_bit_adder_subractor.x4 (xor2).
Mapping positional arguments of cell eight_bit_adder_subractor.x3 (xor2).
Mapping positional arguments of cell eight_bit_adder_subractor.x2 (xor2).
Mapping positional arguments of cell eight_bit_adder_subractor.x1 (xor2).
Mapping positional arguments of cell eight_bit_adder_subractor.x0 (xor2).
Mapping positional arguments of cell booth_multiplier.step8 (booth_substep).
Mapping positional arguments of cell booth_multiplier.step7 (booth_substep).
Mapping positional arguments of cell booth_multiplier.step6 (booth_substep).
Mapping positional arguments of cell booth_multiplier.step5 (booth_substep).
Mapping positional arguments of cell booth_multiplier.step4 (booth_substep).
Mapping positional arguments of cell booth_multiplier.step3 (booth_substep).
Mapping positional arguments of cell booth_multiplier.step2 (booth_substep).
Mapping positional arguments of cell booth_multiplier.step1 (booth_substep).

8. Executing SYNTH_GOWIN pass.

8.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\__APICULA_LUT5'.
Generating RTLIL representation for module `\__APICULA_LUT6'.
Generating RTLIL representation for module `\__APICULA_LUT7'.
Generating RTLIL representation for module `\__APICULA_LUT8'.
Generating RTLIL representation for module `\MUX2'.
Generating RTLIL representation for module `\MUX2_LUT5'.
Generating RTLIL representation for module `\MUX2_LUT6'.
Generating RTLIL representation for module `\MUX2_LUT7'.
Generating RTLIL representation for module `\MUX2_LUT8'.
Generating RTLIL representation for module `\DFF'.
Generating RTLIL representation for module `\DFFE'.
Generating RTLIL representation for module `\DFFS'.
Generating RTLIL representation for module `\DFFSE'.
Generating RTLIL representation for module `\DFFR'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DFFP'.
Generating RTLIL representation for module `\DFFPE'.
Generating RTLIL representation for module `\DFFC'.
Generating RTLIL representation for module `\DFFCE'.
Generating RTLIL representation for module `\DFFN'.
Generating RTLIL representation for module `\DFFNE'.
Generating RTLIL representation for module `\DFFNS'.
Generating RTLIL representation for module `\DFFNSE'.
Generating RTLIL representation for module `\DFFNR'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFNP'.
Generating RTLIL representation for module `\DFFNPE'.
Generating RTLIL representation for module `\DFFNC'.
Generating RTLIL representation for module `\DFFNCE'.
Generating RTLIL representation for module `\VCC'.
Generating RTLIL representation for module `\GND'.
Generating RTLIL representation for module `\IBUF'.
Generating RTLIL representation for module `\OBUF'.
Generating RTLIL representation for module `\TBUF'.
Generating RTLIL representation for module `\IOBUF'.
Generating RTLIL representation for module `\ELVDS_OBUF'.
Generating RTLIL representation for module `\TLVDS_OBUF'.
Generating RTLIL representation for module `\OSER4'.
Generating RTLIL representation for module `\OSER8'.
Generating RTLIL representation for module `\OSER10'.
Generating RTLIL representation for module `\OVIDEO'.
Generating RTLIL representation for module `\OSER16'.
Generating RTLIL representation for module `\IDES4'.
Generating RTLIL representation for module `\IDES8'.
Generating RTLIL representation for module `\IDES10'.
Generating RTLIL representation for module `\IVIDEO'.
Generating RTLIL representation for module `\IDES16'.
Generating RTLIL representation for module `\IDDR'.
Generating RTLIL representation for module `\IDDRC'.
Generating RTLIL representation for module `\ODDR'.
Generating RTLIL representation for module `\ODDRC'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\RAM16S1'.
Generating RTLIL representation for module `\RAM16S2'.
Generating RTLIL representation for module `\RAM16S4'.
Generating RTLIL representation for module `\RAM16SDP1'.
Generating RTLIL representation for module `\RAM16SDP2'.
Generating RTLIL representation for module `\RAM16SDP4'.
Generating RTLIL representation for module `\SP'.
Generating RTLIL representation for module `\SPX9'.
Generating RTLIL representation for module `\SDP'.
Generating RTLIL representation for module `\SDPX9'.
Generating RTLIL representation for module `\DP'.
Generating RTLIL representation for module `\DPX9'.
Generating RTLIL representation for module `\rPLL'.
Generating RTLIL representation for module `\PLLVR'.
Generating RTLIL representation for module `\OSC'.
Generating RTLIL representation for module `\OSCZ'.
Generating RTLIL representation for module `\OSCF'.
Generating RTLIL representation for module `\OSCH'.
Generating RTLIL representation for module `\OSCW'.
Generating RTLIL representation for module `\OSCO'.
Successfully finished Verilog frontend.

8.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_xtra.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_xtra.v' to AST representation.
Generating RTLIL representation for module `\MUX2_MUX8'.
Generating RTLIL representation for module `\MUX2_MUX16'.
Generating RTLIL representation for module `\MUX2_MUX32'.
Generating RTLIL representation for module `\MUX4'.
Generating RTLIL representation for module `\MUX8'.
Generating RTLIL representation for module `\MUX16'.
Generating RTLIL representation for module `\MUX32'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\LUT7'.
Generating RTLIL representation for module `\LUT8'.
Generating RTLIL representation for module `\DL'.
Generating RTLIL representation for module `\DLE'.
Generating RTLIL representation for module `\DLC'.
Generating RTLIL representation for module `\DLCE'.
Generating RTLIL representation for module `\DLP'.
Generating RTLIL representation for module `\DLPE'.
Generating RTLIL representation for module `\DLN'.
Generating RTLIL representation for module `\DLNE'.
Generating RTLIL representation for module `\DLNC'.
Generating RTLIL representation for module `\DLNCE'.
Generating RTLIL representation for module `\DLNP'.
Generating RTLIL representation for module `\DLNPE'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\IODELAY'.
Generating RTLIL representation for module `\IEM'.
Generating RTLIL representation for module `\ROM16'.
Generating RTLIL representation for module `\ROM'.
Generating RTLIL representation for module `\ROMX9'.
Generating RTLIL representation for module `\rSDP'.
Generating RTLIL representation for module `\rSDPX9'.
Generating RTLIL representation for module `\rROM'.
Generating RTLIL representation for module `\rROMX9'.
Generating RTLIL representation for module `\pROM'.
Generating RTLIL representation for module `\pROMX9'.
Generating RTLIL representation for module `\SDPB'.
Generating RTLIL representation for module `\SDPX9B'.
Generating RTLIL representation for module `\DPB'.
Generating RTLIL representation for module `\DPX9B'.
Generating RTLIL representation for module `\PADD18'.
Generating RTLIL representation for module `\PADD9'.
Generating RTLIL representation for module `\MULT9X9'.
Generating RTLIL representation for module `\MULT18X18'.
Generating RTLIL representation for module `\MULT36X36'.
Generating RTLIL representation for module `\MULTALU36X18'.
Generating RTLIL representation for module `\MULTADDALU18X18'.
Generating RTLIL representation for module `\MULTALU18X18'.
Generating RTLIL representation for module `\ALU54D'.
Generating RTLIL representation for module `\BUFG'.
Generating RTLIL representation for module `\BUFS'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\TLVDS_IBUF'.
Generating RTLIL representation for module `\TLVDS_TBUF'.
Generating RTLIL representation for module `\TLVDS_IOBUF'.
Generating RTLIL representation for module `\ELVDS_IBUF'.
Generating RTLIL representation for module `\ELVDS_TBUF'.
Generating RTLIL representation for module `\ELVDS_IOBUF'.
Generating RTLIL representation for module `\MIPI_IBUF'.
Generating RTLIL representation for module `\MIPI_IBUF_HS'.
Generating RTLIL representation for module `\MIPI_IBUF_LP'.
Generating RTLIL representation for module `\MIPI_OBUF'.
Generating RTLIL representation for module `\MIPI_OBUF_A'.
Generating RTLIL representation for module `\I3C_IOBUF'.
Generating RTLIL representation for module `\CLKDIV'.
Generating RTLIL representation for module `\DHCEN'.
Generating RTLIL representation for module `\DLL'.
Generating RTLIL representation for module `\DLLDLY'.
Generating RTLIL representation for module `\FLASH96K'.
Generating RTLIL representation for module `\FLASH256K'.
Generating RTLIL representation for module `\FLASH608K'.
Generating RTLIL representation for module `\DCS'.
Generating RTLIL representation for module `\DQCE'.
Generating RTLIL representation for module `\FLASH128K'.
Generating RTLIL representation for module `\MCU'.
Generating RTLIL representation for module `\USB20_PHY'.
Generating RTLIL representation for module `\ADC'.
Generating RTLIL representation for module `\BANDGAP'.
Generating RTLIL representation for module `\CLKDIV2'.
Generating RTLIL representation for module `\DCC'.
Generating RTLIL representation for module `\DHCENC'.
Generating RTLIL representation for module `\EMCU'.
Generating RTLIL representation for module `\FLASH64K'.
Generating RTLIL representation for module `\FLASH64KZ'.
Generating RTLIL representation for module `\I3C'.
Generating RTLIL representation for module `\IODELAYA'.
Generating RTLIL representation for module `\IODELAYC'.
Generating RTLIL representation for module `\SPMI'.
Generating RTLIL representation for module `\IODELAYB'.
Generating RTLIL representation for module `\PLLO'.
Generating RTLIL representation for module `\DCCG'.
Generating RTLIL representation for module `\FLASH96KA'.
Generating RTLIL representation for module `\MIPI_DPHY_RX'.
Generating RTLIL representation for module `\CLKDIVG'.
Successfully finished Verilog frontend.

8.3. Executing HIERARCHY pass (managing design hierarchy).

8.3.1. Analyzing design hierarchy..
Top module:  \booth_multiplier_wrapper
Used module:     \booth_multiplier
Used module:         \booth_substep
Used module:             \eight_bit_adder_subractor
Used module:                 \fa
Used module:                 \xor2

8.3.2. Analyzing design hierarchy..
Top module:  \booth_multiplier_wrapper
Used module:     \booth_multiplier
Used module:         \booth_substep
Used module:             \eight_bit_adder_subractor
Used module:                 \fa
Used module:                 \xor2
Removed 0 unused modules.

8.4. Executing PROC pass (convert processes to netlists).

8.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$327'.
Cleaned up 1 empty switch.

8.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$387 in module RAM16S4.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$351 in module RAM16S2.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$332 in module RAM16S1.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$323 in module DFFNCE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$321 in module DFFNC.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$319 in module DFFNPE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$317 in module DFFNP.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$315 in module DFFNRE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$313 in module DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$311 in module DFFNSE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$309 in module DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$303 in module DFFCE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$301 in module DFFC.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$299 in module DFFPE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$297 in module DFFP.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$295 in module DFFRE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$293 in module DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$291 in module DFFSE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$289 in module DFFS.
Marked 3 switch rules as full_case in process $proc$../../../source/booth_substep.v:33$94 in module booth_substep.
Marked 1 switch rules as full_case in process $proc$../../../source/booth_multiplier.v:60$90 in module booth_multiplier.
Removed 1 dead cases from process $proc$../../booth_multiplier_wrapper.v:46$4 in module booth_multiplier_wrapper.
Marked 3 switch rules as full_case in process $proc$../../booth_multiplier_wrapper.v:46$4 in module booth_multiplier_wrapper.
Removed a total of 1 dead cases.

8.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 8 redundant assignments.
Promoted 79 assignments to connections.

8.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$432'.
  Set init value: \mem0 = 16'0000000000000000
  Set init value: \mem1 = 16'0000000000000000
  Set init value: \mem2 = 16'0000000000000000
  Set init value: \mem3 = 16'0000000000000000
Found init rule in `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$374'.
  Set init value: \mem0 = 16'0000000000000000
  Set init value: \mem1 = 16'0000000000000000
Found init rule in `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$344'.
  Set init value: \mem = 16'0000000000000000
Found init rule in `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$324'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$322'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$320'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$318'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$316'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$314'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$312'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$310'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$308'.
  Set init value: \Q = 1'0
Found init rule in `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$306'.
  Set init value: \Q = 1'0
Found init rule in `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$304'.
  Set init value: \Q = 1'0
Found init rule in `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$302'.
  Set init value: \Q = 1'0
Found init rule in `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$300'.
  Set init value: \Q = 1'1
Found init rule in `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$298'.
  Set init value: \Q = 1'1
Found init rule in `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$296'.
  Set init value: \Q = 1'0
Found init rule in `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$294'.
  Set init value: \Q = 1'0
Found init rule in `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$292'.
  Set init value: \Q = 1'1
Found init rule in `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$290'.
  Set init value: \Q = 1'1
Found init rule in `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$288'.
  Set init value: \Q = 1'0
Found init rule in `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$286'.
  Set init value: \Q = 1'0

8.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \CLEAR in `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$323'.
Found async reset \CLEAR in `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$321'.
Found async reset \PRESET in `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$319'.
Found async reset \PRESET in `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$317'.
Found async reset \CLEAR in `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$303'.
Found async reset \CLEAR in `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$301'.
Found async reset \PRESET in `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$299'.
Found async reset \PRESET in `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$297'.

8.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~28 debug messages>

8.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$432'.
Creating decoders for process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$387'.
     1/8: $1$lookahead\mem3$386[15:0]$403
     2/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1075$378[3:0]$399
     3/8: $1$lookahead\mem2$385[15:0]$402
     4/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1074$377[3:0]$398
     5/8: $1$lookahead\mem1$384[15:0]$401
     6/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1073$376[3:0]$397
     7/8: $1$lookahead\mem0$383[15:0]$400
     8/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1072$375[3:0]$396
Creating decoders for process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$374'.
Creating decoders for process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$351'.
     1/4: $1$lookahead\mem1$350[15:0]$359
     2/4: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1028$346[3:0]$357
     3/4: $1$lookahead\mem0$349[15:0]$358
     4/4: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1027$345[3:0]$356
Creating decoders for process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$344'.
Creating decoders for process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$332'.
     1/2: $1$lookahead\mem$331[15:0]$336
     2/2: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:989$329[3:0]$335
Creating decoders for process `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$327'.
Creating decoders for process `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$324'.
Creating decoders for process `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$323'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$322'.
Creating decoders for process `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$321'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$320'.
Creating decoders for process `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$319'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$318'.
Creating decoders for process `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$317'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$316'.
Creating decoders for process `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$315'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$314'.
Creating decoders for process `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$313'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$312'.
Creating decoders for process `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$311'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$310'.
Creating decoders for process `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$309'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$308'.
Creating decoders for process `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$307'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$306'.
Creating decoders for process `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:366$305'.
Creating decoders for process `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$304'.
Creating decoders for process `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$303'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$302'.
Creating decoders for process `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$301'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$300'.
Creating decoders for process `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$299'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$298'.
Creating decoders for process `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$297'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$296'.
Creating decoders for process `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$295'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$294'.
Creating decoders for process `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$293'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$292'.
Creating decoders for process `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$291'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$290'.
Creating decoders for process `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$289'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$288'.
Creating decoders for process `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$287'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$286'.
Creating decoders for process `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:179$285'.
Creating decoders for process `\booth_substep.$proc$../../../source/booth_substep.v:33$94'.
     1/7: $3\next_acc[7:7]
     2/7: $2\next_acc[7:7]
     3/7: $1\next_acc[7:0] [7]
     4/7: $1\next_acc[7:0] [6:0]
     5/7: $1\next_Q[7:0] [7]
     6/7: $1\next_Q[7:0] [6:0]
     7/7: $1\q0_next[0:0]
Creating decoders for process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$92'.
Creating decoders for process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:85$91'.
Creating decoders for process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:60$90'.
     1/2: $0\multiplicand[7:0]
     2/2: $0\multiplier[7:0]
Creating decoders for process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$4'.
     1/17: $3$mem2reg_rd$\vectOut$../../booth_multiplier_wrapper.v:61$1_DATA[7:0]$24
     2/17: $2$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_EN[7:0]$23
     3/17: $2$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_DATA[7:0]$22
     4/17: $2$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_ADDR[2:0]$21
     5/17: $2$mem2reg_rd$\vectOut$../../booth_multiplier_wrapper.v:61$1_DATA[7:0]$20
     6/17: $2$mem2reg_rd$\vectOut$../../booth_multiplier_wrapper.v:61$1_ADDR[0:0]$19
     7/17: $1$mem2bits$\stimIn$../../booth_multiplier_wrapper.v:51$2[7:0]$13
     8/17: $1$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_EN[7:0]$16
     9/17: $1$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_DATA[7:0]$15
    10/17: $1$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_ADDR[2:0]$14
    11/17: $1$mem2reg_rd$\vectOut$../../booth_multiplier_wrapper.v:61$1_DATA[7:0]$12
    12/17: $1$mem2reg_rd$\vectOut$../../booth_multiplier_wrapper.v:61$1_ADDR[0:0]$11
    13/17: $0\vectOut[1][7:0]
    14/17: $0\vectOut[0][7:0]
    15/17: $0\select[0:0]
    16/17: $0\multIn[7:0]
    17/17: $0\Dout_emu[7:0]

8.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\booth_substep.\next_acc' from process `\booth_substep.$proc$../../../source/booth_substep.v:33$94'.
No latch inferred for signal `\booth_substep.\next_Q' from process `\booth_substep.$proc$../../../source/booth_substep.v:33$94'.
No latch inferred for signal `\booth_substep.\q0_next' from process `\booth_substep.$proc$../../../source/booth_substep.v:33$94'.
No latch inferred for signal `\booth_multiplier.\Q[0]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$92'.
No latch inferred for signal `\booth_multiplier.\Q[1]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$92'.
No latch inferred for signal `\booth_multiplier.\Q[2]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$92'.
No latch inferred for signal `\booth_multiplier.\Q[3]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$92'.
No latch inferred for signal `\booth_multiplier.\Q[4]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$92'.
No latch inferred for signal `\booth_multiplier.\Q[5]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$92'.
No latch inferred for signal `\booth_multiplier.\Q[6]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$92'.
No latch inferred for signal `\booth_multiplier.\acc[0]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$92'.
No latch inferred for signal `\booth_multiplier.\acc[1]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$92'.
No latch inferred for signal `\booth_multiplier.\acc[2]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$92'.
No latch inferred for signal `\booth_multiplier.\acc[3]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$92'.
No latch inferred for signal `\booth_multiplier.\acc[4]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$92'.
No latch inferred for signal `\booth_multiplier.\acc[5]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$92'.
No latch inferred for signal `\booth_multiplier.\acc[6]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$92'.
No latch inferred for signal `\booth_multiplier.\acc[7]' from process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:0$92'.

8.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\RAM16S4.\mem0' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$387'.
  created $dff cell `$procdff$639' with positive edge clock.
Creating register for signal `\RAM16S4.\mem1' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$387'.
  created $dff cell `$procdff$640' with positive edge clock.
Creating register for signal `\RAM16S4.\mem2' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$387'.
  created $dff cell `$procdff$641' with positive edge clock.
Creating register for signal `\RAM16S4.\mem3' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$387'.
  created $dff cell `$procdff$642' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1072$375' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$387'.
  created $dff cell `$procdff$643' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1073$376' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$387'.
  created $dff cell `$procdff$644' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1074$377' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$387'.
  created $dff cell `$procdff$645' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1075$378' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$387'.
  created $dff cell `$procdff$646' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem0$383' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$387'.
  created $dff cell `$procdff$647' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem1$384' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$387'.
  created $dff cell `$procdff$648' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem2$385' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$387'.
  created $dff cell `$procdff$649' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem3$386' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$387'.
  created $dff cell `$procdff$650' with positive edge clock.
Creating register for signal `\RAM16S2.\mem0' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$351'.
  created $dff cell `$procdff$651' with positive edge clock.
Creating register for signal `\RAM16S2.\mem1' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$351'.
  created $dff cell `$procdff$652' with positive edge clock.
Creating register for signal `\RAM16S2.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1027$345' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$351'.
  created $dff cell `$procdff$653' with positive edge clock.
Creating register for signal `\RAM16S2.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1028$346' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$351'.
  created $dff cell `$procdff$654' with positive edge clock.
Creating register for signal `\RAM16S2.$lookahead\mem0$349' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$351'.
  created $dff cell `$procdff$655' with positive edge clock.
Creating register for signal `\RAM16S2.$lookahead\mem1$350' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$351'.
  created $dff cell `$procdff$656' with positive edge clock.
Creating register for signal `\RAM16S1.\mem' using process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$332'.
  created $dff cell `$procdff$657' with positive edge clock.
Creating register for signal `\RAM16S1.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:989$329' using process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$332'.
  created $dff cell `$procdff$658' with positive edge clock.
Creating register for signal `\RAM16S1.$lookahead\mem$331' using process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$332'.
  created $dff cell `$procdff$659' with positive edge clock.
Creating register for signal `\ALU.\C' using process `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$327'.
  created direct connection (no actual register cell created).
Creating register for signal `\ALU.\S' using process `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$327'.
  created direct connection (no actual register cell created).
Creating register for signal `\DFFNCE.\Q' using process `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$323'.
  created $adff cell `$procdff$660' with negative edge clock and positive level reset.
Creating register for signal `\DFFNC.\Q' using process `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$321'.
  created $adff cell `$procdff$661' with negative edge clock and positive level reset.
Creating register for signal `\DFFNPE.\Q' using process `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$319'.
  created $adff cell `$procdff$662' with negative edge clock and positive level reset.
Creating register for signal `\DFFNP.\Q' using process `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$317'.
  created $adff cell `$procdff$663' with negative edge clock and positive level reset.
Creating register for signal `\DFFNRE.\Q' using process `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$315'.
  created $dff cell `$procdff$664' with negative edge clock.
Creating register for signal `\DFFNR.\Q' using process `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$313'.
  created $dff cell `$procdff$665' with negative edge clock.
Creating register for signal `\DFFNSE.\Q' using process `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$311'.
  created $dff cell `$procdff$666' with negative edge clock.
Creating register for signal `\DFFNS.\Q' using process `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$309'.
  created $dff cell `$procdff$667' with negative edge clock.
Creating register for signal `\DFFNE.\Q' using process `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$307'.
  created $dff cell `$procdff$668' with negative edge clock.
Creating register for signal `\DFFN.\Q' using process `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:366$305'.
  created $dff cell `$procdff$669' with negative edge clock.
Creating register for signal `\DFFCE.\Q' using process `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$303'.
  created $adff cell `$procdff$670' with positive edge clock and positive level reset.
Creating register for signal `\DFFC.\Q' using process `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$301'.
  created $adff cell `$procdff$671' with positive edge clock and positive level reset.
Creating register for signal `\DFFPE.\Q' using process `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$299'.
  created $adff cell `$procdff$672' with positive edge clock and positive level reset.
Creating register for signal `\DFFP.\Q' using process `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$297'.
  created $adff cell `$procdff$673' with positive edge clock and positive level reset.
Creating register for signal `\DFFRE.\Q' using process `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$295'.
  created $dff cell `$procdff$674' with positive edge clock.
Creating register for signal `\DFFR.\Q' using process `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$293'.
  created $dff cell `$procdff$675' with positive edge clock.
Creating register for signal `\DFFSE.\Q' using process `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$291'.
  created $dff cell `$procdff$676' with positive edge clock.
Creating register for signal `\DFFS.\Q' using process `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$289'.
  created $dff cell `$procdff$677' with positive edge clock.
Creating register for signal `\DFFE.\Q' using process `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$287'.
  created $dff cell `$procdff$678' with positive edge clock.
Creating register for signal `\DFF.\Q' using process `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:179$285'.
  created $dff cell `$procdff$679' with positive edge clock.
Creating register for signal `\booth_multiplier.\__product' using process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:85$91'.
  created $dff cell `$procdff$680' with positive edge clock.
Creating register for signal `\booth_multiplier.\multiplier' using process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:60$90'.
  created $dff cell `$procdff$681' with positive edge clock.
Creating register for signal `\booth_multiplier.\multiplicand' using process `\booth_multiplier.$proc$../../../source/booth_multiplier.v:60$90'.
  created $dff cell `$procdff$682' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.\Dout_emu' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$4'.
  created $dff cell `$procdff$683' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.\multIn' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$4'.
  created $dff cell `$procdff$684' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.\select' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$4'.
  created $dff cell `$procdff$685' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.\vectOut[0]' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$4'.
  created $dff cell `$procdff$686' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.\vectOut[1]' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$4'.
  created $dff cell `$procdff$687' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.$mem2reg_rd$\vectOut$../../booth_multiplier_wrapper.v:61$1_ADDR' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$4'.
  created $dff cell `$procdff$688' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.$mem2reg_rd$\vectOut$../../booth_multiplier_wrapper.v:61$1_DATA' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$4'.
  created $dff cell `$procdff$689' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.$mem2bits$\stimIn$../../booth_multiplier_wrapper.v:51$2' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$4'.
  created $dff cell `$procdff$690' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_ADDR' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$4'.
  created $dff cell `$procdff$691' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_DATA' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$4'.
  created $dff cell `$procdff$692' with positive edge clock.
Creating register for signal `\booth_multiplier_wrapper.$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_EN' using process `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$4'.
  created $dff cell `$procdff$693' with positive edge clock.

8.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

8.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$432'.
Found and cleaned up 1 empty switch in `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$387'.
Removing empty process `RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$387'.
Removing empty process `RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$374'.
Found and cleaned up 1 empty switch in `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$351'.
Removing empty process `RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$351'.
Removing empty process `RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$344'.
Found and cleaned up 1 empty switch in `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$332'.
Removing empty process `RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$332'.
Removing empty process `ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$327'.
Removing empty process `DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$324'.
Found and cleaned up 1 empty switch in `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$323'.
Removing empty process `DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$323'.
Removing empty process `DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$322'.
Removing empty process `DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$321'.
Removing empty process `DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$320'.
Found and cleaned up 1 empty switch in `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$319'.
Removing empty process `DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$319'.
Removing empty process `DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$318'.
Removing empty process `DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$317'.
Removing empty process `DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$316'.
Found and cleaned up 2 empty switches in `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$315'.
Removing empty process `DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$315'.
Removing empty process `DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$314'.
Found and cleaned up 1 empty switch in `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$313'.
Removing empty process `DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$313'.
Removing empty process `DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$312'.
Found and cleaned up 2 empty switches in `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$311'.
Removing empty process `DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$311'.
Removing empty process `DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$310'.
Found and cleaned up 1 empty switch in `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$309'.
Removing empty process `DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$309'.
Removing empty process `DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$308'.
Found and cleaned up 1 empty switch in `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$307'.
Removing empty process `DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$307'.
Removing empty process `DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$306'.
Removing empty process `DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:366$305'.
Removing empty process `DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$304'.
Found and cleaned up 1 empty switch in `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$303'.
Removing empty process `DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$303'.
Removing empty process `DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$302'.
Removing empty process `DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$301'.
Removing empty process `DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$300'.
Found and cleaned up 1 empty switch in `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$299'.
Removing empty process `DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$299'.
Removing empty process `DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$298'.
Removing empty process `DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$297'.
Removing empty process `DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$296'.
Found and cleaned up 2 empty switches in `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$295'.
Removing empty process `DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$295'.
Removing empty process `DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$294'.
Found and cleaned up 1 empty switch in `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$293'.
Removing empty process `DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$293'.
Removing empty process `DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$292'.
Found and cleaned up 2 empty switches in `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$291'.
Removing empty process `DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$291'.
Removing empty process `DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$290'.
Found and cleaned up 1 empty switch in `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$289'.
Removing empty process `DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$289'.
Removing empty process `DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$288'.
Found and cleaned up 1 empty switch in `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$287'.
Removing empty process `DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$287'.
Removing empty process `DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$286'.
Removing empty process `DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:179$285'.
Found and cleaned up 3 empty switches in `\booth_substep.$proc$../../../source/booth_substep.v:33$94'.
Removing empty process `booth_substep.$proc$../../../source/booth_substep.v:33$94'.
Removing empty process `booth_multiplier.$proc$../../../source/booth_multiplier.v:0$92'.
Removing empty process `booth_multiplier.$proc$../../../source/booth_multiplier.v:85$91'.
Found and cleaned up 1 empty switch in `\booth_multiplier.$proc$../../../source/booth_multiplier.v:60$90'.
Removing empty process `booth_multiplier.$proc$../../../source/booth_multiplier.v:60$90'.
Found and cleaned up 3 empty switches in `\booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$4'.
Removing empty process `booth_multiplier_wrapper.$proc$../../booth_multiplier_wrapper.v:46$4'.
Cleaned up 28 empty switches.

8.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_substep.
<suppressed ~7 debug messages>
Optimizing module fa.
Optimizing module eight_bit_adder_subractor.
Optimizing module booth_multiplier.
Optimizing module xor2.
Optimizing module booth_multiplier_wrapper.
<suppressed ~1 debug messages>

8.5. Executing FLATTEN pass (flatten design).
Deleting now unused module booth_substep.
Deleting now unused module fa.
Deleting now unused module eight_bit_adder_subractor.
Deleting now unused module booth_multiplier.
Deleting now unused module xor2.
<suppressed ~26 debug messages>

8.6. Executing TRIBUF pass.

8.7. Executing DEMINOUT pass (demote inout ports to input or output).

8.8. Executing SYNTH pass.

8.8.1. Executing PROC pass (convert processes to netlists).

8.8.1.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

8.8.1.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

8.8.1.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

8.8.1.4. Executing PROC_INIT pass (extract init attributes).

8.8.1.5. Executing PROC_ARST pass (detect async resets in processes).

8.8.1.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

8.8.1.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

8.8.1.8. Executing PROC_DLATCH pass (convert process syncs to latches).

8.8.1.9. Executing PROC_DFF pass (convert process syncs to FFs).

8.8.1.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

8.8.1.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

8.8.1.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.
<suppressed ~47 debug messages>

8.8.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 50 unused cells and 623 unused wires.
<suppressed ~67 debug messages>

8.8.4. Executing CHECK pass (checking for obvious problems).
Checking module booth_multiplier_wrapper...
Found and reported 0 problems.

8.8.5. Executing OPT pass (performing simple optimizations).

8.8.5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.8.5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\u_booth_multiplier.\step1.$procmux$530.
    dead port 1/2 on $mux $flatten\u_booth_multiplier.\step1.$procmux$536.
    dead port 1/2 on $mux $flatten\u_booth_multiplier.\step2.$procmux$530.
    dead port 2/2 on $mux $flatten\u_booth_multiplier.\step2.$procmux$536.
    dead port 1/2 on $mux $flatten\u_booth_multiplier.\step3.$procmux$530.
    dead port 2/2 on $mux $flatten\u_booth_multiplier.\step3.$procmux$536.
    dead port 1/2 on $mux $flatten\u_booth_multiplier.\step4.$procmux$530.
    dead port 2/2 on $mux $flatten\u_booth_multiplier.\step4.$procmux$536.
    dead port 1/2 on $mux $flatten\u_booth_multiplier.\step5.$procmux$530.
    dead port 2/2 on $mux $flatten\u_booth_multiplier.\step5.$procmux$536.
    dead port 1/2 on $mux $flatten\u_booth_multiplier.\step6.$procmux$530.
    dead port 2/2 on $mux $flatten\u_booth_multiplier.\step6.$procmux$536.
    dead port 1/2 on $mux $flatten\u_booth_multiplier.\step7.$procmux$530.
    dead port 2/2 on $mux $flatten\u_booth_multiplier.\step7.$procmux$536.
    dead port 1/2 on $mux $flatten\u_booth_multiplier.\step8.$procmux$530.
    dead port 2/2 on $mux $flatten\u_booth_multiplier.\step8.$procmux$536.
    dead port 1/2 on $mux $procmux$562.
    dead port 1/2 on $mux $procmux$565.
    dead port 1/2 on $mux $procmux$571.
    dead port 1/2 on $mux $procmux$577.
    dead port 1/2 on $mux $procmux$583.
Removed 21 multiplexer ports.
<suppressed ~34 debug messages>

8.8.5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
    Consolidated identical input bits for $mux cell $procmux$568:
      Old ports: A=8'11111111, B=8'00000000, Y=$procmux$568_Y
      New ports: A=1'1, B=1'0, Y=$procmux$568_Y [0]
      New connections: $procmux$568_Y [7:1] = { $procmux$568_Y [0] $procmux$568_Y [0] $procmux$568_Y [0] $procmux$568_Y [0] $procmux$568_Y [0] $procmux$568_Y [0] $procmux$568_Y [0] }
  Optimizing cells in module \booth_multiplier_wrapper.
    Consolidated identical input bits for $mux cell $procmux$601:
      Old ports: A=$2$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_EN[7:0]$23, B=8'00000000, Y=$0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_EN[7:0]$10
      New ports: A=$procmux$568_Y [0], B=1'0, Y=$0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_EN[7:0]$10 [0]
      New connections: $0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_EN[7:0]$10 [7:1] = { $0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_EN[7:0]$10 [0] $0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_EN[7:0]$10 [0] $0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_EN[7:0]$10 [0] $0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_EN[7:0]$10 [0] $0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_EN[7:0]$10 [0] $0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_EN[7:0]$10 [0] $0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_EN[7:0]$10 [0] }
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 2 changes.

8.8.5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.8.5.6. Executing OPT_DFF pass (perform DFF optimizations).

8.8.5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 0 unused cells and 21 unused wires.
<suppressed ~1 debug messages>

8.8.5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.5.9. Rerunning OPT passes. (Maybe there is more to do..)

8.8.5.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~34 debug messages>

8.8.5.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 0 changes.

8.8.5.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.8.5.13. Executing OPT_DFF pass (perform DFF optimizations).

8.8.5.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..

8.8.5.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.5.16. Finished OPT passes. (There is nothing left to do.)

8.8.6. Executing FSM pass (extract and optimize FSM).

8.8.6.1. Executing FSM_DETECT pass (finding FSMs in design).

8.8.6.2. Executing FSM_EXTRACT pass (extracting FSM from design).

8.8.6.3. Executing FSM_OPT pass (simple optimizations of FSMs).

8.8.6.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..

8.8.6.5. Executing FSM_OPT pass (simple optimizations of FSMs).

8.8.6.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

8.8.6.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

8.8.6.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

8.8.7. Executing OPT pass (performing simple optimizations).

8.8.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.8.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~34 debug messages>

8.8.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 0 changes.

8.8.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.8.7.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$687 ($dff) from module booth_multiplier_wrapper (D = \u_booth_multiplier.__product [15:8], Q = \vectOut[1]).
Adding EN signal on $procdff$686 ($dff) from module booth_multiplier_wrapper (D = \u_booth_multiplier.__product [7:0], Q = \vectOut[0]).
Adding EN signal on $procdff$685 ($dff) from module booth_multiplier_wrapper (D = $memrd$\stimIn$../../booth_multiplier_wrapper.v:51$18_DATA [0], Q = \select).
Adding EN signal on $procdff$684 ($dff) from module booth_multiplier_wrapper (D = $memrd$\stimIn$../../booth_multiplier_wrapper.v:50$17_DATA, Q = \multIn).
Adding EN signal on $procdff$683 ($dff) from module booth_multiplier_wrapper (D = $3$mem2reg_rd$\vectOut$../../booth_multiplier_wrapper.v:61$1_DATA[7:0]$24, Q = \Dout_emu).
Adding EN signal on $flatten\u_booth_multiplier.$procdff$682 ($dff) from module booth_multiplier_wrapper (D = \multIn, Q = \u_booth_multiplier.multiplicand).
Adding EN signal on $flatten\u_booth_multiplier.$procdff$681 ($dff) from module booth_multiplier_wrapper (D = \multIn, Q = \u_booth_multiplier.multiplier).
Adding SRST signal on $flatten\u_booth_multiplier.$procdff$680 ($dff) from module booth_multiplier_wrapper (D = \u_booth_multiplier.step1.myadd.fa1.sum, Q = \u_booth_multiplier.__product [0], rval = 1'0).

8.8.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 11 unused cells and 10 unused wires.
<suppressed ~12 debug messages>

8.8.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.7.9. Rerunning OPT passes. (Maybe there is more to do..)

8.8.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~27 debug messages>

8.8.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 0 changes.

8.8.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

8.8.7.13. Executing OPT_DFF pass (perform DFF optimizations).

8.8.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

8.8.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.7.16. Rerunning OPT passes. (Maybe there is more to do..)

8.8.7.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~27 debug messages>

8.8.7.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 0 changes.

8.8.7.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.8.7.20. Executing OPT_DFF pass (perform DFF optimizations).

8.8.7.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..

8.8.7.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.7.23. Finished OPT passes. (There is nothing left to do.)

8.8.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 address bits (of 3) from memory init port booth_multiplier_wrapper.$auto$proc_memwr.cc:45:proc_memwr$694 (stimIn).
Removed top 31 address bits (of 32) from memory read port booth_multiplier_wrapper.$memrd$\stimIn$../../booth_multiplier_wrapper.v:50$17 (stimIn).
Removed top 31 address bits (of 32) from memory read port booth_multiplier_wrapper.$memrd$\stimIn$../../booth_multiplier_wrapper.v:51$18 (stimIn).
Removed top 2 bits (of 3) from mux cell booth_multiplier_wrapper.$procmux$607 ($mux).
Removed top 2 bits (of 3) from mux cell booth_multiplier_wrapper.$procmux$580 ($mux).
Removed top 2 bits (of 3) from wire booth_multiplier_wrapper.$0$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_ADDR[2:0]$8.
Removed top 2 bits (of 3) from wire booth_multiplier_wrapper.$2$memwr$\stimIn$../../booth_multiplier_wrapper.v:60$3_ADDR[2:0]$21.

8.8.9. Executing PEEPOPT pass (run peephole optimizers).

8.8.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

8.8.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module booth_multiplier_wrapper:
  created 0 $alu and 0 $macc cells.

8.8.12. Executing SHARE pass (SAT-based resource sharing).

8.8.13. Executing OPT pass (performing simple optimizations).

8.8.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.8.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~27 debug messages>

8.8.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 0 changes.

8.8.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.8.13.6. Executing OPT_DFF pass (perform DFF optimizations).

8.8.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..

8.8.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.8.13.9. Finished OPT passes. (There is nothing left to do.)

8.8.14. Executing MEMORY pass.

8.8.14.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

8.8.14.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

8.8.14.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing booth_multiplier_wrapper.stimIn write port 0.

8.8.14.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

8.8.14.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\stimIn'[0] in module `\booth_multiplier_wrapper': merging output FF to cell.
    Write port 0: don't care on collision.
Checking read port `\stimIn'[1] in module `\booth_multiplier_wrapper': merging output FF to cell.
    Write port 0: don't care on collision.

8.8.14.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 2 unused cells and 10 unused wires.
<suppressed ~3 debug messages>

8.8.14.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory booth_multiplier_wrapper.stimIn by address:
  Merging ports 0, 1 (address 1'1).

8.8.14.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

8.8.14.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

8.8.14.10. Executing MEMORY_COLLECT pass (generating $mem cells).

8.8.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..

8.9. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory booth_multiplier_wrapper.stimIn
<suppressed ~636 debug messages>

8.10. Executing TECHMAP pass (map to technology primitives).

8.10.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/lutrams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_LUTRAM_'.
Successfully finished Verilog frontend.

8.10.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_SP_'.
Generating RTLIL representation for module `\$__GOWIN_DP_'.
Generating RTLIL representation for module `\$__GOWIN_SDP_'.
Successfully finished Verilog frontend.

8.10.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

8.11. Executing OPT pass (performing simple optimizations).

8.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.
<suppressed ~30 debug messages>

8.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.11.3. Executing OPT_DFF pass (perform DFF optimizations).

8.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 1 unused cells and 20 unused wires.
<suppressed ~2 debug messages>

8.11.5. Finished fast OPT passes.

8.12. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \stimIn in module \booth_multiplier_wrapper:
  created 2 $dff cells and 0 static cells of width 8.
Extracted data FF from read port 0 of booth_multiplier_wrapper.stimIn: $\stimIn$rdreg[0]
  read interface: 1 $dff and 0 $mux cells.
  write interface: 2 write mux blocks.

8.13. Executing OPT pass (performing simple optimizations).

8.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.
<suppressed ~4 debug messages>

8.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

8.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

8.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 0 changes.

8.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.13.6. Executing OPT_DFF pass (perform DFF optimizations).

8.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

8.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.13.9. Rerunning OPT passes. (Maybe there is more to do..)

8.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

8.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 0 changes.

8.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\stimIn[1]$961 ($dff) from module booth_multiplier_wrapper (D = \Din_emu, Q = \stimIn[1]).
Adding EN signal on $memory\stimIn[0]$959 ($dff) from module booth_multiplier_wrapper (D = \Din_emu, Q = \stimIn[0]).

8.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

8.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.13.16. Rerunning OPT passes. (Maybe there is more to do..)

8.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~27 debug messages>

8.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 0 changes.

8.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.13.20. Executing OPT_DFF pass (perform DFF optimizations).

8.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..

8.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.13.23. Finished OPT passes. (There is nothing left to do.)

8.14. Executing TECHMAP pass (map to technology primitives).

8.14.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

8.14.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $sdff.
No more expansions possible.
<suppressed ~561 debug messages>

8.15. Executing OPT pass (performing simple optimizations).

8.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.
<suppressed ~63 debug messages>

8.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

8.15.3. Executing OPT_DFF pass (perform DFF optimizations).

8.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 28 unused cells and 18 unused wires.
<suppressed ~29 debug messages>

8.15.5. Finished fast OPT passes.

8.16. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port booth_multiplier_wrapper.Addr_emu using IBUF.
Mapping port booth_multiplier_wrapper.Din_emu using IBUF.
Mapping port booth_multiplier_wrapper.Dout_emu using OBUF.
Mapping port booth_multiplier_wrapper.clk_dut using IBUF.
Mapping port booth_multiplier_wrapper.clk_emu using IBUF.
Mapping port booth_multiplier_wrapper.get_emu using IBUF.
Mapping port booth_multiplier_wrapper.load_emu using IBUF.

8.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

8.18. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

8.19. Executing TECHMAP pass (map to technology primitives).

8.19.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

8.19.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~95 debug messages>

8.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.
<suppressed ~9 debug messages>

8.21. Executing SIMPLEMAP pass (map simple cells to gate primitives).

8.22. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

8.23. Executing ABC9 pass.

8.23.1. Executing ABC9_OPS pass (helper functions for ABC9).

8.23.2. Executing ABC9_OPS pass (helper functions for ABC9).

8.23.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module booth_multiplier_wrapper.
Found 0 SCCs.

8.23.4. Executing ABC9_OPS pass (helper functions for ABC9).

8.23.5. Executing PROC pass (convert processes to netlists).

8.23.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

8.23.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

8.23.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

8.23.5.4. Executing PROC_INIT pass (extract init attributes).

8.23.5.5. Executing PROC_ARST pass (detect async resets in processes).

8.23.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

8.23.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

8.23.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

8.23.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

8.23.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

8.23.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

8.23.5.12. Executing OPT_EXPR pass (perform const folding).

8.23.6. Executing TECHMAP pass (map to technology primitives).

8.23.6.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

8.23.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~248 debug messages>

8.23.7. Executing OPT pass (performing simple optimizations).

8.23.7.1. Executing OPT_EXPR pass (perform const folding).

8.23.7.2. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

8.23.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Removed 0 multiplexer ports.

8.23.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Performed a total of 0 changes.

8.23.7.5. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

8.23.7.6. Executing OPT_DFF pass (perform DFF optimizations).

8.23.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).

8.23.7.8. Executing OPT_EXPR pass (perform const folding).

8.23.7.9. Finished OPT passes. (There is nothing left to do.)

8.23.8. Executing TECHMAP pass (map to technology primitives).

8.23.8.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

8.23.8.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~2 debug messages>

8.23.9. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_model.v' to AST representation.
Replacing existing blackbox module `$__ABC9_DELAY' at /usr/local/bin/../share/yosys/abc9_model.v:2.1-7.10.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Replacing existing blackbox module `$__ABC9_SCC_BREAKER' at /usr/local/bin/../share/yosys/abc9_model.v:9.1-11.10.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Replacing existing module `$__DFF_N__$abc9_flop' at /usr/local/bin/../share/yosys/abc9_model.v:14.1-20.10.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Replacing existing module `$__DFF_P__$abc9_flop' at /usr/local/bin/../share/yosys/abc9_model.v:23.1-29.10.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

8.23.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~132 debug messages>

8.23.11. Executing ABC9_OPS pass (helper functions for ABC9).

8.23.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

8.23.13. Executing TECHMAP pass (map to technology primitives).

8.23.13.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

8.23.13.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~250 debug messages>

8.23.14. Executing OPT pass (performing simple optimizations).

8.23.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.23.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.23.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \booth_multiplier_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

8.23.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \booth_multiplier_wrapper.
Performed a total of 0 changes.

8.23.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\booth_multiplier_wrapper'.
Removed a total of 0 cells.

8.23.14.6. Executing OPT_DFF pass (perform DFF optimizations).

8.23.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \booth_multiplier_wrapper..

8.23.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module booth_multiplier_wrapper.

8.23.14.9. Finished OPT passes. (There is nothing left to do.)

8.23.15. Executing AIGMAP pass (map logic to AIG).

8.23.16. Executing AIGMAP pass (map logic to AIG).
Module booth_multiplier_wrapper: replaced 361 cells with 2233 new cells, skipped 540 cells.
  replaced 3 cell types:
      98 $_OR_
     191 $_XOR_
      72 $_MUX_
  not replaced 10 cell types:
     145 $scopeinfo
      12 $_NOT_
     158 $_AND_
      14 DFF
      57 DFFE
       1 DFFR
      15 IBUF
       8 OBUF
      58 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000000111111
      72 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000001001000000

8.23.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

8.23.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

8.23.16.3. Executing XAIGER backend.
<suppressed ~83 debug messages>
Extracted 1045 AND gates and 2699 wires from module `booth_multiplier_wrapper' to a netlist network with 108 inputs and 148 outputs.

8.23.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

8.23.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    108/    148  and =     964  lev =   83 (3.03)  mem = 0.02 MB  box = 130  bb = 130
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    108/    148  and =    1379  lev =   69 (2.38)  mem = 0.02 MB  ch =  262  box = 130  bb = 130
ABC: + &if -W 500 -v 
ABC: K = 8. Memory (bytes): Truth =    0. Cut =   68. Obj =  152. Set =  708. CutMin = no
ABC: Node =    1379.  Ch =   222.  Total mem =    0.30 MB. Peak cut mem =    0.02 MB.
ABC: P:  Del = 20958.00.  Ar =    1188.0.  Edge =      887.  Cut =    24764.  T =     0.00 sec
ABC: P:  Del = 20671.00.  Ar =    1299.0.  Edge =      939.  Cut =    23826.  T =     0.00 sec
ABC: P:  Del = 20671.00.  Ar =    1307.0.  Edge =     1131.  Cut =    51277.  T =     0.01 sec
ABC: F:  Del = 20671.00.  Ar =     914.0.  Edge =      892.  Cut =    35494.  T =     0.01 sec
ABC: A:  Del = 20668.00.  Ar =     651.0.  Edge =      791.  Cut =    37409.  T =     0.01 sec
ABC: A:  Del = 20668.00.  Ar =     647.0.  Edge =      786.  Cut =    36368.  T =     0.01 sec
ABC: Total time =     0.04 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =    108/    148  and =    2039  lev =   83 (2.46)  mem = 0.03 MB  box = 130  bb = 130
ABC: Mapping (K=8)  :  lut =    146  edge =     651  lev =   14 (0.58)  levB =   15  mem = 0.01 MB
ABC: LUT = 146 : 2=33 22.6 %  3=16 11.0 %  4=29 19.9 %  5=25 17.1 %  6=17 11.6 %  7=14 9.6 %  8=12 8.2 %  Ave = 4.46
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 0.85 seconds, total: 0.85 seconds

8.23.16.6. Executing AIGER frontend.
<suppressed ~524 debug messages>
Removed 3462 unused cells and 3994 unused wires.

8.23.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:      148
ABC RESULTS:           input signals:       33
ABC RESULTS:          output signals:      134
Removing temp directory.

8.23.17. Executing TECHMAP pass (map to technology primitives).

8.23.17.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

8.23.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>
Removed 7 unused cells and 3547 unused wires.

8.24. Executing TECHMAP pass (map to technology primitives).

8.24.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

8.24.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$4570649cd71e7b936f94570e25d170afe9f8a132\$lut for cells of type $lut.
Using template $paramod$e38d702c807ec34d0dfdd18ccef203e013af40b0\$lut for cells of type $lut.
Using template $paramod$854e4d04c3b2b54d7fcb924d1dd55c9a8eab21ca\$lut for cells of type $lut.
Using template $paramod$1724d9bfca622bb595b1a6cca457f1621277a397\$lut for cells of type $lut.
Using template $paramod$d4eabcf94d28d5cc2f2af0fb81b76a3bbb73a083\$lut for cells of type $lut.
Using template $paramod$a402422f6da13196f1796b59b999078a0b0ba840\$lut for cells of type $lut.
Using template $paramod$c2d30ba293fa4f50217b5e771f16d1a58ce59d88\$lut for cells of type $lut.
Using template $paramod$a0db84a8b8477959974a17fcf13c4016c2006bbd\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$df56e374b1041b31a8826b67f59307ead1d73374\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$64218f23bfe942d9d88a9d438fb4f2339f461bf5\$lut for cells of type $lut.
Using template $paramod$2f2b9b736b3ea0a0b958cef6434418c8f6a25d02\$lut for cells of type $lut.
Using template $paramod$d3470558fb022ffc1987ee96d544b767fafa7bc2\$lut for cells of type $lut.
Using template $paramod$cfcb93a30ee096f48711bde4ab672e3594a8ef6e\$lut for cells of type $lut.
Using template $paramod$e79dd2863e09faad4f5773053fe3eb4c871eac07\$lut for cells of type $lut.
Using template $paramod$a002f43d0ba6e2a991e3299b5a90bd5c834b2a9a\$lut for cells of type $lut.
Using template $paramod$092e77b978b0411224c0a8bd3e9da0e0fda16a7b\$lut for cells of type $lut.
Using template $paramod$45ff62495300cf47e0b1373632e0a9baf1fdf8f0\$lut for cells of type $lut.
Using template $paramod$83dada0101bfd24774a3cc4031506dade7badc5e\$lut for cells of type $lut.
Using template $paramod$c1d715528e64a5ad912646a695c6c25bba97987c\$lut for cells of type $lut.
Using template $paramod$1d7a1ec8fab3c215fe4f25afebeaaff72a8add27\$lut for cells of type $lut.
Using template $paramod$f5aebb991b162000f9881cdcffed7cb476a49cc1\$lut for cells of type $lut.
Using template $paramod$029fbeed9e9995c4d335c62ae4c1204a1d7e7336\$lut for cells of type $lut.
Using template $paramod$abb54a2cf72d3b526d99da0720c4c884cae0320c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$a4b518ae3660af557ede081152e2658af7d69f7a\$lut for cells of type $lut.
Using template $paramod$1ffa8e65ab69b8b1c6826c36098c842a137aa83d\$lut for cells of type $lut.
Using template $paramod$622e5311e2df41518243f3aab5035e63902ad093\$lut for cells of type $lut.
Using template $paramod$3fbf9e179448527cc5870685155541058c0f9f7a\$lut for cells of type $lut.
Using template $paramod$07b2a3c4458bb3ee6c60ab9a223089c7c3ff06be\$lut for cells of type $lut.
Using template $paramod$4c43cf175bd76f8d26cc73c9b4047ff5d933c5cf\$lut for cells of type $lut.
Using template $paramod$50880e4d57d5e6ebf7f94d87274c9dc6f8cecc5d\$lut for cells of type $lut.
Using template $paramod$7efcc74c95ca036a2a52127f424837f6af7399c0\$lut for cells of type $lut.
Using template $paramod$cc92a31aed46a5fb358a566b58ad7d096c06ef3c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000100 for cells of type $lut.
Using template $paramod$15151b24ada7514639f53e5708c200b5c4931647\$lut for cells of type $lut.
Using template $paramod$c5ed2a33670ca0d061bbdb184360e39c7e0d55c6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101001 for cells of type $lut.
Using template $paramod$d8c8456ad85c509ff7205d1d557c59552ea2b2f5\$lut for cells of type $lut.
Using template $paramod$98d60d9545108991bc463ceaeee22555e3a040e3\$lut for cells of type $lut.
Using template $paramod$7e32661cfa094ec3351500918eefeef0e4156692\$lut for cells of type $lut.
Using template $paramod$f79e8c86568ab7ace22d50b9d8ad49e2e3b32317\$lut for cells of type $lut.
Using template $paramod$b6f8df7e8dd8b965255fd0acf9b16940b1fa4e13\$lut for cells of type $lut.
Using template $paramod$03de5fa3585e41e1024bd39a3a9b5d56a772981e\$lut for cells of type $lut.
Using template $paramod$badf4959ee90474dcaacb0e175db6700af02c450\$lut for cells of type $lut.
Using template $paramod$5959a71ced02990aae0cc5e8f4131d96fed53445\$lut for cells of type $lut.
Using template $paramod$869cfdbb30c776ed4a261d70640dec99764668c5\$lut for cells of type $lut.
Using template $paramod$688d69ec21d69c4213e81bcf7b1dcdaff1b66560\$lut for cells of type $lut.
Using template $paramod$5e9374f44a27c3f8a1c38af244ec43ceb4fb8d4f\$lut for cells of type $lut.
Using template $paramod$d54a1d6bd084e954215f209c40064ddd6ce2d3d3\$lut for cells of type $lut.
Using template $paramod$8a615b62bed632f159bbc2cdc066bee48c7b13e6\$lut for cells of type $lut.
Using template $paramod$f187037086427dfd7cda0220ad4ee333d52ba4ad\$lut for cells of type $lut.
Using template $paramod$3d99f909fcac8a2aa9ff34c7066c9ede5cea31d7\$lut for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod$1109a579b7bdaa609d1dcd650b1c9a6f47045fe9\$lut for cells of type $lut.
Using template $paramod$7dfbf790efb2d426ae103881ac2b70298666fc7c\$lut for cells of type $lut.
Using template $paramod$2a9826fb812e2bc7f94e87b4325a88ce0583fe80\$lut for cells of type $lut.
Using template $paramod$066bb210f370a279805b07998018b63a1faa7499\$lut for cells of type $lut.
Using template $paramod$61aef546b2bceccfe268c6240b208e550b5c81d4\$lut for cells of type $lut.
Using template $paramod$f995fbec7891c267a481016e8dbbf1c786c07acf\$lut for cells of type $lut.
Using template $paramod$a5e85fc7c59ad6263d9ac05446f51a4d8adf3486\$lut for cells of type $lut.
Using template $paramod$7d959438b4835c412f09d7d21b7734140d72be0a\$lut for cells of type $lut.
Using template $paramod$bb39531f97b77739e07230aad0d7d32281df07a4\$lut for cells of type $lut.
Using template $paramod$1e02221449cd11b145ca47589999f2e4bbc9031c\$lut for cells of type $lut.
Using template $paramod$2e242b3870fd1c78b14e7f95ffa17bf0b3a3339c\$lut for cells of type $lut.
Using template $paramod$11b499f0028217a296eb8b14fb43664b189df970\$lut for cells of type $lut.
Using template $paramod$df2642f05f5a74776850200bc94ea206bfacf03d\$lut for cells of type $lut.
Using template $paramod$18e7b0748824507adb247ec1aecb1f43a151c977\$lut for cells of type $lut.
Using template $paramod$0818db3be72c5d3bfaedbeb5ae41d275c53b85c8\$lut for cells of type $lut.
Using template $paramod$5cfe7a0e5fa0c5f64f0330aa4d27239f2221e95a\$lut for cells of type $lut.
Using template $paramod$1ffa98d4ebe50e4695ae4da2414196283ddd72ac\$lut for cells of type $lut.
Using template $paramod$702a5ab2026db34fffbd0329b2337b5f29091e3c\$lut for cells of type $lut.
Using template $paramod$274f307ae3cf37cc9409bbe7da6758e5df02f25c\$lut for cells of type $lut.
Using template $paramod$a3b8085358993c9fb87a484812d1a505b1497adb\$lut for cells of type $lut.
Using template $paramod$01d4034b0b28b0ffa17e1479362177083b63d825\$lut for cells of type $lut.
Using template $paramod$ffaf797797235acaad9628f3190c0cb8f4a6111e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110001 for cells of type $lut.
Using template $paramod$3151355ff6382ac295123f39b936fb5f4d2cc70c\$lut for cells of type $lut.
Using template $paramod$956374a3adb4bc375b344fbc1033648347edda8b\$lut for cells of type $lut.
Using template $paramod$b3b35f9565c8e75bdba359b0fd5af8fe6bd032e2\$lut for cells of type $lut.
Using template $paramod$485fcbbd5891628ee873c7429ece03d92d1dce2d\$lut for cells of type $lut.
Using template $paramod$8883b1bc594a345a2123bf42d12daa4fd08e3c9d\$lut for cells of type $lut.
Using template $paramod$78fa0b574d64641ac48f54f1ddf7f1b9119ea1d3\$lut for cells of type $lut.
Using template $paramod$26cca7755cf767f92e32264c3ae7d1a0dcf3db78\$lut for cells of type $lut.
Using template $paramod$74d65f090e2e52c64c63b54455b83d0f0ff6b5a2\$lut for cells of type $lut.
Using template $paramod$980cf9070abe20aa89bf0870d09cc82130b9f71b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101101 for cells of type $lut.
Using template $paramod$ea17214a0d6b780862033eeac8af590a56332fff\$lut for cells of type $lut.
Using template $paramod$27281f7bd9372efd4584298078d39f48bab055b1\$lut for cells of type $lut.
Using template $paramod$37ac0c48f8901cc26f5a5873084916072cc666d5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$fb57ad3bde73d0e6010c2f82a720ba208db9d62f\$lut for cells of type $lut.
Using template $paramod$aa2d0027c2620afe7b2bf8683c27b560fb22385a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100100 for cells of type $lut.
Using template $paramod$1d7ae1b42786095612c5be6d3610b36dda915741\$lut for cells of type $lut.
Using template $paramod$2319f61ffc09108c3d254fda35d84017a98646ac\$lut for cells of type $lut.
Using template $paramod$01600f320cea5a3e57d6e1854a04f2e39093d826\$lut for cells of type $lut.
Using template $paramod$d11f59e10b6bddf34b6e89ced696680e56a1ea3b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$7f86a259a7cf46ca8099838af83e6a0981877ae2\$lut for cells of type $lut.
Using template $paramod$ff9cf957b3b216c0e170006ce4c69c4a5c443295\$lut for cells of type $lut.
Using template $paramod$6c15da6150ce36eeff7fb8c09f7ef22f5448d679\$lut for cells of type $lut.
Using template $paramod$7614968db5bb082ee538195c00594779836d04ec\$lut for cells of type $lut.
Using template $paramod$61dc9aba6758f16e2d911765e65cbc255291c27d\$lut for cells of type $lut.
Using template $paramod$e25ef6174ec0ed032f94a2fd7bd2e50740f3f8eb\$lut for cells of type $lut.
Using template $paramod$dd5b75b4a835231f2917aa92da01c98a49bef766\$lut for cells of type $lut.
Using template $paramod$df29509c6486a1d00f5a84254a677bb24a54b7b4\$lut for cells of type $lut.
Using template $paramod$663e91a40eedbc9472dba46d9ffd1ac57c92b46c\$lut for cells of type $lut.
Using template $paramod$d34f860c42705b3ae516b6f4d46c6039fcc630b7\$lut for cells of type $lut.
Using template $paramod$4d352b6e6a744a79ad845b9b8bb7b69712221a1b\$lut for cells of type $lut.
Using template $paramod$0b7893e9bcf4eb538ad1593cb56cef11080b2cf9\$lut for cells of type $lut.
Using template $paramod$a35dc44174491c938f4c0c82a889fe5d295dd9a5\$lut for cells of type $lut.
Using template $paramod$46ebf69b74291ffc987e716dafad0365fda167ff\$lut for cells of type $lut.
Using template $paramod$4b6678e4913bc8f7d8d421644d3b0dc59b41975d\$lut for cells of type $lut.
Using template $paramod$e6f697a41ca7eee89294c8f6f932c649b32363f3\$lut for cells of type $lut.
Using template $paramod$9da7351507b14199100c242351caa6b05c38f329\$lut for cells of type $lut.
Using template $paramod$54eb02622025ac3a163664f7e58b80d14bc2afba\$lut for cells of type $lut.
Using template $paramod$f05810a5fcaeb004b582ded34b3e3b20689f12f0\$lut for cells of type $lut.
Using template $paramod$cafd8690838b474740c01b432f3d6b21bbf49fc4\$lut for cells of type $lut.
Using template $paramod$c50ee9839877d9234a0dbf98d3a1703755835c34\$lut for cells of type $lut.
Using template $paramod$bd2810bb22acf4c1ec2171196fb55f83fa07666f\$lut for cells of type $lut.
Using template $paramod$908b03fcccdf88ec212f702eeadc02272db2be02\$lut for cells of type $lut.
Using template $paramod$cdca3da080d7b4db509adaa0e8393576f56be6d9\$lut for cells of type $lut.
Using template $paramod$3988320d46542c62d946c5d006b13a9efd3e1b50\$lut for cells of type $lut.
Using template $paramod$a1e29cbe38c20bd02a33d9b50597fbf8379230d8\$lut for cells of type $lut.
Using template $paramod$5648a2069d719a1db58f38b7c09056fa8bf55c3b\$lut for cells of type $lut.
Using template $paramod$3068fc9d9825fd6ed7a0da71e30dad90b081caaf\$lut for cells of type $lut.
Using template $paramod$8511620ac19936d2cfc7b6c5ad7b35ef8bb8fc70\$lut for cells of type $lut.
Using template $paramod$6840d42bce62df675a9fb2df4310960d0e7cd9f1\$lut for cells of type $lut.
Using template $paramod$5e5adf6e87da0974d14919ef778defb32a63fdde\$lut for cells of type $lut.
Using template $paramod$0fe139d6481cc0c68e67b15359ffc9e165bc3f02\$lut for cells of type $lut.
Using template $paramod$f268ddfcfd26ed9ab121e74e5527e854c7db00a3\$lut for cells of type $lut.
Using template $paramod$44762daffcbaba750fc17c397f6d1c3a0d1f890d\$lut for cells of type $lut.
Using template $paramod$35c65319ceb92c441c1bf00b599bc2ea7b7d3564\$lut for cells of type $lut.
Using template $paramod$e32be8fe33b58808efdcb13364b0ebd2facb01f3\$lut for cells of type $lut.
Using template $paramod$ea24f7c51108d0fea3b99283e0efea089b14abb9\$lut for cells of type $lut.
Using template $paramod$8dde6f2fafa18acfc59793d377a7ea3af33db6e9\$lut for cells of type $lut.
Using template $paramod$4d7e32bcad0d04d7771064c46be090d5dcafb5dd\$lut for cells of type $lut.
Using template $paramod$6fd07c65e950e40031d7ba02670fed7d9160c1c1\$lut for cells of type $lut.
Using template $paramod$5eeddff01a63025d2c2b4bb67653851715c09f2d\$lut for cells of type $lut.
Using template $paramod$6f9019e6999f7efb0c2c8f1f569da80a827f9b1e\$lut for cells of type $lut.
Using template $paramod$ca8e5a8fbb72e06bae63ac26100c2f216e8a4458\$lut for cells of type $lut.
Using template $paramod$cbe781ae2cbf25ed3b8e45ecd84a309ea8a48dfd\$lut for cells of type $lut.
Using template $paramod$b9b082e65a8a13cff0359b09da2505f96ebb340a\$lut for cells of type $lut.
Using template $paramod$c8b08a04f186596887013a2b25618cb1b55a53f8\$lut for cells of type $lut.
Using template $paramod$14e3e95a0aba80463ec9eb8911ea18bbe49947aa\$lut for cells of type $lut.
Using template $paramod$5ddff2e757ccd059b91edbff9f813d319fecfdca\$lut for cells of type $lut.
Using template $paramod$815a5cc0d710a8085ee6bf614621e907fdc27cf8\$lut for cells of type $lut.
Using template $paramod$e34f51d9d6afc0958736db0c2f6b412a4d7a9ced\$lut for cells of type $lut.
Using template $paramod$ec713e1c525bfb6422f46b2544b70dd4276a26f9\$lut for cells of type $lut.
Using template $paramod$7eb124d5024955abbbed604cd83f203f0a3764ca\$lut for cells of type $lut.
Using template $paramod$a9f666f9a02a7a6120818a33750599b5d7a72d10\$lut for cells of type $lut.
Using template $paramod$975a87fbd86fbda7bf5a4a8154469c48ab9b74f4\$lut for cells of type $lut.
Using template $paramod$a034ca2e3ca93ee5b860509a9f61f1081e9dc404\$lut for cells of type $lut.
Using template $paramod$9a941a44a84c4f7d215035c4f4a41c2013394345\$lut for cells of type $lut.
Using template $paramod$eb3a4e7248bbc16ee294cf3f3ca38aa7f2ab5ecf\$lut for cells of type $lut.
Using template $paramod$3af43c737712007b329405c7524285f7ee148334\$lut for cells of type $lut.
Using template $paramod$117b9a4b4c52e51b6295722b75481b3f596316d4\$lut for cells of type $lut.
Using template $paramod$5d2a87ac36697671947f5e80b6ce35e993e84d83\$lut for cells of type $lut.
Using template $paramod$cbc9db30e7407afcbecb02de912e3220345aaf54\$lut for cells of type $lut.
Using template $paramod$71beccd451c1573a91468470791b637ae9689e89\$lut for cells of type $lut.
Using template $paramod$4cd2605eacf1a61411197bad06ef208db50ecd5f\$lut for cells of type $lut.
Using template $paramod$fc58e6b095503a8b7ffa40dc2052767013dd0ea7\$lut for cells of type $lut.
Using template $paramod$99f37e8be8b8489d28eea274357ef385864616f9\$lut for cells of type $lut.
Using template $paramod$b9b71fb36af12a34edfef247470360ff86c7787b\$lut for cells of type $lut.
Using template $paramod$fc8f0ab7765ff2a410f2184f864f207b97085fb6\$lut for cells of type $lut.
Using template $paramod$bad1d9785c8fe2d5e06f5d6b9990c9d8cde0d8b4\$lut for cells of type $lut.
Using template $paramod$5fa5cf71d47d03554141b3994c5b93d47e83c9f8\$lut for cells of type $lut.
Using template $paramod$5ff79b7e59343ba03df467999cd21367cbab97b0\$lut for cells of type $lut.
Using template $paramod$7739d24c8c6a8a0437279830c892ccf3fac95f57\$lut for cells of type $lut.
Using template $paramod$e418c187daf8a49b822553f32edbd75585b4e94a\$lut for cells of type $lut.
Using template $paramod$670e1926dc157d2c8e2fcae950e182cb8e211a28\$lut for cells of type $lut.
Using template $paramod$8f2faaee2e8832469df5b10e6f76adecc87dfaa2\$lut for cells of type $lut.
Using template $paramod$5df306f703f4f476e14c21a9bf1f92cabff84af9\$lut for cells of type $lut.
Using template $paramod$98ad61f4b0ed4f3808a9a11c29c18e506a0e2d44\$lut for cells of type $lut.
Using template $paramod$e71fdd63db14344faff418168fd0dd534f5a7bef\$lut for cells of type $lut.
Using template $paramod$297ad35f77c2f7b3fe5017d8910704643b4beceb\$lut for cells of type $lut.
Using template $paramod$b6529bbd8310410eff195034cbd7519721af8764\$lut for cells of type $lut.
Using template $paramod$688b94dc53ba433bef27e94dcb1ce75bf067201a\$lut for cells of type $lut.
Using template $paramod$bfba1dd77671fbd5f50bccf5ec3ff53720046c46\$lut for cells of type $lut.
Using template $paramod$0b0f5400caaba1d593c0c89ae068c912126fb8a0\$lut for cells of type $lut.
Using template $paramod$dc98c0cebfc4b7fab0f559ded75c2845e93c8ef5\$lut for cells of type $lut.
Using template $paramod$96c170012946ddaf39a936d6819fd7f9774ed2a8\$lut for cells of type $lut.
Using template $paramod$180c7044c26c39c25b7b1e148507a441316d76fd\$lut for cells of type $lut.
Using template $paramod$a92567788228f9b2272479a18b945a1bd92e1da0\$lut for cells of type $lut.
Using template $paramod$c3cff174e4ffd896b902866ce17be8cd1ac2aa6f\$lut for cells of type $lut.
Using template $paramod$2acc56796dae1e7bbd8d34441a24f749523f3d30\$lut for cells of type $lut.
Using template $paramod$856b1b7aa8277d85ee32f092939efdb4acd49f4c\$lut for cells of type $lut.
Using template $paramod$233b2dde1755e086eb274e52e7dd374e20b98ad8\$lut for cells of type $lut.
Using template $paramod$e36996bcf437c0063f6eb97af8916cf1a6236d6d\$lut for cells of type $lut.
Using template $paramod$c323a2dc11e9a727fe889a9c7094f17db77f5a2d\$lut for cells of type $lut.
Using template $paramod$f6433d335864701372f418737287c867009d6526\$lut for cells of type $lut.
Using template $paramod$8e64da590d8bbbe4cdf70d64862a5187cbd9aacb\$lut for cells of type $lut.
Using template $paramod$dd85f40cf1dcb8d8ff074f212acf832e9a11094e\$lut for cells of type $lut.
Using template $paramod$ecb7876578e6a5ec5330ebc2686f32c741a81b84\$lut for cells of type $lut.
Using template $paramod$bf0d0292861bdee659ef5cbc5e58b330ac5871f9\$lut for cells of type $lut.
Using template $paramod$fcd837ffda3600947f2cdb1097255c4726eef28d\$lut for cells of type $lut.
Using template $paramod$02665cafa730bc58f40959093b87a6257c1a2814\$lut for cells of type $lut.
Using template $paramod$cae22bb253ae18b9cc25e2519ee32704a9608603\$lut for cells of type $lut.
Using template $paramod$1ca3fbf68dff2b7b3ecdd4d4d0ce7672611c40a6\$lut for cells of type $lut.
Using template $paramod$758993c9c93da0c4eeca5782be12fe1dd2a607cf\$lut for cells of type $lut.
Using template $paramod$514c2ba27eec7b7889e1e672bf89f35765bfb8a6\$lut for cells of type $lut.
Using template $paramod$37ad17bd63ace40a2bb0734bcd7886167a7e8d1f\$lut for cells of type $lut.
Using template $paramod$12a48b4f9d51d78cbb3bf26d0fdf339bc5969dc6\$lut for cells of type $lut.
Using template $paramod$e3d52bfb63ae37d2432788d2eccd52936e439aa2\$lut for cells of type $lut.
Using template $paramod$3cc29dbd9a771a0240a622b729cf23f8b444b21f\$lut for cells of type $lut.
Using template $paramod$6e97e6a7f6dea1e2a0dc3ead30d7e3ba439a01ee\$lut for cells of type $lut.
Using template $paramod$364339ccb7ba496abd6b84ed3ed44a52a4e9b2a4\$lut for cells of type $lut.
Using template $paramod$9318ff122ad96f825a8baadf0d35bece0b2eb74c\$lut for cells of type $lut.
Using template $paramod$9ac4f61eb8c1cc5f4cc383c3c28ccf61704b0568\$lut for cells of type $lut.
Using template $paramod$c44a7d2cf043060e36589b3afbe4ea5fa22be60d\$lut for cells of type $lut.
Using template $paramod$ac07072bd3185493419f7f1882e9ef2caf132777\$lut for cells of type $lut.
Using template $paramod$612b7975fc75d385c0b52479ed7e7d25f7f8f843\$lut for cells of type $lut.
Using template $paramod$a8ac490316f138f5bc4aee32dbf52b1d6e157f5e\$lut for cells of type $lut.
Using template $paramod$98ef9d215e10f3bd61b2628de675531f06473e85\$lut for cells of type $lut.
Using template $paramod$1515938a01f123fe3d728f90bda2f2355aac53be\$lut for cells of type $lut.
Using template $paramod$995ba512a447d27709010e6e3906195ddd4dff0a\$lut for cells of type $lut.
Using template $paramod$6551da9d72a7dbeabff1207da4ae92cb6457015a\$lut for cells of type $lut.
Using template $paramod$bce9ba789b227b40e71c189df6adcb2a2c2e76e1\$lut for cells of type $lut.
Using template $paramod$35ef32d2e964ffe3774a85710993cad4792b418f\$lut for cells of type $lut.
Using template $paramod$26a2265dc3d906e42e6d66aa4a34e58bfa4374ac\$lut for cells of type $lut.
Using template $paramod$546f03a105f58adb2a5771dda9ebcc4ce5baf3dd\$lut for cells of type $lut.
Using template $paramod$96cc51922f339602895aa7195ec43c1086e6eb15\$lut for cells of type $lut.
Using template $paramod$8a721e8af6398efa0fd9b1b87fe3fa9f0d5c7186\$lut for cells of type $lut.
Using template $paramod$df4f0c0b610c9dae47f3ca04dc14e26783b3b3b9\$lut for cells of type $lut.
Using template $paramod$4b92cfb69608b981349e0dd7f557c72e008f02c8\$lut for cells of type $lut.
Using template $paramod$a1fb261c4791e5f2263e51595a298951c27d694e\$lut for cells of type $lut.
Using template $paramod$c2ab8ea500bd33cb0011db937cbf54ae60df8930\$lut for cells of type $lut.
Using template $paramod$0705ea5171132b0c0c4c4a979b568bef38a2e17e\$lut for cells of type $lut.
Using template $paramod$64682d7d0ec44adc79b99761326dd5363032c82c\$lut for cells of type $lut.
Using template $paramod$95ccc768efc03834e5898f6acfd6958d31775644\$lut for cells of type $lut.
Using template $paramod$a2da25267c23d3167901d2d77d8a1024af945043\$lut for cells of type $lut.
Using template $paramod$93721cfd6320e3a725288a7d492a42eed6bcb5c3\$lut for cells of type $lut.
Using template $paramod$d9fcc5ced32128eab74a02aac9f79ca76e78721d\$lut for cells of type $lut.
Using template $paramod$a8bd02a7e5ce01918f902c876189fe753369e4f7\$lut for cells of type $lut.
Using template $paramod$343d04990f2ad8b892251a340c8ba3d6e1e5014c\$lut for cells of type $lut.
Using template $paramod$0e6e2c2f27aa692c572a0f95fa737ada9b8194fb\$lut for cells of type $lut.
Using template $paramod$7bfb86a70cac58c791623b0793843298057a0d4b\$lut for cells of type $lut.
Using template $paramod$bd9c5ccb4e8b571f1f7871ba52786ae0a4537314\$lut for cells of type $lut.
Using template $paramod$92c8c7ec4ef807ab22d9170b63e9431932590248\$lut for cells of type $lut.
Using template $paramod$23bc76d6bc175a0621bea20c380a12b6628bd31e\$lut for cells of type $lut.
Using template $paramod$e2c74232b475ad71eb2fb078d9bdc27cbed2ceda\$lut for cells of type $lut.
Using template $paramod$da9a92fd362a5b0b5a7693717a421a3755b54354\$lut for cells of type $lut.
Using template $paramod$71d6d3d7653dd35f0f0d8d3740edf95dfe9e8e8e\$lut for cells of type $lut.
Using template $paramod$cc6f168b93470fcc711df6312603d46c5e4b0e07\$lut for cells of type $lut.
Using template $paramod$f6f345cec4901a2cec8766d227ff5a224b6a9fa9\$lut for cells of type $lut.
Using template $paramod$d57c4f6051cd374b5f104f0ebf39105d61f80870\$lut for cells of type $lut.
Using template $paramod$dd116564781cddfec83f927ad493df0f2d40f20c\$lut for cells of type $lut.
Using template $paramod$81fb5f9c790b436960d36ded1eec0f158461c560\$lut for cells of type $lut.
Using template $paramod$826450eac6d90456dccf5a6da1580c28c2dfa3b8\$lut for cells of type $lut.
Using template $paramod$5300cdcb82389837c65a795bcd8990283d980008\$lut for cells of type $lut.
Using template $paramod$a8649a3823f116e91f073097486408b59a40cd94\$lut for cells of type $lut.
Using template $paramod$c49a315f6aee9493ed6d52f6c8986a8c789821e9\$lut for cells of type $lut.
Using template $paramod$cac8c197f49d750b5782a0a94e235fbbdafb0f0c\$lut for cells of type $lut.
Using template $paramod$bdadf1069ffc3d65d1051e43b44b40b941e74ce1\$lut for cells of type $lut.
Using template $paramod$3a32a7587b9f95b908af04fb9b75cd3eae00b58e\$lut for cells of type $lut.
Using template $paramod$86e4ac392b89fc0cba75f5d7a03d15d56a120fdd\$lut for cells of type $lut.
Using template $paramod$a95aeb58822b83840ad0d33221e28b316b409b83\$lut for cells of type $lut.
Using template $paramod$acd94dffd1776217bc0bb0eb80daa4692fb41a6e\$lut for cells of type $lut.
Using template $paramod$95dae71d66cfc754a1edf34daedcb33e29a90d1b\$lut for cells of type $lut.
Using template $paramod$41ad54b63163af18e7ffa46027eccc23b5642535\$lut for cells of type $lut.
Using template $paramod$5d3e61cdc956c1c36047b375e4ff343906c517f3\$lut for cells of type $lut.
Using template $paramod$d74e09462fda0d236ccfb82768bbd73155a8cdbb\$lut for cells of type $lut.
Using template $paramod$c6877fb5524c621574f0e24d9171263cfb0df847\$lut for cells of type $lut.
Using template $paramod$2121e6135a2752498c098b8d030964fea78b85b3\$lut for cells of type $lut.
Using template $paramod$5b06f564fe27803bdb120cc26755134f15da576c\$lut for cells of type $lut.
Using template $paramod$4e047a92c8ebb04ce2374315861f66cf7101fe54\$lut for cells of type $lut.
Using template $paramod$6f6d65e4bad29b6feee85e5a10d40ee1ca64f7c6\$lut for cells of type $lut.
Using template $paramod$54f12bd7bbd207dd1c499d37e1b37a423da6d5e6\$lut for cells of type $lut.
Using template $paramod$e9e9f31eeb53e5de1e9a422ef677aa629d3e0943\$lut for cells of type $lut.
Using template $paramod$739699ba3f3695276f89f4a880499c3555536567\$lut for cells of type $lut.
Using template $paramod$d40e6f4cf7364ea2f29e250036b4e773f2ee42c8\$lut for cells of type $lut.
Using template $paramod$f18ab3e7ef10361e60c739a0496c050b71b889a8\$lut for cells of type $lut.
Using template $paramod$abdc2b8f828af8721ec1f8602be5705d30805f68\$lut for cells of type $lut.
Using template $paramod$673efda7cf44a4b6d45e0ebc2f03e84a40f7777f\$lut for cells of type $lut.
Using template $paramod$7e466367e8e490fe928ac14fd3075b445390f56f\$lut for cells of type $lut.
Using template $paramod$eeb75564e03d245b1617e7b45453dbd80a2d2cef\$lut for cells of type $lut.
Using template $paramod$a5a3bce3ec1ab4e24cb8d2d60b772ba37c156eaf\$lut for cells of type $lut.
Using template $paramod$228a1b014bb334eab542d443fab9a184ebcaa0f9\$lut for cells of type $lut.
Using template $paramod$6a0009eeac2e17449b216b778e8b0490a5aee8f1\$lut for cells of type $lut.
Using template $paramod$8540776f727c2222f7faf65574aa1badbff84d9a\$lut for cells of type $lut.
Using template $paramod$9664483609d9e726df9697364de1aad825ad3979\$lut for cells of type $lut.
Using template $paramod$ee48b7ded3749e9b62cfa8096320726cfffef462\$lut for cells of type $lut.
Using template $paramod$daad4767108a3b05826b2562f8f562e0e6bc57b4\$lut for cells of type $lut.
Using template $paramod$838ef00880248c8a5055787ceefd775ee569133e\$lut for cells of type $lut.
Using template $paramod$194e41565a8b9788b675b538a57e8d834f1c3b8b\$lut for cells of type $lut.
Using template $paramod$0a384fcfd63a38407d465dea61faa7af7b050663\$lut for cells of type $lut.
Using template $paramod$806560914f0736ec71bc02b9eba3aacebffbd867\$lut for cells of type $lut.
Using template $paramod$0ea3ddac1902ac33ea090c6295777eeddcbba8b7\$lut for cells of type $lut.
Using template $paramod$019668beeb7f5bd5c8ebcbb6fa06f4b37bf84e10\$lut for cells of type $lut.
Using template $paramod$585db9b16bd44bee6a0cc3c9fb29c768394128e9\$lut for cells of type $lut.
Using template $paramod$79825960f8350b5fc284294a889314e408796a46\$lut for cells of type $lut.
Using template $paramod$6d0c45206acc33c2b9bb60d4858b553f1a9275d0\$lut for cells of type $lut.
Using template $paramod$750ae96d3d3504d5dd30d06ccd97600aa37e80a8\$lut for cells of type $lut.
Using template $paramod$4e850684dafc82704cee21b8e8ecc57f3e082442\$lut for cells of type $lut.
Using template $paramod$e4d500740bae835892a86defe8ae440911a28d14\$lut for cells of type $lut.
Using template $paramod$a4038f8aa148b4a780ad94c8fb03ef8eb5875aec\$lut for cells of type $lut.
Using template $paramod$567ee006ec1710f46d4cb9c7eeca34c776139163\$lut for cells of type $lut.
Using template $paramod$c1279077f8d3688d3f581b3645cc325c3381f143\$lut for cells of type $lut.
Using template $paramod$fce3a37eba2cc3dc6ddb21efccb2dc8dc35ee8d8\$lut for cells of type $lut.
Using template $paramod$d1bb57b3da0dc754c3df13685a35f70a3f0dc3d3\$lut for cells of type $lut.
Using template $paramod$5dd7bbe0bd3f3a1ad1e7af2fcab6eb632926860d\$lut for cells of type $lut.
Using template $paramod$ed90664a7567213243998ea2e4b8679a8d7b49ee\$lut for cells of type $lut.
Using template $paramod$f2d9a3b24a3e54a111aaf17b9f5956715e920c18\$lut for cells of type $lut.
Using template $paramod$da9d6eb00307d15292e014cd59e5b9098c71b3b1\$lut for cells of type $lut.
Using template $paramod$f18df0791f746622845c8f8a32e4dd7aa3d7f1d5\$lut for cells of type $lut.
Using template $paramod$2950288c8408706d55cb0926c3c6bda077975e4e\$lut for cells of type $lut.
Using template $paramod$1d16ecab382dd1b1ad1a3a34434376fd693de0d0\$lut for cells of type $lut.
Using template $paramod$f4540d3f25c5eb4fa57d286fabd480917f92f83f\$lut for cells of type $lut.
Using template $paramod$99bf80fca3ed9a6efeb6a988ce32ea252f1dbea4\$lut for cells of type $lut.
Using template $paramod$2b7c0a87b8b08052583dd6fd0e9d7757cbd4315f\$lut for cells of type $lut.
Using template $paramod$4fc3201075918fe7754a564a7dfda585eb6867fe\$lut for cells of type $lut.
Using template $paramod$f4828b16c3416a44bd9509e5668eac4d4c392a7f\$lut for cells of type $lut.
Using template $paramod$42e72782e0c1b241c3848d3296985c44253ebdfb\$lut for cells of type $lut.
Using template $paramod$568964b71d508937412fdd26a01103b547195ac1\$lut for cells of type $lut.
Using template $paramod$57c9aedcc65892fe4e6ad62c5bb3faea6c10f712\$lut for cells of type $lut.
Using template $paramod$5ba8b401720bd74d32614f78ec645c74a3ef01f7\$lut for cells of type $lut.
Using template $paramod$033159b1792b09a2a6f02a0def5f7df78064a58d\$lut for cells of type $lut.
Using template $paramod$283e48bc5625c07b9fac70b2da3322ff89bc2ea9\$lut for cells of type $lut.
Using template $paramod$019c782c10ab2c96af36ebf2012e285c7b427a96\$lut for cells of type $lut.
Using template $paramod$342215262e526970a887fa6f5903c2121fb3763c\$lut for cells of type $lut.
Using template $paramod$78fa97a2cd7f39b32a06cae14b046d7e8c5a73fa\$lut for cells of type $lut.
Using template $paramod$b754150badff55b5be06b9d2b12b4d11c90b4790\$lut for cells of type $lut.
Using template $paramod$190a0ba346ed167808736112e6928046e04f71f5\$lut for cells of type $lut.
Using template $paramod$e8ab6cbf8b0113b4d69f6ec321a7c40d1babf0fd\$lut for cells of type $lut.
Using template $paramod$c5958aabd1a2504690f4c0eeb86a06507108d1ff\$lut for cells of type $lut.
Using template $paramod$22b0f517b2345992a5a6fe4494254a6aa6083fd1\$lut for cells of type $lut.
Using template $paramod$b3e4c7c5967ceafc8d2312edb20ff8b11f681b5f\$lut for cells of type $lut.
Using template $paramod$e81246a10c82a7c728c684c0218469159eafb5fc\$lut for cells of type $lut.
Using template $paramod$aebc479350695e9301885aabef1a5da677d5e93a\$lut for cells of type $lut.
Using template $paramod$d268ffcd3a405b674ee892f6572f040e01e26fc7\$lut for cells of type $lut.
Using template $paramod$b9c6eff2c30279eaf5ac24381ae394775dce352f\$lut for cells of type $lut.
Using template $paramod$9fcd2639e2c3a78f7203fd3eb760be130d011d2c\$lut for cells of type $lut.
Using template $paramod$ca260995b172aa4c9c5dd2cfd96abcb790c4fdd6\$lut for cells of type $lut.
Using template $paramod$cf919ef543aab84dc2157753bd9a7edcb94627cc\$lut for cells of type $lut.
Using template $paramod$53c9776a3ef988403278119f74127aeb644faec6\$lut for cells of type $lut.
Using template $paramod$5bb18c11c4973cdb1a87053a0615aac3bc69da44\$lut for cells of type $lut.
Using template $paramod$15773b9feeb817111786f7edb8b5ee66e9486a5f\$lut for cells of type $lut.
Using template $paramod$a1b80a4db1d97e4e0f7e188ec2482c9741eb4af4\$lut for cells of type $lut.
Using template $paramod$fac09906140ca2f7d03020559a0ff6027eea2d08\$lut for cells of type $lut.
Using template $paramod$ad5839ec9619d01c3c7314b3c04995f58445084a\$lut for cells of type $lut.
Using template $paramod$9bafa46f3c31c262a93524484bbe9f6a5a9e43f0\$lut for cells of type $lut.
Using template $paramod$f032b7984b2126bce06ff2039566cb672257061b\$lut for cells of type $lut.
Using template $paramod$283fa01155e8bb088c8bcb7670160a380db0d5c2\$lut for cells of type $lut.
Using template $paramod$df5e17e5315be5cbef02ae0c2d568b76e7234c9a\$lut for cells of type $lut.
Using template $paramod$411102185cbb1850dc1eb206a8d7f79dfca33b51\$lut for cells of type $lut.
Using template $paramod$fa919f6d6f1d121c034dcd77e423d8f3aae3218c\$lut for cells of type $lut.
Using template $paramod$6ed43c395a58ecfaecfbaf7988fb1704173b183f\$lut for cells of type $lut.
Using template $paramod$5e5cc1a921a7c864f1be8b8f3fe83efdd653a7ef\$lut for cells of type $lut.
Using template $paramod$05e3da15a9ff525a71c0c5b029805883f00ccbde\$lut for cells of type $lut.
Using template $paramod$acaf5324fc6980ba6d736e00aaa85d638725e0b0\$lut for cells of type $lut.
Using template $paramod$e7ec40f6330df1c85d021cc8deae8d5cc3e72381\$lut for cells of type $lut.
Using template $paramod$3cb809e44ddcab4754f87c58d38d27000582e25b\$lut for cells of type $lut.
Using template $paramod$6aa16d5569383c4642e561e2508f3f8c454e9a68\$lut for cells of type $lut.
Using template $paramod$a741a50a4b19502eec1e4f4cbcf950a5dd1189e5\$lut for cells of type $lut.
Using template $paramod$a62930c8fd0acd2e9ec63eec8c5dad92a7b8317a\$lut for cells of type $lut.
Using template $paramod$b51efbe60bfe91be21fe4a1e48abe51d0b2efb59\$lut for cells of type $lut.
Using template $paramod$3e6405ad55cfa0c939498913f1f347916ee380ab\$lut for cells of type $lut.
Using template $paramod$08ead7db9e78800b442d327a57363d4b4aed6b92\$lut for cells of type $lut.
Using template $paramod$98b9d9a49b4183ced3d60359d99cbc94083c3be3\$lut for cells of type $lut.
Using template $paramod$49afb1126fe5437acbee7ca16813fe3018cd64d6\$lut for cells of type $lut.
Using template $paramod$83f757abd295cb2ee7f2f733cc897b39aeae6daa\$lut for cells of type $lut.
Using template $paramod$2100f778870c81d57a07705e3b208a06b62704ac\$lut for cells of type $lut.
Using template $paramod$fb60ece668e0ef9728f2267ea3423a0d0b48308e\$lut for cells of type $lut.
Using template $paramod$46beb1e8306baf4c25f403dfa1eae6cb22ebf9ad\$lut for cells of type $lut.
Using template $paramod$484b60cb2f514b0a3f199384fb747519ae5916c7\$lut for cells of type $lut.
Using template $paramod$25b44aa476b2eb7bb3dc8d958b00945a2184b6ab\$lut for cells of type $lut.
Using template $paramod$e371e6bbbc90b8067819341c9408ae27268fcb6a\$lut for cells of type $lut.
Using template $paramod$16aad32f16ff349cf6668ab4b4099f2448329117\$lut for cells of type $lut.
Using template $paramod$e7d49a69a8dcb9c73c9e0ea8933dfff3b64d6e0a\$lut for cells of type $lut.
Using template $paramod$a1c05861a278c6bcf48f79605b52a053d25df53c\$lut for cells of type $lut.
Using template $paramod$ac3c1d303c72d54db203359d87e390d01c9727ba\$lut for cells of type $lut.
Using template $paramod$5deb94f010fbcbeb39898e02619170cb6725bd6a\$lut for cells of type $lut.
Using template $paramod$989c20754efe1458a01d0fb9c1dd866f5b7deb54\$lut for cells of type $lut.
Using template $paramod$21bab29215e4f8491d51f75a3671b82a8beefc76\$lut for cells of type $lut.
Using template $paramod$85c381ab7140a4e6c9c98308f5282d3783ac6920\$lut for cells of type $lut.
Using template $paramod$727beb2cb4321e0a96834a838a87b6f44c5b174e\$lut for cells of type $lut.
Using template $paramod$61bc98ece8c76bffd4acdf40e5f231340cba90fc\$lut for cells of type $lut.
Using template $paramod$4efd1b47743553d2acd3bf9d6f9320a0d69e4d5a\$lut for cells of type $lut.
Using template $paramod$548c698cfae52796a9bf38a07938ef9681b1d750\$lut for cells of type $lut.
Using template $paramod$b196716efec7146e7982f5280e4c01d7210189f8\$lut for cells of type $lut.
Using template $paramod$536626c3c8f09c1aa39730376fc94ebc4a62e0b1\$lut for cells of type $lut.
Using template $paramod$e7a3a36af64ce83289671504c4235179d46311a9\$lut for cells of type $lut.
Using template $paramod$9c209ba2c9ff33fe764e529516730f07cb1b5f98\$lut for cells of type $lut.
Using template $paramod$3dde7211ede9bc6aac0c428b91be53b6d0255b25\$lut for cells of type $lut.
Using template $paramod$cc778a82fd81ea9185402656ce1c9108e4328ce0\$lut for cells of type $lut.
Using template $paramod$ee6682f13f4058ad3f1adfcfc64fc4b737208600\$lut for cells of type $lut.
Using template $paramod$4b6ad0ebda42cf6130bb7dce8df234a3f8cfe0ef\$lut for cells of type $lut.
Using template $paramod$eb4afe1f4561e6e23fc2ab55f7475a98f617d9c8\$lut for cells of type $lut.
Using template $paramod$3d99dc5a8e8d1ba9984d923697b2f29beaf0c02e\$lut for cells of type $lut.
Using template $paramod$47ba083ebfd1b19b74b0d2ceb26444419107c5ec\$lut for cells of type $lut.
Using template $paramod$bbd1b045507f8f411351941590f6972d08e97b6b\$lut for cells of type $lut.
Using template $paramod$dbbd4cbcfe38db3a951af63973f75871bcb65b66\$lut for cells of type $lut.
Using template $paramod$a546b0533fa17e475da50d80ad9a05300b7b4fc1\$lut for cells of type $lut.
Using template $paramod$fb8df25a60231b1e0616acac747dcaf9f5a63657\$lut for cells of type $lut.
Using template $paramod$eac7ee502612457d62e471974b70426d3c28f7fd\$lut for cells of type $lut.
Using template $paramod$12b3ded16961cd2e48ef98359fd5d3f08c92e3c3\$lut for cells of type $lut.
Using template $paramod$d2e7b66a0bc0e8adbb1fb28d1d7065d6e337ed61\$lut for cells of type $lut.
Using template $paramod$1ee5f258df10caab55441ff3170844321f396a32\$lut for cells of type $lut.
Using template $paramod$9b06d203ee1a8c171b8b95d379759cb4924c7d14\$lut for cells of type $lut.
Using template $paramod$1454aa72ee0493162c6e451104f5aa7f1c446f3f\$lut for cells of type $lut.
Using template $paramod$33e7e86c67b5ec12cb6cc62094e6d9f4919a66a0\$lut for cells of type $lut.
Using template $paramod$2fd453efd83169f340af9f655f5ad2f729ad4c2c\$lut for cells of type $lut.
Using template $paramod$323bc256021610e19386cf49fe342d9f194f1ef2\$lut for cells of type $lut.
Using template $paramod$2723fa40ebb608f6f97ce0dc2910046ff5aaf2a6\$lut for cells of type $lut.
Using template $paramod$b54668a3c811118a4b6536e9241a096121e12eae\$lut for cells of type $lut.
Using template $paramod$9d91f1b78873bdbc48f383010dea3d84fd8d26c9\$lut for cells of type $lut.
Using template $paramod$7f3617f4b24dd2e899782b88617aab9578e70e0f\$lut for cells of type $lut.
Using template $paramod$c4e12d9d480a580821c4f486b56c629c42f50564\$lut for cells of type $lut.
Using template $paramod$cca122e09766dcc945d731c9274907eba84e29cc\$lut for cells of type $lut.
Using template $paramod$b41fe40269b8e788e7f18bba49e363212cdfa5e9\$lut for cells of type $lut.
Using template $paramod$add3181fb7cc5e1ac230ddad560e031a0ad8f7d4\$lut for cells of type $lut.
Using template $paramod$48f77c173be1d2d19ea14ac0b39cac0df76dcd1b\$lut for cells of type $lut.
Using template $paramod$98431fb10ae6a139302d0ced28620bc00d07c345\$lut for cells of type $lut.
Using template $paramod$ba045d7e56ce1c39a1ea46f85361ff93d980437d\$lut for cells of type $lut.
Using template $paramod$b3aa1703592923ee07c7dc9f6eb7339c1cca0095\$lut for cells of type $lut.
Using template $paramod$e732117b7e48e9f8ec8c1dd91718baab668ae2e8\$lut for cells of type $lut.
Using template $paramod$591fbb5da42130326eb402bec5e70573cbb6912a\$lut for cells of type $lut.
Using template $paramod$488bc1feae260d8f928f02c898553a1b1e85e16d\$lut for cells of type $lut.
Using template $paramod$1e6b4917d6935b290cace1303c78fd8799464b9a\$lut for cells of type $lut.
Using template $paramod$5a9d2fa9d144665273692b18fa557720ea8e71c7\$lut for cells of type $lut.
Using template $paramod$2b035d80f8da5c79477e458830d5b787d3ec97aa\$lut for cells of type $lut.
Using template $paramod$148f9b0eed9cad4587bdba46286c26ea426aa5e3\$lut for cells of type $lut.
Using template $paramod$57f7ecd48c02561f72674989c00e13403d252757\$lut for cells of type $lut.
Using template $paramod$bd165429f7e37d02e245bd2ec8f9b3cfff008ec5\$lut for cells of type $lut.
Using template $paramod$2d6a902e25fb34dbc92c5f4db85741b44a981856\$lut for cells of type $lut.
Using template $paramod$a9d8247ce3c534256335b6adbbaa1e0712747947\$lut for cells of type $lut.
Using template $paramod$7a3ebf12fd04568495abf1a115208a255d8f8017\$lut for cells of type $lut.
Using template $paramod$77ad5b5a13077339c889d22d77e93cfd4da9d15f\$lut for cells of type $lut.
Using template $paramod$d348861460626e6db3ff16c923a489a511b7cdae\$lut for cells of type $lut.
Using template $paramod$f2b0a3076017fc3551c0d9992abb7320c0b87887\$lut for cells of type $lut.
Using template $paramod$7fe249ad51c8e123d2b9de1aaf2b0099dc1abaeb\$lut for cells of type $lut.
Using template $paramod$6867fc4a53c7d601e6f1d4043cfb25e901951645\$lut for cells of type $lut.
Using template $paramod$71a4f8b43105122591649801bbbb9000e8310bf8\$lut for cells of type $lut.
Using template $paramod$58038d3ab500e5dd3575e88572118df0076b7b50\$lut for cells of type $lut.
Using template $paramod$1296d6a20194ef0f044e7918745d75d65d519e30\$lut for cells of type $lut.
Using template $paramod$3806fe0a971d6d2e64a6bd0b6191f5d1778e5690\$lut for cells of type $lut.
Using template $paramod$585309c0c26542c45ea9175f0129c057de59bc11\$lut for cells of type $lut.
Using template $paramod$2fa3b59ef5c9448e31fe6098daf6a67fa3c3398d\$lut for cells of type $lut.
Using template $paramod$8bfca4da5d8e2c9dffc5c290972a6cc157d7d011\$lut for cells of type $lut.
Using template $paramod$1ef739c04bed131ef78e42ff3267f9b038b1b414\$lut for cells of type $lut.
Using template $paramod$4b7183e98db20472269e60e9dbfdd9dddc246d76\$lut for cells of type $lut.
Using template $paramod$02f2af5a1914599f3c18c88f4b60e1ff838dae66\$lut for cells of type $lut.
Using template $paramod$db2e97c472c0391cdaa8c86460239c3157d37f8d\$lut for cells of type $lut.
Using template $paramod$2527b8c44eefc2591e26ce0bc58160e0c862df89\$lut for cells of type $lut.
Using template $paramod$a8661e182859dfbc80df4c71ab05aac2b203dcb5\$lut for cells of type $lut.
Using template $paramod$db9d1177ec039200c06c113b379b3e0569d474af\$lut for cells of type $lut.
Using template $paramod$7fe0b4a45f5e4573b93a0875dab920ff03170e65\$lut for cells of type $lut.
Using template $paramod$9700dcc51bc00458139d52d28610741238e5552d\$lut for cells of type $lut.
Using template $paramod$f86c2421d729b0c35f345868fd87dd5af8208158\$lut for cells of type $lut.
Using template $paramod$0e8e0629602b0d40edf1aa114128c87bff027c37\$lut for cells of type $lut.
Using template $paramod$80f5cddeb8ca10b903c4076c0bafc0b58bb55ea7\$lut for cells of type $lut.
Using template $paramod$66123c073322a87d81b0bda9502817f5677f41be\$lut for cells of type $lut.
Using template $paramod$a36791394a2580f25aa536a7c4147d7e3c5212f9\$lut for cells of type $lut.
Using template $paramod$48e23215fbd19c7a8cbf715928fa7ebd147f0956\$lut for cells of type $lut.
Using template $paramod$e5497d50f0a3bb532dc5145159e5f18278693031\$lut for cells of type $lut.
Using template $paramod$77a3118f9950fd1a51c87ded9da05ae29c330e01\$lut for cells of type $lut.
Using template $paramod$6a1942b0cbb9301fca1094182c06ac20d3bbfbc6\$lut for cells of type $lut.
Using template $paramod$673b3ffaf5168df7a71429b97909683e5c84f191\$lut for cells of type $lut.
Using template $paramod$75348ad823d0b22e813421433e274532cda92b7f\$lut for cells of type $lut.
Using template $paramod$353b9e5912d4186440182bcae600e60597f53b5f\$lut for cells of type $lut.
Using template $paramod$1d6523a7ce901e5dba62ed120f717a5ac8dbc873\$lut for cells of type $lut.
Using template $paramod$650e315d2eb5e02c0501729412273acadd41482f\$lut for cells of type $lut.
Using template $paramod$b8d166b9d1a088cf8fc856f6da8a540ca480c304\$lut for cells of type $lut.
Using template $paramod$6d392ad7c3e46d40e5f8e1f1294b21455baf2d59\$lut for cells of type $lut.
Using template $paramod$ad23695ced2b82a27a952449c1a07b46fa3d5995\$lut for cells of type $lut.
Using template $paramod$0ac16eb620318554dd99ebaa5e4f6007637eaab2\$lut for cells of type $lut.
Using template $paramod$96271b422e71c0777ee8404e77ec2bffbb67a19a\$lut for cells of type $lut.
Using template $paramod$d8d1b9c1160ab2fb4db92eff16a736ed01a16607\$lut for cells of type $lut.
Using template $paramod$d5db5f2af40f55e9deb2d7f8bdeb4b4c95f35628\$lut for cells of type $lut.
Using template $paramod$8743b804384f8f52dcf89eeebd7f9cf908d29513\$lut for cells of type $lut.
Using template $paramod$75584cf1b32b73b6bd42bc22afa83ba01661377b\$lut for cells of type $lut.
Using template $paramod$fcfbd7fe15a3c1773bc8471e174a9cf51ea6f887\$lut for cells of type $lut.
Using template $paramod$ee664ea6122e707a8657f832d925d1dc3f24b749\$lut for cells of type $lut.
Using template $paramod$2da8459778eb973843f7d634989207e9fbb272e8\$lut for cells of type $lut.
Using template $paramod$147c06d5201a39b8496debee530dd10b6dfb291b\$lut for cells of type $lut.
Using template $paramod$21545813cb70d496883f4c0f2cb1a274394cac0f\$lut for cells of type $lut.
Using template $paramod$552e3322e4b067f4d534291d7d7f0fa4db22b890\$lut for cells of type $lut.
Using template $paramod$4b43077392a4365d9c330215c4a16341cb06e5ee\$lut for cells of type $lut.
Using template $paramod$a2544277c91372360fddda1d50674744eeda896d\$lut for cells of type $lut.
Using template $paramod$2e45d918dee7ed6a181a49f341e7b7445c9fddfe\$lut for cells of type $lut.
Using template $paramod$916c7e8f7b8e3a697d408b86538a5a270cf8a7cc\$lut for cells of type $lut.
Using template $paramod$0004bd9b181976fb13bda6c70c4644eb32cecf3a\$lut for cells of type $lut.
Using template $paramod$ec61a3bed9c812c0581314d75db42f57c3972c43\$lut for cells of type $lut.
Using template $paramod$9bb5ad33653c6d630386d8b50b5a3e4fa7339550\$lut for cells of type $lut.
Using template $paramod$ff546c82116db59bb9c150757e2ec74aaa1eae47\$lut for cells of type $lut.
Using template $paramod$047793ac55b570be77bbc89ffba71bfaae4424ad\$lut for cells of type $lut.
Using template $paramod$481237a5a0d6685e5015cfad2d6072bc6f67e62f\$lut for cells of type $lut.
Using template $paramod$0e041d9f999d367ec6cf3353538d826e0234c253\$lut for cells of type $lut.
Using template $paramod$71f95e353bdc4eaa38973aebcecb1d162214a5f7\$lut for cells of type $lut.
Using template $paramod$5831a633d20f6af2ef5cf6bb636738376fb9c35f\$lut for cells of type $lut.
Using template $paramod$43ae047297d06b0635e56be2f70a0633fd9b8428\$lut for cells of type $lut.
Using template $paramod$32ea826bce69107fe6b94cefac49675de69e82ec\$lut for cells of type $lut.
Using template $paramod$5ce636af2f3494435205d6fd58e78481db416014\$lut for cells of type $lut.
Using template $paramod$b59b98cf1a05c7aa51b8af72e87d01bdac79880b\$lut for cells of type $lut.
Using template $paramod$52889d5d1e49cebe91699bc24a7a489f182d4c60\$lut for cells of type $lut.
Using template $paramod$a68673ed75bf0bcf4ae0ec773410833a724941ef\$lut for cells of type $lut.
Using template $paramod$936264f3e93af964fba7ecd49f68bba3c4158f39\$lut for cells of type $lut.
Using template $paramod$2f6e960aae4aea19fb536fb0ff6d962ec56f57c0\$lut for cells of type $lut.
Using template $paramod$2195d56424bb1c6c2268d3163fe8df6987fbfb16\$lut for cells of type $lut.
Using template $paramod$685148ef3c10b9b9599e471c1fabeddaf4e64fda\$lut for cells of type $lut.
Using template $paramod$c6111675baa2414bbbc3beabd9548b99fa52cd0f\$lut for cells of type $lut.
Using template $paramod$8a3b74d5a19a1300de93be43c194d7c144a2f7cb\$lut for cells of type $lut.
Using template $paramod$04ae10f7d848c17f6abdd4c00ba30939b2cb4eb5\$lut for cells of type $lut.
Using template $paramod$1c1acd509851192d6514b2d4acc7f4b40c1f345d\$lut for cells of type $lut.
Using template $paramod$0a74a4732131d776b205b71f97c4e67b17835813\$lut for cells of type $lut.
Using template $paramod$6d675b0d6557801ab5e7198cd1df000bc3f7aa8d\$lut for cells of type $lut.
Using template $paramod$79090fea0a189d517bcdbb9584d01c581b398332\$lut for cells of type $lut.
Using template $paramod$6af023d04780a6b54e8dd53dc6126bcf1a45e79b\$lut for cells of type $lut.
Using template $paramod$8891e00a2073855b038f64057f14e5058d966964\$lut for cells of type $lut.
Using template $paramod$a7e08ab2e10e356cf265124676d60918b4a2e5a9\$lut for cells of type $lut.
Using template $paramod$99ad4481c7d32119a7a409258029e91850c6e85d\$lut for cells of type $lut.
Using template $paramod$56bfb9c7bc4e9d036b2c8ade273bc395ad3f1805\$lut for cells of type $lut.
Using template $paramod$c07f0533eb4630d0040f0092b45e5c447e241aca\$lut for cells of type $lut.
Using template $paramod$059a18b83f440098c69d0c68999bb03d1f1b1ff8\$lut for cells of type $lut.
Using template $paramod$1d9538985e93ee000f67f4da61552ba23ece2de5\$lut for cells of type $lut.
Using template $paramod$cc32a05866f608aca38637d6c7ba9e5d077e8484\$lut for cells of type $lut.
Using template $paramod$f66cab10fa236392c8c9bd44a53823687278c6cb\$lut for cells of type $lut.
Using template $paramod$d792639df542e95e2e2545d4cd272b6b31fd19b1\$lut for cells of type $lut.
Using template $paramod$84d6c079fa5b37412221bb8879d6ace4d86497d8\$lut for cells of type $lut.
Using template $paramod$4045bd13bde629a3e575b5f85233c70bf019827f\$lut for cells of type $lut.
Using template $paramod$fc2b5519b242fc4878a114aaab3e1ba68f7448bc\$lut for cells of type $lut.
Using template $paramod$35c57873920eba13532dc5e01a428ff1c2ae8a65\$lut for cells of type $lut.
Using template $paramod$0d8275de5f0a2ce6fd0cb612fbfa81492bef934d\$lut for cells of type $lut.
Using template $paramod$7162fe3adadadba0cffb3790bafa2fde016563e6\$lut for cells of type $lut.
Using template $paramod$f40b704e05df5b6f775ce459150ea67a372628ac\$lut for cells of type $lut.
Using template $paramod$6751552b1bd3f90f4728bac77ce9756ad7e6efb8\$lut for cells of type $lut.
Using template $paramod$4fecd6f048c13201e253aa7a8c8071b66ae8f69c\$lut for cells of type $lut.
Using template $paramod$6432b29dadced930b05941435533f6b0d3ec6c80\$lut for cells of type $lut.
Using template $paramod$964f48cd8743ddcde4cb82fbd086f5e24576be1d\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~7834 debug messages>

8.25. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in booth_multiplier_wrapper.
  Optimizing lut $abc$6720$lut$aiger6719$1589.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$2067.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$2067.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1947.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1947.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1947.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1947.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1947.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1888.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$453.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$802.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$787.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$802.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$933.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1023.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$876.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$876.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$802.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$802.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$802.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$802.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$802.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$741.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$2067.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6720$lut$aiger6719$787.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$787.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$787.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$787.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$787.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1065.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$453.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$453.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$453.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6720$lut$aiger6719$388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6720$lut$aiger6719$388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6720$lut$aiger6719$388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6720$lut$aiger6719$388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6720$lut$aiger6719$388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$602.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6720$lut$aiger6719$1135.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1484.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1484.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1947.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$933.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$933.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1589.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$787.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$802.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1589.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1947.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$802.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$802.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$773.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6720$lut$aiger6719$701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$787.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$787.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$787.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1589.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$511.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$511.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$511.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$555.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$555.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$555.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$555.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$453.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$876.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$876.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6720$lut$aiger6719$388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6720$lut$aiger6719$388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$602.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$602.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$2277.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1135.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$2151.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$2067.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$2067.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$2067.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$2034.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6720$lut$aiger6719$1947.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1947.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1947.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1888.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$2026.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6720$lut$aiger6719$1659.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1947.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1023.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1065.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1065.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1065.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1265.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$511.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1052.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1484.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1484.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1135.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1732.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1732.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1732.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1484.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1484.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1484.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1307.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1484.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1732.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1484.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1484.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1484.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1307.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1300.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1455.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1455.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6720$lut$aiger6719$1732.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1484.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$993.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$993.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1211.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1065.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1023.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1787.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6720$lut$aiger6719$1410.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1659.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$2026.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6720$lut$aiger6719$2026.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6720$lut$aiger6719$1888.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1888.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$2067.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$2034.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6720$lut$aiger6719$2034.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6720$lut$aiger6719$876.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$2067.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$2151.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$2277.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$602.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6720$lut$aiger6719$388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6720$lut$aiger6719$787.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$876.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$802.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$787.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$741.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1589.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$453.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$787.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1947.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1888.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1787.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6720$lut$aiger6719$933.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1732.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1052.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$876.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$802.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$787.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$602.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$876.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1300.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$741.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1065.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1159.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$2015.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$2067.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1211.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1135.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6720$lut$aiger6719$1410.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1493.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6720$lut$aiger6719$1448.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1484.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1589.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1484.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1787.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1853.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1888.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$802.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$2015.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$1159.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$2067.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$2111.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$2067.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$2277.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$2277.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$2067.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1065.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$388.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$602.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$642.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$741.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$787.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6720$lut$aiger6719$802.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$701.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$802.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6720$lut$aiger6719$1023.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1550:reintegrate$6721.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)

8.26. Executing SETUNDEF pass (replace undef values with defined constants).

8.27. Executing HILOMAP pass (mapping to constant drivers).

8.28. Executing SPLITNETS pass (splitting up multi-bit signals).
Removed 0 unused cells and 4753 unused wires.

8.29. Executing AUTONAME pass.
Renamed 26651 objects in module booth_multiplier_wrapper (85 iterations).
<suppressed ~1830 debug messages>

8.30. Executing HIERARCHY pass (managing design hierarchy).

8.30.1. Analyzing design hierarchy..
Top module:  \booth_multiplier_wrapper

8.30.2. Analyzing design hierarchy..
Top module:  \booth_multiplier_wrapper
Removed 0 unused modules.

8.31. Printing statistics.

=== booth_multiplier_wrapper ===

   Number of wires:               1897
   Number of wire bits:           1897
   Number of public wires:        1897
   Number of public wire bits:    1897
   Number of ports:                 23
   Number of port bits:             23
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1097
     $scopeinfo                    145
     DFF                            14
     DFFE                           57
     DFFR                            1
     GND                             1
     IBUF                           15
     LUT1                           25
     LUT2                          106
     LUT3                          135
     LUT4                          236
     MUX2_LUT5                     211
     MUX2_LUT6                      93
     MUX2_LUT7                      38
     MUX2_LUT8                      12
     OBUF                            8

8.32. Executing CHECK pass (checking for obvious problems).
Checking module booth_multiplier_wrapper...
Found and reported 0 problems.

8.33. Executing Verilog backend.

8.33.1. Executing BMUXMAP pass.

8.33.2. Executing DEMUXMAP pass.
Dumping module `\booth_multiplier_wrapper'.

9. Printing statistics.

=== booth_multiplier_wrapper ===

   Number of wires:               1897
   Number of wire bits:           1897
   Number of public wires:        1897
   Number of public wire bits:    1897
   Number of ports:                 23
   Number of port bits:             23
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1097
     $scopeinfo                    145
     DFF                            14
     DFFE                           57
     DFFR                            1
     GND                             1
     IBUF                           15
     LUT1                           25
     LUT2                          106
     LUT3                          135
     LUT4                          236
     MUX2_LUT5                     211
     MUX2_LUT6                      93
     MUX2_LUT7                      38
     MUX2_LUT8                      12
     OBUF                            8

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: aea1841628, CPU: user 1.36s system 0.01s, MEM: 106.14 MB peak
Yosys 0.41+111 (git sha1 4b67f3757, clang++ 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 39% 1x abc9_exe (0 sec), 20% 8x techmap (0 sec), ...
