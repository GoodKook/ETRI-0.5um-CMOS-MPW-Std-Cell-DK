// ==============================================================
// Generated by Vitis HLS v2024.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fxp_sqrt_top_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        zext_ln90,
        s_5_out,
        s_5_out_ap_vld,
        p_v_out,
        p_v_out_ap_vld,
        q_1_out,
        q_1_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [27:0] zext_ln90;
output  [30:0] s_5_out;
output   s_5_out_ap_vld;
output  [27:0] p_v_out;
output   p_v_out_ap_vld;
output  [28:0] q_1_out;
output   q_1_out_ap_vld;

reg ap_idle;
reg s_5_out_ap_vld;
reg p_v_out_ap_vld;
reg q_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln104_fu_188_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [30:0] shl_ln106_fu_154_p2;
reg   [30:0] shl_ln106_reg_302;
wire   [30:0] shl_ln110_fu_168_p2;
reg   [30:0] shl_ln110_reg_307;
wire   [27:0] empty_fu_174_p1;
reg   [27:0] empty_reg_312;
wire   [27:0] empty_7_fu_178_p1;
reg   [27:0] empty_7_reg_317;
reg   [0:0] icmp_ln104_reg_322;
reg   [4:0] i1_fu_60;
wire   [4:0] i_fu_182_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [30:0] s_22_fu_64;
wire   [30:0] s_fu_226_p3;
wire   [30:0] zext_ln90_cast_fu_103_p1;
reg   [28:0] q_star4_fu_68;
wire   [28:0] q_star_fu_242_p3;
reg   [28:0] ap_sig_allocacmp_q_star4_load;
reg   [28:0] q6_fu_72;
wire   [28:0] q_fu_250_p3;
reg   [28:0] ap_sig_allocacmp_q6_load;
reg    ap_loop_exit_ready_pp0_iter2_reg;
wire    ap_block_pp0_stage0_01001;
wire   [27:0] empty_8_fu_235_p3;
wire   [4:0] sub_ln106_fu_136_p2;
wire   [30:0] or_ln_fu_146_p3;
wire   [30:0] zext_ln106_fu_142_p1;
wire   [30:0] or_ln1_fu_160_p3;
wire   [30:0] shl_ln106_1_fu_210_p2;
wire   [0:0] tmp_fu_202_p3;
wire   [30:0] s_2_fu_221_p2;
wire   [30:0] s_1_fu_216_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 i1_fu_60 = 5'd0;
#0 s_22_fu_64 = 31'd0;
#0 q_star4_fu_68 = 29'd0;
#0 q6_fu_72 = 29'd0;
#0 ap_done_reg = 1'b0;
end

fxp_sqrt_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_exit_ready == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i1_fu_60 <= 5'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            i1_fu_60 <= i_fu_182_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            q6_fu_72 <= 29'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            q6_fu_72 <= q_fu_250_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
                        q_star4_fu_68[1] <= 1'b0;
            q_star4_fu_68[2] <= 1'b0;
            q_star4_fu_68[3] <= 1'b0;
            q_star4_fu_68[4] <= 1'b0;
            q_star4_fu_68[5] <= 1'b0;
            q_star4_fu_68[6] <= 1'b0;
            q_star4_fu_68[7] <= 1'b0;
            q_star4_fu_68[8] <= 1'b0;
            q_star4_fu_68[9] <= 1'b0;
            q_star4_fu_68[10] <= 1'b0;
            q_star4_fu_68[11] <= 1'b0;
            q_star4_fu_68[12] <= 1'b0;
            q_star4_fu_68[13] <= 1'b0;
            q_star4_fu_68[14] <= 1'b0;
            q_star4_fu_68[15] <= 1'b0;
            q_star4_fu_68[16] <= 1'b0;
            q_star4_fu_68[17] <= 1'b0;
            q_star4_fu_68[18] <= 1'b0;
            q_star4_fu_68[19] <= 1'b0;
            q_star4_fu_68[20] <= 1'b0;
            q_star4_fu_68[21] <= 1'b0;
            q_star4_fu_68[22] <= 1'b0;
            q_star4_fu_68[23] <= 1'b0;
            q_star4_fu_68[24] <= 1'b0;
            q_star4_fu_68[25] <= 1'b0;
            q_star4_fu_68[26] <= 1'b0;
            q_star4_fu_68[27] <= 1'b0;
            q_star4_fu_68[28] <= 1'b0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
                        q_star4_fu_68[28 : 1] <= q_star_fu_242_p3[28 : 1];
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            s_22_fu_64 <= zext_ln90_cast_fu_103_p1;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            s_22_fu_64 <= s_fu_226_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_7_reg_317 <= empty_7_fu_178_p1;
        empty_reg_312[27 : 1] <= empty_fu_174_p1[27 : 1];
        icmp_ln104_reg_322 <= icmp_ln104_fu_188_p2;
        shl_ln106_reg_302 <= shl_ln106_fu_154_p2;
        shl_ln110_reg_307 <= shl_ln110_fu_168_p2;
    end
end

always @ (*) begin
    if (((icmp_ln104_fu_188_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_q6_load = q_fu_250_p3;
    end else begin
        ap_sig_allocacmp_q6_load = q6_fu_72;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_q_star4_load = q_star_fu_242_p3;
    end else begin
        ap_sig_allocacmp_q_star4_load = q_star4_fu_68;
    end
end

always @ (*) begin
    if (((icmp_ln104_reg_322 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        p_v_out_ap_vld = 1'b1;
    end else begin
        p_v_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln104_reg_322 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        q_1_out_ap_vld = 1'b1;
    end else begin
        q_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln104_reg_322 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        s_5_out_ap_vld = 1'b1;
    end else begin
        s_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_ready = ap_ready_sig;

assign empty_7_fu_178_p1 = ap_sig_allocacmp_q6_load[27:0];

assign empty_8_fu_235_p3 = ((tmp_fu_202_p3[0:0] == 1'b1) ? empty_reg_312 : empty_7_reg_317);

assign empty_fu_174_p1 = ap_sig_allocacmp_q_star4_load[27:0];

assign i_fu_182_p2 = (i1_fu_60 + 5'd1);

assign icmp_ln104_fu_188_p2 = ((i1_fu_60 == 5'd29) ? 1'b1 : 1'b0);

assign or_ln1_fu_160_p3 = {{ap_sig_allocacmp_q_star4_load}, {2'd3}};

assign or_ln_fu_146_p3 = {{ap_sig_allocacmp_q6_load}, {2'd1}};

assign p_v_out = empty_8_fu_235_p3;

assign q_1_out = {{empty_8_fu_235_p3}, {1'd1}};

assign q_fu_250_p3 = {{empty_8_fu_235_p3}, {1'd1}};

assign q_star_fu_242_p3 = {{empty_8_fu_235_p3}, {1'd0}};

assign s_1_fu_216_p2 = (shl_ln106_1_fu_210_p2 - shl_ln106_reg_302);

assign s_2_fu_221_p2 = (shl_ln110_reg_307 + shl_ln106_1_fu_210_p2);

assign s_5_out = ((tmp_fu_202_p3[0:0] == 1'b1) ? s_2_fu_221_p2 : s_1_fu_216_p2);

assign s_fu_226_p3 = ((tmp_fu_202_p3[0:0] == 1'b1) ? s_2_fu_221_p2 : s_1_fu_216_p2);

assign shl_ln106_1_fu_210_p2 = s_22_fu_64 << 31'd1;

assign shl_ln106_fu_154_p2 = or_ln_fu_146_p3 << zext_ln106_fu_142_p1;

assign shl_ln110_fu_168_p2 = or_ln1_fu_160_p3 << zext_ln106_fu_142_p1;

assign sub_ln106_fu_136_p2 = ($signed(5'd29) - $signed(i1_fu_60));

assign tmp_fu_202_p3 = s_22_fu_64[32'd30];

assign zext_ln106_fu_142_p1 = sub_ln106_fu_136_p2;

assign zext_ln90_cast_fu_103_p1 = zext_ln90;

always @ (posedge ap_clk) begin
    empty_reg_312[0] <= 1'b0;
    q_star4_fu_68[0] <= 1'b0;
end

endmodule //fxp_sqrt_top_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1
