-- ==============================================================
-- Generated by Vitis HLS v2024.2.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fxp_sqrt_top is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_val : IN STD_LOGIC_VECTOR (23 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (27 downto 0) );
end;


architecture behav of fxp_sqrt_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fxp_sqrt_top_fxp_sqrt_top,hls_ip_2024_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xa7a100t-csg324-1I,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.923500,HLS_SYN_LAT=34,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=332,HLS_SYN_LUT=568,HLS_VERSION=2024_2_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv29_1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal s_1_fu_66_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal s_1_reg_132 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_start : STD_LOGIC;
    signal grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_done : STD_LOGIC;
    signal grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_idle : STD_LOGIC;
    signal grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_ready : STD_LOGIC;
    signal grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_s_5_out : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_s_5_out_ap_vld : STD_LOGIC;
    signal grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_p_v_out : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_p_v_out_ap_vld : STD_LOGIC;
    signal grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_q_1_out : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_q_1_out_ap_vld : STD_LOGIC;
    signal grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal s_5_loc_fu_48 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_v_loc_fu_44 : STD_LOGIC_VECTOR (27 downto 0);
    signal q_1_loc_fu_40 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln118_fu_90_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal icmp_ln117_fu_84_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_96_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fxp_sqrt_top_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        zext_ln90 : IN STD_LOGIC_VECTOR (27 downto 0);
        s_5_out : OUT STD_LOGIC_VECTOR (30 downto 0);
        s_5_out_ap_vld : OUT STD_LOGIC;
        p_v_out : OUT STD_LOGIC_VECTOR (27 downto 0);
        p_v_out_ap_vld : OUT STD_LOGIC;
        q_1_out : OUT STD_LOGIC_VECTOR (28 downto 0);
        q_1_out_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58 : component fxp_sqrt_top_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_start,
        ap_done => grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_done,
        ap_idle => grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_idle,
        ap_ready => grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_ready,
        zext_ln90 => s_1_reg_132,
        s_5_out => grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_s_5_out,
        s_5_out_ap_vld => grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_s_5_out_ap_vld,
        p_v_out => grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_p_v_out,
        p_v_out_ap_vld => grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_p_v_out_ap_vld,
        q_1_out => grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_q_1_out,
        q_1_out_ap_vld => grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_q_1_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_ready = ap_const_logic_1)) then 
                    grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_p_v_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                p_v_loc_fu_44 <= grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_p_v_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_q_1_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                q_1_loc_fu_40 <= grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_q_1_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    s_1_reg_132(27 downto 4) <= s_1_fu_66_p3(27 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_s_5_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                s_5_loc_fu_48 <= grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_s_5_out;
            end if;
        end if;
    end process;
    s_1_reg_132(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_done, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln118_fu_90_p2 <= std_logic_vector(unsigned(q_1_loc_fu_40) + unsigned(ap_const_lv29_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_done)
    begin
        if ((grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        tmp_fu_96_p4 when (icmp_ln117_fu_84_p2(0) = '1') else 
        p_v_loc_fu_44;
    grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_start <= grp_fxp_sqrt_top_Pipeline_VITIS_LOOP_104_1_fu_58_ap_start_reg;
    icmp_ln117_fu_84_p2 <= "1" when (signed(s_5_loc_fu_48) > signed(ap_const_lv31_0)) else "0";
    s_1_fu_66_p3 <= (in_val & ap_const_lv4_0);
    tmp_fu_96_p4 <= add_ln118_fu_90_p2(28 downto 1);
end behav;
