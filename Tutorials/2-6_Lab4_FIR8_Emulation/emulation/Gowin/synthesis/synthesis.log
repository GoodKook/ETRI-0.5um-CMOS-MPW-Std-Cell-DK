
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2025  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.49+5 (git sha1 954250d1d, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)

-- Executing script file `fir8_wrapper.ys' --

1. Executing Verilog-2005 frontend: ../../fir8_wrapper.v
Parsing Verilog input from `../../fir8_wrapper.v' to AST representation.
Generating RTLIL representation for module `\fir8_wrapper'.
Warning: Replacing memory \vectOut with list of registers. See ../../fir8_wrapper.v:38
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v
Parsing Verilog input from `../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v' to AST representation.
Generating RTLIL representation for module `\fir_pe'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../../../source/fir8.v
Parsing SystemVerilog input from `../../../source/fir8.v' to AST representation.
Generating RTLIL representation for module `\fir8'.
Successfully finished Verilog frontend.

4. Executing HIERARCHY pass (managing design hierarchy).

4.1. Analyzing design hierarchy..
Top module:  \fir8_wrapper
Used module:     \fir8
Used module:         \fir_pe

4.2. Analyzing design hierarchy..
Top module:  \fir8_wrapper
Used module:     \fir8
Used module:         \fir_pe
Removed 0 unused modules.

5. Executing SYNTH_GOWIN pass.

5.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\__APICULA_LUT5'.
Generating RTLIL representation for module `\__APICULA_LUT6'.
Generating RTLIL representation for module `\__APICULA_LUT7'.
Generating RTLIL representation for module `\__APICULA_LUT8'.
Generating RTLIL representation for module `\MUX2'.
Generating RTLIL representation for module `\MUX2_LUT5'.
Generating RTLIL representation for module `\MUX2_LUT6'.
Generating RTLIL representation for module `\MUX2_LUT7'.
Generating RTLIL representation for module `\MUX2_LUT8'.
Generating RTLIL representation for module `\DFF'.
Generating RTLIL representation for module `\DFFE'.
Generating RTLIL representation for module `\DFFS'.
Generating RTLIL representation for module `\DFFSE'.
Generating RTLIL representation for module `\DFFR'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DFFP'.
Generating RTLIL representation for module `\DFFPE'.
Generating RTLIL representation for module `\DFFC'.
Generating RTLIL representation for module `\DFFCE'.
Generating RTLIL representation for module `\DFFN'.
Generating RTLIL representation for module `\DFFNE'.
Generating RTLIL representation for module `\DFFNS'.
Generating RTLIL representation for module `\DFFNSE'.
Generating RTLIL representation for module `\DFFNR'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFNP'.
Generating RTLIL representation for module `\DFFNPE'.
Generating RTLIL representation for module `\DFFNC'.
Generating RTLIL representation for module `\DFFNCE'.
Generating RTLIL representation for module `\VCC'.
Generating RTLIL representation for module `\GND'.
Generating RTLIL representation for module `\IBUF'.
Generating RTLIL representation for module `\OBUF'.
Generating RTLIL representation for module `\TBUF'.
Generating RTLIL representation for module `\IOBUF'.
Generating RTLIL representation for module `\ELVDS_OBUF'.
Generating RTLIL representation for module `\TLVDS_OBUF'.
Generating RTLIL representation for module `\OSER4'.
Generating RTLIL representation for module `\OSER4_MEM'.
Generating RTLIL representation for module `\OSER8'.
Generating RTLIL representation for module `\OSER10'.
Generating RTLIL representation for module `\OVIDEO'.
Generating RTLIL representation for module `\OSER16'.
Generating RTLIL representation for module `\IDES4'.
Generating RTLIL representation for module `\IDES4_MEM'.
Generating RTLIL representation for module `\IDES8'.
Generating RTLIL representation for module `\IDES10'.
Generating RTLIL representation for module `\IVIDEO'.
Generating RTLIL representation for module `\IDES16'.
Generating RTLIL representation for module `\IDDR'.
Generating RTLIL representation for module `\IDDRC'.
Generating RTLIL representation for module `\DQS'.
Generating RTLIL representation for module `\ODDR'.
Generating RTLIL representation for module `\ODDRC'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\BANDGAP'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\RAM16S1'.
Generating RTLIL representation for module `\RAM16S2'.
Generating RTLIL representation for module `\RAM16S4'.
Generating RTLIL representation for module `\RAM16SDP1'.
Generating RTLIL representation for module `\RAM16SDP2'.
Generating RTLIL representation for module `\RAM16SDP4'.
Generating RTLIL representation for module `\SP'.
Generating RTLIL representation for module `\SPX9'.
Generating RTLIL representation for module `\SDP'.
Generating RTLIL representation for module `\SDPX9'.
Generating RTLIL representation for module `\DP'.
Generating RTLIL representation for module `\DPX9'.
Generating RTLIL representation for module `\rPLL'.
Generating RTLIL representation for module `\PLLVR'.
Generating RTLIL representation for module `\OSC'.
Generating RTLIL representation for module `\OSCZ'.
Generating RTLIL representation for module `\OSCF'.
Generating RTLIL representation for module `\OSCH'.
Generating RTLIL representation for module `\OSCW'.
Generating RTLIL representation for module `\OSCO'.
Generating RTLIL representation for module `\DCS'.
Generating RTLIL representation for module `\EMCU'.
Successfully finished Verilog frontend.

5.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_xtra_gw1n.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_xtra_gw1n.v' to AST representation.
Generating RTLIL representation for module `\MUX2_MUX8'.
Generating RTLIL representation for module `\MUX2_MUX16'.
Generating RTLIL representation for module `\MUX2_MUX32'.
Generating RTLIL representation for module `\MUX4'.
Generating RTLIL representation for module `\MUX8'.
Generating RTLIL representation for module `\MUX16'.
Generating RTLIL representation for module `\MUX32'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\LUT7'.
Generating RTLIL representation for module `\LUT8'.
Generating RTLIL representation for module `\DL'.
Generating RTLIL representation for module `\DLE'.
Generating RTLIL representation for module `\DLC'.
Generating RTLIL representation for module `\DLCE'.
Generating RTLIL representation for module `\DLP'.
Generating RTLIL representation for module `\DLPE'.
Generating RTLIL representation for module `\DLN'.
Generating RTLIL representation for module `\DLNE'.
Generating RTLIL representation for module `\DLNC'.
Generating RTLIL representation for module `\DLNCE'.
Generating RTLIL representation for module `\DLNP'.
Generating RTLIL representation for module `\DLNPE'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\IODELAY'.
Generating RTLIL representation for module `\IEM'.
Generating RTLIL representation for module `\ROM16'.
Generating RTLIL representation for module `\ROM'.
Generating RTLIL representation for module `\ROMX9'.
Generating RTLIL representation for module `\rSDP'.
Generating RTLIL representation for module `\rSDPX9'.
Generating RTLIL representation for module `\rROM'.
Generating RTLIL representation for module `\rROMX9'.
Generating RTLIL representation for module `\pROM'.
Generating RTLIL representation for module `\pROMX9'.
Generating RTLIL representation for module `\SDPB'.
Generating RTLIL representation for module `\SDPX9B'.
Generating RTLIL representation for module `\DPB'.
Generating RTLIL representation for module `\DPX9B'.
Generating RTLIL representation for module `\PADD18'.
Generating RTLIL representation for module `\PADD9'.
Generating RTLIL representation for module `\MULT9X9'.
Generating RTLIL representation for module `\MULT18X18'.
Generating RTLIL representation for module `\MULT36X36'.
Generating RTLIL representation for module `\MULTALU36X18'.
Generating RTLIL representation for module `\MULTADDALU18X18'.
Generating RTLIL representation for module `\MULTALU18X18'.
Generating RTLIL representation for module `\ALU54D'.
Generating RTLIL representation for module `\BUFG'.
Generating RTLIL representation for module `\BUFS'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\TLVDS_IBUF'.
Generating RTLIL representation for module `\TLVDS_TBUF'.
Generating RTLIL representation for module `\TLVDS_IOBUF'.
Generating RTLIL representation for module `\ELVDS_IBUF'.
Generating RTLIL representation for module `\ELVDS_TBUF'.
Generating RTLIL representation for module `\ELVDS_IOBUF'.
Generating RTLIL representation for module `\MIPI_IBUF'.
Generating RTLIL representation for module `\MIPI_IBUF_HS'.
Generating RTLIL representation for module `\MIPI_IBUF_LP'.
Generating RTLIL representation for module `\MIPI_OBUF'.
Generating RTLIL representation for module `\MIPI_OBUF_A'.
Generating RTLIL representation for module `\ELVDS_IBUF_MIPI'.
Generating RTLIL representation for module `\I3C_IOBUF'.
Generating RTLIL representation for module `\TLVDS_OEN_BK'.
Generating RTLIL representation for module `\CLKDIV'.
Generating RTLIL representation for module `\DHCEN'.
Generating RTLIL representation for module `\DLL'.
Generating RTLIL representation for module `\DLLDLY'.
Generating RTLIL representation for module `\FLASH96K'.
Generating RTLIL representation for module `\FLASH256K'.
Generating RTLIL representation for module `\FLASH608K'.
Generating RTLIL representation for module `\DQCE'.
Generating RTLIL representation for module `\CLKDIV2'.
Generating RTLIL representation for module `\DCC'.
Generating RTLIL representation for module `\DHCENC'.
Generating RTLIL representation for module `\FLASH64K'.
Generating RTLIL representation for module `\FLASH64KZ'.
Generating RTLIL representation for module `\I3C'.
Generating RTLIL representation for module `\IODELAYA'.
Generating RTLIL representation for module `\IODELAYC'.
Generating RTLIL representation for module `\SPMI'.
Generating RTLIL representation for module `\IODELAYB'.
Generating RTLIL representation for module `\PLLO'.
Generating RTLIL representation for module `\DCCG'.
Generating RTLIL representation for module `\FLASH96KA'.
Generating RTLIL representation for module `\MIPI_DPHY_RX'.
Generating RTLIL representation for module `\CLKDIVG'.
Generating RTLIL representation for module `\PWRGRD'.
Successfully finished Verilog frontend.

5.3. Executing HIERARCHY pass (managing design hierarchy).

5.3.1. Analyzing design hierarchy..
Top module:  \fir8_wrapper
Used module:     \fir8
Used module:         \fir_pe

5.3.2. Analyzing design hierarchy..
Top module:  \fir8_wrapper
Used module:     \fir8
Used module:         \fir_pe
Removed 0 unused modules.

5.4. Executing PROC pass (convert processes to netlists).

5.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:969$295'.
Cleaned up 1 empty switch.

5.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$355 in module RAM16S4.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$319 in module RAM16S2.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1043$300 in module RAM16S1.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$291 in module DFFNCE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$289 in module DFFNC.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$287 in module DFFNPE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$285 in module DFFNP.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$283 in module DFFNRE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$281 in module DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$279 in module DFFNSE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$277 in module DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$271 in module DFFCE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$269 in module DFFC.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$267 in module DFFPE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$265 in module DFFP.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$263 in module DFFRE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$261 in module DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$259 in module DFFSE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$257 in module DFFS.
Marked 3 switch rules as full_case in process $proc$../../fir8_wrapper.v:28$3 in module fir8_wrapper.
Removed a total of 0 dead cases.

5.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 8 redundant assignments.
Promoted 89 assignments to connections.

5.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$400'.
  Set init value: \mem0 = 16'0000000000000000
  Set init value: \mem1 = 16'0000000000000000
  Set init value: \mem2 = 16'0000000000000000
  Set init value: \mem3 = 16'0000000000000000
Found init rule in `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$342'.
  Set init value: \mem0 = 16'0000000000000000
  Set init value: \mem1 = 16'0000000000000000
Found init rule in `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$312'.
  Set init value: \mem = 16'0000000000000000
Found init rule in `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$292'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$290'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$288'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$286'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$284'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$282'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$280'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$278'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$276'.
  Set init value: \Q = 1'0
Found init rule in `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$274'.
  Set init value: \Q = 1'0
Found init rule in `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$272'.
  Set init value: \Q = 1'0
Found init rule in `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$270'.
  Set init value: \Q = 1'0
Found init rule in `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$268'.
  Set init value: \Q = 1'1
Found init rule in `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$266'.
  Set init value: \Q = 1'1
Found init rule in `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$264'.
  Set init value: \Q = 1'0
Found init rule in `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$262'.
  Set init value: \Q = 1'0
Found init rule in `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$260'.
  Set init value: \Q = 1'1
Found init rule in `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$258'.
  Set init value: \Q = 1'1
Found init rule in `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$256'.
  Set init value: \Q = 1'0
Found init rule in `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$254'.
  Set init value: \Q = 1'0

5.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \CLEAR in `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$291'.
Found async reset \CLEAR in `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$289'.
Found async reset \PRESET in `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$287'.
Found async reset \PRESET in `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$285'.
Found async reset \CLEAR in `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$271'.
Found async reset \CLEAR in `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$269'.
Found async reset \PRESET in `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$267'.
Found async reset \PRESET in `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$265'.

5.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~24 debug messages>

5.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$400'.
Creating decoders for process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$355'.
     1/8: $1$lookahead\mem3$354[15:0]$371
     2/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1131$346[3:0]$367
     3/8: $1$lookahead\mem2$353[15:0]$370
     4/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1130$345[3:0]$366
     5/8: $1$lookahead\mem1$352[15:0]$369
     6/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1129$344[3:0]$365
     7/8: $1$lookahead\mem0$351[15:0]$368
     8/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1128$343[3:0]$364
Creating decoders for process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$342'.
Creating decoders for process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$319'.
     1/4: $1$lookahead\mem1$318[15:0]$327
     2/4: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1084$314[3:0]$325
     3/4: $1$lookahead\mem0$317[15:0]$326
     4/4: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1083$313[3:0]$324
Creating decoders for process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$312'.
Creating decoders for process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1043$300'.
     1/2: $1$lookahead\mem$299[15:0]$304
     2/2: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1045$297[3:0]$303
Creating decoders for process `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:969$295'.
Creating decoders for process `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$292'.
Creating decoders for process `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$291'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$290'.
Creating decoders for process `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$289'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$288'.
Creating decoders for process `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$287'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$286'.
Creating decoders for process `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$285'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$284'.
Creating decoders for process `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$283'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$282'.
Creating decoders for process `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$281'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$280'.
Creating decoders for process `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$279'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$278'.
Creating decoders for process `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$277'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$276'.
Creating decoders for process `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$275'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$274'.
Creating decoders for process `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:366$273'.
Creating decoders for process `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$272'.
Creating decoders for process `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$271'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$270'.
Creating decoders for process `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$269'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$268'.
Creating decoders for process `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$267'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$266'.
Creating decoders for process `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$265'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$264'.
Creating decoders for process `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$263'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$262'.
Creating decoders for process `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$261'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$260'.
Creating decoders for process `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$259'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$258'.
Creating decoders for process `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$257'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$256'.
Creating decoders for process `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$255'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$254'.
Creating decoders for process `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:179$253'.
Creating decoders for process `\fir8.$proc$../../../source/fir8.v:0$69'.
Creating decoders for process `\fir_pe.$proc$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:34$26'.
Creating decoders for process `\fir_pe.$proc$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:29$25'.
Creating decoders for process `\fir_pe.$proc$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:24$23'.
Creating decoders for process `\fir8_wrapper.$proc$../../fir8_wrapper.v:28$3'.
     1/18: $3$mem2reg_rd$\vectOut$../../fir8_wrapper.v:45$1_DATA[7:0]$22
     2/18: $2$memwr$\stimIn$../../fir8_wrapper.v:44$2_EN[7:0]$21
     3/18: $2$memwr$\stimIn$../../fir8_wrapper.v:44$2_DATA[7:0]$20
     4/18: $2$memwr$\stimIn$../../fir8_wrapper.v:44$2_ADDR[2:0]$19
     5/18: $2$mem2reg_rd$\vectOut$../../fir8_wrapper.v:45$1_DATA[7:0]$18
     6/18: $2$mem2reg_rd$\vectOut$../../fir8_wrapper.v:45$1_ADDR[1:0]$17
     7/18: $0\Yin[15:0] [15:8]
     8/18: $0\Yin[15:0] [7:0]
     9/18: $1$memwr$\stimIn$../../fir8_wrapper.v:44$2_DATA[7:0]$12
    10/18: $1$memwr$\stimIn$../../fir8_wrapper.v:44$2_ADDR[2:0]$11
    11/18: $1$mem2reg_rd$\vectOut$../../fir8_wrapper.v:45$1_DATA[7:0]$10
    12/18: $1$mem2reg_rd$\vectOut$../../fir8_wrapper.v:45$1_ADDR[1:0]$9
    13/18: $0\vectOut[2][7:0]
    14/18: $0\vectOut[1][7:0]
    15/18: $0\vectOut[0][7:0]
    16/18: $1$memwr$\stimIn$../../fir8_wrapper.v:44$2_EN[7:0]$13
    17/18: $0\Xin[7:0]
    18/18: $0\Dout_emu[7:0]

5.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\fir8.\X[0]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\X[1]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\X[2]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\X[3]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\X[4]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\X[5]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\X[6]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\X[7]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\X[8]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\Y[0]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\Y[1]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\Y[2]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\Y[3]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\Y[4]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\Y[5]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\Y[6]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\Y[7]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\Y[8]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\C[0]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\C[1]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\C[2]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\C[3]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\C[4]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\C[5]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\C[6]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.
No latch inferred for signal `\fir8.\C[7]' from process `\fir8.$proc$../../../source/fir8.v:0$69'.

5.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\RAM16S4.\mem0' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$355'.
  created $dff cell `$procdff$583' with positive edge clock.
Creating register for signal `\RAM16S4.\mem1' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$355'.
  created $dff cell `$procdff$584' with positive edge clock.
Creating register for signal `\RAM16S4.\mem2' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$355'.
  created $dff cell `$procdff$585' with positive edge clock.
Creating register for signal `\RAM16S4.\mem3' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$355'.
  created $dff cell `$procdff$586' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1128$343' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$355'.
  created $dff cell `$procdff$587' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1129$344' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$355'.
  created $dff cell `$procdff$588' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1130$345' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$355'.
  created $dff cell `$procdff$589' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1131$346' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$355'.
  created $dff cell `$procdff$590' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem0$351' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$355'.
  created $dff cell `$procdff$591' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem1$352' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$355'.
  created $dff cell `$procdff$592' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem2$353' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$355'.
  created $dff cell `$procdff$593' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem3$354' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$355'.
  created $dff cell `$procdff$594' with positive edge clock.
Creating register for signal `\RAM16S2.\mem0' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$319'.
  created $dff cell `$procdff$595' with positive edge clock.
Creating register for signal `\RAM16S2.\mem1' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$319'.
  created $dff cell `$procdff$596' with positive edge clock.
Creating register for signal `\RAM16S2.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1083$313' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$319'.
  created $dff cell `$procdff$597' with positive edge clock.
Creating register for signal `\RAM16S2.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1084$314' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$319'.
  created $dff cell `$procdff$598' with positive edge clock.
Creating register for signal `\RAM16S2.$lookahead\mem0$317' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$319'.
  created $dff cell `$procdff$599' with positive edge clock.
Creating register for signal `\RAM16S2.$lookahead\mem1$318' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$319'.
  created $dff cell `$procdff$600' with positive edge clock.
Creating register for signal `\RAM16S1.\mem' using process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1043$300'.
  created $dff cell `$procdff$601' with positive edge clock.
Creating register for signal `\RAM16S1.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1045$297' using process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1043$300'.
  created $dff cell `$procdff$602' with positive edge clock.
Creating register for signal `\RAM16S1.$lookahead\mem$299' using process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1043$300'.
  created $dff cell `$procdff$603' with positive edge clock.
Creating register for signal `\ALU.\C' using process `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:969$295'.
  created direct connection (no actual register cell created).
Creating register for signal `\ALU.\S' using process `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:969$295'.
  created direct connection (no actual register cell created).
Creating register for signal `\DFFNCE.\Q' using process `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$291'.
  created $adff cell `$procdff$606' with negative edge clock and positive level reset.
Creating register for signal `\DFFNC.\Q' using process `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$289'.
  created $adff cell `$procdff$609' with negative edge clock and positive level reset.
Creating register for signal `\DFFNPE.\Q' using process `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$287'.
  created $adff cell `$procdff$612' with negative edge clock and positive level reset.
Creating register for signal `\DFFNP.\Q' using process `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$285'.
  created $adff cell `$procdff$615' with negative edge clock and positive level reset.
Creating register for signal `\DFFNRE.\Q' using process `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$283'.
  created $dff cell `$procdff$616' with negative edge clock.
Creating register for signal `\DFFNR.\Q' using process `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$281'.
  created $dff cell `$procdff$617' with negative edge clock.
Creating register for signal `\DFFNSE.\Q' using process `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$279'.
  created $dff cell `$procdff$618' with negative edge clock.
Creating register for signal `\DFFNS.\Q' using process `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$277'.
  created $dff cell `$procdff$619' with negative edge clock.
Creating register for signal `\DFFNE.\Q' using process `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$275'.
  created $dff cell `$procdff$620' with negative edge clock.
Creating register for signal `\DFFN.\Q' using process `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:366$273'.
  created $dff cell `$procdff$621' with negative edge clock.
Creating register for signal `\DFFCE.\Q' using process `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$271'.
  created $adff cell `$procdff$624' with positive edge clock and positive level reset.
Creating register for signal `\DFFC.\Q' using process `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$269'.
  created $adff cell `$procdff$627' with positive edge clock and positive level reset.
Creating register for signal `\DFFPE.\Q' using process `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$267'.
  created $adff cell `$procdff$630' with positive edge clock and positive level reset.
Creating register for signal `\DFFP.\Q' using process `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$265'.
  created $adff cell `$procdff$633' with positive edge clock and positive level reset.
Creating register for signal `\DFFRE.\Q' using process `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$263'.
  created $dff cell `$procdff$634' with positive edge clock.
Creating register for signal `\DFFR.\Q' using process `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$261'.
  created $dff cell `$procdff$635' with positive edge clock.
Creating register for signal `\DFFSE.\Q' using process `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$259'.
  created $dff cell `$procdff$636' with positive edge clock.
Creating register for signal `\DFFS.\Q' using process `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$257'.
  created $dff cell `$procdff$637' with positive edge clock.
Creating register for signal `\DFFE.\Q' using process `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$255'.
  created $dff cell `$procdff$638' with positive edge clock.
Creating register for signal `\DFF.\Q' using process `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:179$253'.
  created $dff cell `$procdff$639' with positive edge clock.
Creating register for signal `\fir_pe.\Xout' using process `\fir_pe.$proc$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:34$26'.
  created $dff cell `$procdff$640' with positive edge clock.
Creating register for signal `\fir_pe.\Yout' using process `\fir_pe.$proc$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:34$26'.
  created $dff cell `$procdff$641' with positive edge clock.
Creating register for signal `\fir_pe.\rYin' using process `\fir_pe.$proc$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:29$25'.
  created $dff cell `$procdff$642' with positive edge clock.
Creating register for signal `\fir_pe.\mul' using process `\fir_pe.$proc$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:24$23'.
  created $dff cell `$procdff$643' with positive edge clock.
Creating register for signal `\fir8_wrapper.\Dout_emu' using process `\fir8_wrapper.$proc$../../fir8_wrapper.v:28$3'.
  created $dff cell `$procdff$644' with positive edge clock.
Creating register for signal `\fir8_wrapper.\Xin' using process `\fir8_wrapper.$proc$../../fir8_wrapper.v:28$3'.
  created $dff cell `$procdff$645' with positive edge clock.
Creating register for signal `\fir8_wrapper.\Yin' using process `\fir8_wrapper.$proc$../../fir8_wrapper.v:28$3'.
  created $dff cell `$procdff$646' with positive edge clock.
Creating register for signal `\fir8_wrapper.\vectOut[0]' using process `\fir8_wrapper.$proc$../../fir8_wrapper.v:28$3'.
  created $dff cell `$procdff$647' with positive edge clock.
Creating register for signal `\fir8_wrapper.\vectOut[1]' using process `\fir8_wrapper.$proc$../../fir8_wrapper.v:28$3'.
  created $dff cell `$procdff$648' with positive edge clock.
Creating register for signal `\fir8_wrapper.\vectOut[2]' using process `\fir8_wrapper.$proc$../../fir8_wrapper.v:28$3'.
  created $dff cell `$procdff$649' with positive edge clock.
Creating register for signal `\fir8_wrapper.$mem2reg_rd$\vectOut$../../fir8_wrapper.v:45$1_ADDR' using process `\fir8_wrapper.$proc$../../fir8_wrapper.v:28$3'.
  created $dff cell `$procdff$650' with positive edge clock.
Creating register for signal `\fir8_wrapper.$mem2reg_rd$\vectOut$../../fir8_wrapper.v:45$1_DATA' using process `\fir8_wrapper.$proc$../../fir8_wrapper.v:28$3'.
  created $dff cell `$procdff$651' with positive edge clock.
Creating register for signal `\fir8_wrapper.$memwr$\stimIn$../../fir8_wrapper.v:44$2_ADDR' using process `\fir8_wrapper.$proc$../../fir8_wrapper.v:28$3'.
  created $dff cell `$procdff$652' with positive edge clock.
Creating register for signal `\fir8_wrapper.$memwr$\stimIn$../../fir8_wrapper.v:44$2_DATA' using process `\fir8_wrapper.$proc$../../fir8_wrapper.v:28$3'.
  created $dff cell `$procdff$653' with positive edge clock.
Creating register for signal `\fir8_wrapper.$memwr$\stimIn$../../fir8_wrapper.v:44$2_EN' using process `\fir8_wrapper.$proc$../../fir8_wrapper.v:28$3'.
  created $dff cell `$procdff$654' with positive edge clock.

5.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

5.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$400'.
Found and cleaned up 1 empty switch in `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$355'.
Removing empty process `RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$355'.
Removing empty process `RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$342'.
Found and cleaned up 1 empty switch in `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$319'.
Removing empty process `RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$319'.
Removing empty process `RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$312'.
Found and cleaned up 1 empty switch in `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1043$300'.
Removing empty process `RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1043$300'.
Removing empty process `ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:969$295'.
Removing empty process `DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$292'.
Found and cleaned up 1 empty switch in `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$291'.
Removing empty process `DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$291'.
Removing empty process `DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$290'.
Removing empty process `DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$289'.
Removing empty process `DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$288'.
Found and cleaned up 1 empty switch in `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$287'.
Removing empty process `DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$287'.
Removing empty process `DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$286'.
Removing empty process `DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$285'.
Removing empty process `DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$284'.
Found and cleaned up 2 empty switches in `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$283'.
Removing empty process `DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$283'.
Removing empty process `DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$282'.
Found and cleaned up 1 empty switch in `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$281'.
Removing empty process `DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$281'.
Removing empty process `DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$280'.
Found and cleaned up 2 empty switches in `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$279'.
Removing empty process `DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$279'.
Removing empty process `DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$278'.
Found and cleaned up 1 empty switch in `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$277'.
Removing empty process `DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$277'.
Removing empty process `DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$276'.
Found and cleaned up 1 empty switch in `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$275'.
Removing empty process `DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$275'.
Removing empty process `DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$274'.
Removing empty process `DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:366$273'.
Removing empty process `DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$272'.
Found and cleaned up 1 empty switch in `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$271'.
Removing empty process `DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$271'.
Removing empty process `DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$270'.
Removing empty process `DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$269'.
Removing empty process `DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$268'.
Found and cleaned up 1 empty switch in `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$267'.
Removing empty process `DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$267'.
Removing empty process `DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$266'.
Removing empty process `DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$265'.
Removing empty process `DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$264'.
Found and cleaned up 2 empty switches in `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$263'.
Removing empty process `DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$263'.
Removing empty process `DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$262'.
Found and cleaned up 1 empty switch in `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$261'.
Removing empty process `DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$261'.
Removing empty process `DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$260'.
Found and cleaned up 2 empty switches in `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$259'.
Removing empty process `DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$259'.
Removing empty process `DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$258'.
Found and cleaned up 1 empty switch in `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$257'.
Removing empty process `DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$257'.
Removing empty process `DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$256'.
Found and cleaned up 1 empty switch in `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$255'.
Removing empty process `DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$255'.
Removing empty process `DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$254'.
Removing empty process `DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:179$253'.
Removing empty process `fir8.$proc$../../../source/fir8.v:0$69'.
Removing empty process `fir_pe.$proc$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:34$26'.
Removing empty process `fir_pe.$proc$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:29$25'.
Removing empty process `fir_pe.$proc$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:24$23'.
Found and cleaned up 3 empty switches in `\fir8_wrapper.$proc$../../fir8_wrapper.v:28$3'.
Removing empty process `fir8_wrapper.$proc$../../fir8_wrapper.v:28$3'.
Cleaned up 24 empty switches.

5.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8.
Optimizing module fir_pe.
Optimizing module fir8_wrapper.
<suppressed ~1 debug messages>

5.5. Executing FLATTEN pass (flatten design).
Deleting now unused module fir8.
Deleting now unused module fir_pe.
<suppressed ~9 debug messages>

5.6. Executing TRIBUF pass.

5.7. Executing DEMINOUT pass (demote inout ports to input or output).

5.8. Executing SYNTH pass.

5.8.1. Executing PROC pass (convert processes to netlists).

5.8.1.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.8.1.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

5.8.1.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

5.8.1.4. Executing PROC_INIT pass (extract init attributes).

5.8.1.5. Executing PROC_ARST pass (detect async resets in processes).

5.8.1.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

5.8.1.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

5.8.1.8. Executing PROC_DLATCH pass (convert process syncs to latches).

5.8.1.9. Executing PROC_DFF pass (convert process syncs to FFs).

5.8.1.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

5.8.1.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.8.1.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.

5.8.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.
<suppressed ~8 debug messages>

5.8.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..
Removed 11 unused cells and 162 unused wires.
<suppressed ~12 debug messages>

5.8.4. Executing CHECK pass (checking for obvious problems).
Checking module fir8_wrapper...
Found and reported 0 problems.

5.8.5. Executing OPT pass (performing simple optimizations).

5.8.5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.

5.8.5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fir8_wrapper'.
Removed a total of 0 cells.

5.8.5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fir8_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$500.
    dead port 1/2 on $mux $procmux$503.
    dead port 1/2 on $mux $procmux$509.
    dead port 1/2 on $mux $procmux$515.
    dead port 1/2 on $mux $procmux$521.
Removed 5 multiplexer ports.
<suppressed ~10 debug messages>

5.8.5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fir8_wrapper.
    Consolidated identical input bits for $mux cell $procmux$506:
      Old ports: A=8'11111111, B=8'00000000, Y=$procmux$506_Y
      New ports: A=1'1, B=1'0, Y=$procmux$506_Y [0]
      New connections: $procmux$506_Y [7:1] = { $procmux$506_Y [0] $procmux$506_Y [0] $procmux$506_Y [0] $procmux$506_Y [0] $procmux$506_Y [0] $procmux$506_Y [0] $procmux$506_Y [0] }
  Optimizing cells in module \fir8_wrapper.
    Consolidated identical input bits for $mux cell $procmux$572:
      Old ports: A=$2$memwr$\stimIn$../../fir8_wrapper.v:44$2_EN[7:0]$21, B=8'00000000, Y=$0$memwr$\stimIn$../../fir8_wrapper.v:44$2_EN[7:0]$8
      New ports: A=$procmux$506_Y [0], B=1'0, Y=$0$memwr$\stimIn$../../fir8_wrapper.v:44$2_EN[7:0]$8 [0]
      New connections: $0$memwr$\stimIn$../../fir8_wrapper.v:44$2_EN[7:0]$8 [7:1] = { $0$memwr$\stimIn$../../fir8_wrapper.v:44$2_EN[7:0]$8 [0] $0$memwr$\stimIn$../../fir8_wrapper.v:44$2_EN[7:0]$8 [0] $0$memwr$\stimIn$../../fir8_wrapper.v:44$2_EN[7:0]$8 [0] $0$memwr$\stimIn$../../fir8_wrapper.v:44$2_EN[7:0]$8 [0] $0$memwr$\stimIn$../../fir8_wrapper.v:44$2_EN[7:0]$8 [0] $0$memwr$\stimIn$../../fir8_wrapper.v:44$2_EN[7:0]$8 [0] $0$memwr$\stimIn$../../fir8_wrapper.v:44$2_EN[7:0]$8 [0] }
  Optimizing cells in module \fir8_wrapper.
Performed a total of 2 changes.

5.8.5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fir8_wrapper'.
Removed a total of 0 cells.

5.8.5.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_fir8.\gen_fir_pe[0].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 1 on $flatten\u_fir8.\gen_fir_pe[0].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 10 on $flatten\u_fir8.\gen_fir_pe[0].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 11 on $flatten\u_fir8.\gen_fir_pe[0].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 12 on $flatten\u_fir8.\gen_fir_pe[0].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 13 on $flatten\u_fir8.\gen_fir_pe[0].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 14 on $flatten\u_fir8.\gen_fir_pe[0].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 15 on $flatten\u_fir8.\gen_fir_pe[0].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 0 on $flatten\u_fir8.\gen_fir_pe[1].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 1 on $flatten\u_fir8.\gen_fir_pe[1].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 0 on $flatten\u_fir8.\gen_fir_pe[3].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 0 on $flatten\u_fir8.\gen_fir_pe[4].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 0 on $flatten\u_fir8.\gen_fir_pe[6].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 1 on $flatten\u_fir8.\gen_fir_pe[6].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 0 on $flatten\u_fir8.\gen_fir_pe[7].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 1 on $flatten\u_fir8.\gen_fir_pe[7].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 10 on $flatten\u_fir8.\gen_fir_pe[7].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 11 on $flatten\u_fir8.\gen_fir_pe[7].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 12 on $flatten\u_fir8.\gen_fir_pe[7].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 13 on $flatten\u_fir8.\gen_fir_pe[7].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 14 on $flatten\u_fir8.\gen_fir_pe[7].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 15 on $flatten\u_fir8.\gen_fir_pe[7].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.

5.8.5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

5.8.5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.

5.8.5.9. Rerunning OPT passes. (Maybe there is more to do..)

5.8.5.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fir8_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

5.8.5.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fir8_wrapper.
Performed a total of 0 changes.

5.8.5.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fir8_wrapper'.
Removed a total of 0 cells.

5.8.5.13. Executing OPT_DFF pass (perform DFF optimizations).

5.8.5.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..

5.8.5.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.

5.8.5.16. Finished OPT passes. (There is nothing left to do.)

5.8.6. Executing FSM pass (extract and optimize FSM).

5.8.6.1. Executing FSM_DETECT pass (finding FSMs in design).

5.8.6.2. Executing FSM_EXTRACT pass (extracting FSM from design).

5.8.6.3. Executing FSM_OPT pass (simple optimizations of FSMs).

5.8.6.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..

5.8.6.5. Executing FSM_OPT pass (simple optimizations of FSMs).

5.8.6.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

5.8.6.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

5.8.6.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

5.8.7. Executing OPT pass (performing simple optimizations).

5.8.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.

5.8.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fir8_wrapper'.
Removed a total of 0 cells.

5.8.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fir8_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

5.8.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fir8_wrapper.
Performed a total of 0 changes.

5.8.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fir8_wrapper'.
Removed a total of 0 cells.

5.8.7.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$649 ($dff) from module fir8_wrapper (D = \u_fir8.gen_fir_pe[7].u_fir_pe.Yout [15:8], Q = \vectOut[2]).
Adding EN signal on $procdff$648 ($dff) from module fir8_wrapper (D = \u_fir8.gen_fir_pe[7].u_fir_pe.Yout [7:0], Q = \vectOut[1]).
Adding EN signal on $procdff$647 ($dff) from module fir8_wrapper (D = \u_fir8.gen_fir_pe[7].u_fir_pe.Xout, Q = \vectOut[0]).
Adding EN signal on $procdff$646 ($dff) from module fir8_wrapper (D = { $memrd$\stimIn$../../fir8_wrapper.v:34$16_DATA $memrd$\stimIn$../../fir8_wrapper.v:33$15_DATA }, Q = \Yin).
Adding EN signal on $procdff$645 ($dff) from module fir8_wrapper (D = $memrd$\stimIn$../../fir8_wrapper.v:32$14_DATA, Q = \Xin).
Adding EN signal on $procdff$644 ($dff) from module fir8_wrapper (D = $3$mem2reg_rd$\vectOut$../../fir8_wrapper.v:45$1_DATA[7:0]$22, Q = \Dout_emu).

5.8.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..
Removed 11 unused cells and 10 unused wires.
<suppressed ~12 debug messages>

5.8.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.

5.8.7.9. Rerunning OPT passes. (Maybe there is more to do..)

5.8.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fir8_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

5.8.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fir8_wrapper.
Performed a total of 0 changes.

5.8.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fir8_wrapper'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

5.8.7.13. Executing OPT_DFF pass (perform DFF optimizations).

5.8.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

5.8.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.

5.8.7.16. Rerunning OPT passes. (Maybe there is more to do..)

5.8.7.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fir8_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

5.8.7.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fir8_wrapper.
Performed a total of 0 changes.

5.8.7.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fir8_wrapper'.
Removed a total of 0 cells.

5.8.7.20. Executing OPT_DFF pass (perform DFF optimizations).

5.8.7.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..

5.8.7.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.

5.8.7.23. Finished OPT passes. (There is nothing left to do.)

5.8.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 address bits (of 3) from memory init port fir8_wrapper.$auto$proc_memwr.cc:45:proc_memwr$655 (stimIn).
Removed top 30 address bits (of 32) from memory read port fir8_wrapper.$memrd$\stimIn$../../fir8_wrapper.v:32$14 (stimIn).
Removed top 30 address bits (of 32) from memory read port fir8_wrapper.$memrd$\stimIn$../../fir8_wrapper.v:33$15 (stimIn).
Removed top 30 address bits (of 32) from memory read port fir8_wrapper.$memrd$\stimIn$../../fir8_wrapper.v:34$16 (stimIn).
Removed top 1 bits (of 2) from port B of cell fir8_wrapper.$procmux$497_CMP0 ($eq).
Removed top 1 bits (of 3) from mux cell fir8_wrapper.$procmux$545 ($mux).
Removed top 6 bits (of 16) from port A of cell fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[7].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27 ($add).
Removed top 6 bits (of 16) from port A of cell fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[0].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27 ($add).
Removed top 4 bits (of 6) from port B of cell fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[6].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24 ($mul).
Removed top 4 bits (of 14) from port Y of cell fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[6].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24 ($mul).
Removed top 3 bits (of 8) from port B of cell fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[5].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24 ($mul).
Removed top 3 bits (of 16) from port Y of cell fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[5].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24 ($mul).
Removed top 2 bits (of 7) from port B of cell fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[4].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24 ($mul).
Removed top 2 bits (of 15) from port Y of cell fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[4].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24 ($mul).
Removed top 2 bits (of 7) from port B of cell fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[3].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24 ($mul).
Removed top 2 bits (of 15) from port Y of cell fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[3].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24 ($mul).
Removed top 3 bits (of 8) from port B of cell fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[2].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24 ($mul).
Removed top 3 bits (of 16) from port Y of cell fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[2].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24 ($mul).
Removed top 4 bits (of 6) from port B of cell fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[1].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24 ($mul).
Removed top 4 bits (of 14) from port Y of cell fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[1].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24 ($mul).
Removed top 1 bits (of 3) from mux cell fir8_wrapper.$procmux$518 ($mux).
Removed top 1 bits (of 3) from wire fir8_wrapper.$0$memwr$\stimIn$../../fir8_wrapper.v:44$2_ADDR[2:0]$6.
Removed top 1 bits (of 3) from wire fir8_wrapper.$2$memwr$\stimIn$../../fir8_wrapper.v:44$2_ADDR[2:0]$19.
Removed top 4 bits (of 16) from wire fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[1].u_fir_pe.$0\mul[15:0].
Removed top 3 bits (of 16) from wire fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[2].u_fir_pe.$0\mul[15:0].
Removed top 2 bits (of 16) from wire fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[3].u_fir_pe.$0\mul[15:0].
Removed top 2 bits (of 16) from wire fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[4].u_fir_pe.$0\mul[15:0].
Removed top 3 bits (of 16) from wire fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[5].u_fir_pe.$0\mul[15:0].
Removed top 4 bits (of 16) from wire fir8_wrapper.$flatten\u_fir8.\gen_fir_pe[6].u_fir_pe.$0\mul[15:0].

5.8.9. Executing PEEPOPT pass (run peephole optimizers).

5.8.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

5.8.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module fir8_wrapper:
  creating $macc model for $flatten\u_fir8.\gen_fir_pe[0].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27 ($add).
  creating $macc model for $flatten\u_fir8.\gen_fir_pe[1].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27 ($add).
  creating $macc model for $flatten\u_fir8.\gen_fir_pe[1].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24 ($mul).
  creating $macc model for $flatten\u_fir8.\gen_fir_pe[2].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27 ($add).
  creating $macc model for $flatten\u_fir8.\gen_fir_pe[2].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24 ($mul).
  creating $macc model for $flatten\u_fir8.\gen_fir_pe[3].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27 ($add).
  creating $macc model for $flatten\u_fir8.\gen_fir_pe[3].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24 ($mul).
  creating $macc model for $flatten\u_fir8.\gen_fir_pe[4].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27 ($add).
  creating $macc model for $flatten\u_fir8.\gen_fir_pe[4].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24 ($mul).
  creating $macc model for $flatten\u_fir8.\gen_fir_pe[5].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27 ($add).
  creating $macc model for $flatten\u_fir8.\gen_fir_pe[5].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24 ($mul).
  creating $macc model for $flatten\u_fir8.\gen_fir_pe[6].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27 ($add).
  creating $macc model for $flatten\u_fir8.\gen_fir_pe[6].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24 ($mul).
  creating $macc model for $flatten\u_fir8.\gen_fir_pe[7].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27 ($add).
  creating $alu model for $macc $flatten\u_fir8.\gen_fir_pe[7].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27.
  creating $alu model for $macc $flatten\u_fir8.\gen_fir_pe[6].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27.
  creating $alu model for $macc $flatten\u_fir8.\gen_fir_pe[5].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27.
  creating $alu model for $macc $flatten\u_fir8.\gen_fir_pe[4].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27.
  creating $alu model for $macc $flatten\u_fir8.\gen_fir_pe[3].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27.
  creating $alu model for $macc $flatten\u_fir8.\gen_fir_pe[2].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27.
  creating $alu model for $macc $flatten\u_fir8.\gen_fir_pe[1].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27.
  creating $alu model for $macc $flatten\u_fir8.\gen_fir_pe[0].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27.
  creating $macc cell for $flatten\u_fir8.\gen_fir_pe[5].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24: $auto$alumacc.cc:365:replace_macc$703
  creating $macc cell for $flatten\u_fir8.\gen_fir_pe[2].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24: $auto$alumacc.cc:365:replace_macc$704
  creating $macc cell for $flatten\u_fir8.\gen_fir_pe[4].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24: $auto$alumacc.cc:365:replace_macc$705
  creating $macc cell for $flatten\u_fir8.\gen_fir_pe[1].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24: $auto$alumacc.cc:365:replace_macc$706
  creating $macc cell for $flatten\u_fir8.\gen_fir_pe[6].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24: $auto$alumacc.cc:365:replace_macc$707
  creating $macc cell for $flatten\u_fir8.\gen_fir_pe[3].u_fir_pe.$mul$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:26$24: $auto$alumacc.cc:365:replace_macc$708
  creating $alu cell for $flatten\u_fir8.\gen_fir_pe[0].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27: $auto$alumacc.cc:485:replace_alu$709
  creating $alu cell for $flatten\u_fir8.\gen_fir_pe[1].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27: $auto$alumacc.cc:485:replace_alu$712
  creating $alu cell for $flatten\u_fir8.\gen_fir_pe[2].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27: $auto$alumacc.cc:485:replace_alu$715
  creating $alu cell for $flatten\u_fir8.\gen_fir_pe[3].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27: $auto$alumacc.cc:485:replace_alu$718
  creating $alu cell for $flatten\u_fir8.\gen_fir_pe[4].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27: $auto$alumacc.cc:485:replace_alu$721
  creating $alu cell for $flatten\u_fir8.\gen_fir_pe[5].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27: $auto$alumacc.cc:485:replace_alu$724
  creating $alu cell for $flatten\u_fir8.\gen_fir_pe[6].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27: $auto$alumacc.cc:485:replace_alu$727
  creating $alu cell for $flatten\u_fir8.\gen_fir_pe[7].u_fir_pe.$add$../../../../2-5_Lab3_FIR8/rtl_verilog/fir_pe.v:37$27: $auto$alumacc.cc:485:replace_alu$730
  created 8 $alu and 6 $macc cells.

5.8.12. Executing SHARE pass (SAT-based resource sharing).

5.8.13. Executing OPT pass (performing simple optimizations).

5.8.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.

5.8.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fir8_wrapper'.
Removed a total of 0 cells.

5.8.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fir8_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

5.8.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fir8_wrapper.
Performed a total of 0 changes.

5.8.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fir8_wrapper'.
Removed a total of 0 cells.

5.8.13.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$666 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$666 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$666 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$666 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$667 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$667 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$668 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$668 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$669 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$669 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$669 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$669 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 13 on $flatten\u_fir8.\gen_fir_pe[2].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 14 on $flatten\u_fir8.\gen_fir_pe[2].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 15 on $flatten\u_fir8.\gen_fir_pe[2].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 13 on $flatten\u_fir8.\gen_fir_pe[5].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 14 on $flatten\u_fir8.\gen_fir_pe[5].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.
Setting constant 0-bit at position 15 on $flatten\u_fir8.\gen_fir_pe[5].u_fir_pe.$procdff$643 ($dff) from module fir8_wrapper.

5.8.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..

5.8.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.

5.8.13.9. Rerunning OPT passes. (Maybe there is more to do..)

5.8.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fir8_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~4 debug messages>

5.8.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fir8_wrapper.
Performed a total of 0 changes.

5.8.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fir8_wrapper'.
Removed a total of 0 cells.

5.8.13.13. Executing OPT_DFF pass (perform DFF optimizations).

5.8.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..

5.8.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.

5.8.13.16. Finished OPT passes. (There is nothing left to do.)

5.8.14. Executing MEMORY pass.

5.8.14.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

5.8.14.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

5.8.14.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing fir8_wrapper.stimIn write port 0.

5.8.14.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

5.8.14.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\stimIn'[0] in module `\fir8_wrapper': merging output FF to cell.
    Write port 0: don't care on collision.
Checking read port `\stimIn'[1] in module `\fir8_wrapper': merging output FF to cell.
    Write port 0: don't care on collision.
Checking read port `\stimIn'[2] in module `\fir8_wrapper': merging output FF to cell.
    Write port 0: don't care on collision.

5.8.14.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..
Removed 2 unused cells and 27 unused wires.
<suppressed ~3 debug messages>

5.8.14.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory fir8_wrapper.stimIn by address:
  Merging ports 1, 2 (address 2'01).
Consolidating read ports of memory fir8_wrapper.stimIn by address:
  Merging ports 0, 1 (address 2'10).

5.8.14.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

5.8.14.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

5.8.14.10. Executing MEMORY_COLLECT pass (generating $mem cells).

5.8.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..

5.9. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory fir8_wrapper.stimIn
<suppressed ~634 debug messages>

5.10. Executing TECHMAP pass (map to technology primitives).

5.10.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/lutrams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_LUTRAM_'.
Successfully finished Verilog frontend.

5.10.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_SP_'.
Generating RTLIL representation for module `\$__GOWIN_DP_'.
Generating RTLIL representation for module `\$__GOWIN_SDP_'.
Successfully finished Verilog frontend.

5.10.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

5.11. Executing OPT pass (performing simple optimizations).

5.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.
<suppressed ~11 debug messages>

5.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fir8_wrapper'.
Removed a total of 0 cells.

5.11.3. Executing OPT_DFF pass (perform DFF optimizations).

5.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..
Removed 1 unused cells and 5 unused wires.
<suppressed ~2 debug messages>

5.11.5. Finished fast OPT passes.

5.12. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \stimIn in module \fir8_wrapper:
  created 4 $dff cells and 0 static cells of width 8.
Extracted data FF from read port 0 of fir8_wrapper.stimIn: $\stimIn$rdreg[0]
  read interface: 1 $dff and 0 $mux cells.
  write interface: 4 write mux blocks.

5.13. Executing OPT pass (performing simple optimizations).

5.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.
<suppressed ~5 debug messages>

5.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fir8_wrapper'.
Removed a total of 0 cells.

5.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fir8_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

5.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fir8_wrapper.
Performed a total of 0 changes.

5.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fir8_wrapper'.
Removed a total of 0 cells.

5.13.6. Executing OPT_DFF pass (perform DFF optimizations).

5.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

5.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.

5.13.9. Rerunning OPT passes. (Maybe there is more to do..)

5.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fir8_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

5.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fir8_wrapper.
Performed a total of 0 changes.

5.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fir8_wrapper'.
Removed a total of 0 cells.

5.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\stimIn[3]$975 ($dff) from module fir8_wrapper (D = \Din_emu, Q = \stimIn[3]).
Adding EN signal on $memory\stimIn[2]$973 ($dff) from module fir8_wrapper (D = \Din_emu, Q = \stimIn[2]).
Adding EN signal on $memory\stimIn[1]$971 ($dff) from module fir8_wrapper (D = \Din_emu, Q = \stimIn[1]).
Adding EN signal on $memory\stimIn[0]$969 ($dff) from module fir8_wrapper (D = \Din_emu, Q = \stimIn[0]).

5.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..
Removed 4 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

5.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.

5.13.16. Rerunning OPT passes. (Maybe there is more to do..)

5.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fir8_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

5.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fir8_wrapper.
Performed a total of 0 changes.

5.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fir8_wrapper'.
Removed a total of 0 cells.

5.13.20. Executing OPT_DFF pass (perform DFF optimizations).

5.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..

5.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.

5.13.23. Finished OPT passes. (There is nothing left to do.)

5.14. Executing TECHMAP pass (map to technology primitives).

5.14.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.14.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_gw1n_alu'.
Successfully finished Verilog frontend.

5.14.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$fc16b9f758000d363d24f130038bd99b46b4fa1b\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $and.
Using extmapper maccmap for cells of type $macc.
  add \u_fir8.gen_fir_pe[4].u_fir_pe.Xout * 5'11001 (8x5 bits, unsigned)
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$33acca59acb78d0be1d2963f30b104550f2b2c75\_80_gw1n_alu for cells of type $alu.
Using template $paramod$091610cd349a68bd5539cffd7126f0d76e9bca00\_80_gw1n_alu for cells of type $alu.
Using template $paramod$6df0329addda9228fcc2546de2aaf14ad26c98e1\_80_gw1n_alu for cells of type $alu.
Using template $paramod$67e8f4b8dba01cd3d8fc718acd02276257d102de\_80_gw1n_alu for cells of type $alu.
  add \u_fir8.gen_fir_pe[2].u_fir_pe.Xout * 5'10001 (8x5 bits, unsigned)
  add \u_fir8.gen_fir_pe[1].u_fir_pe.Xout * 5'11001 (8x5 bits, unsigned)
  add \u_fir8.gen_fir_pe[0].u_fir_pe.Xout * 2'11 (8x2 bits, unsigned)
  add \u_fir8.gen_fir_pe[3].u_fir_pe.Xout * 5'10001 (8x5 bits, unsigned)
  add \u_fir8.gen_fir_pe[5].u_fir_pe.Xout * 2'11 (8x2 bits, unsigned)
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000001101 for cells of type $fa.
Using template $paramod$2780480d52179e2db572a6e5133edf36e733d32e\_80_gw1n_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $pos.
Using template $paramod$484d51534650924b7ed4c69e46eed3a56904771f\_80_gw1n_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~657 debug messages>

5.15. Executing OPT pass (performing simple optimizations).

5.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.
<suppressed ~1427 debug messages>

5.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fir8_wrapper'.
<suppressed ~81 debug messages>
Removed a total of 27 cells.

5.15.3. Executing OPT_DFF pass (perform DFF optimizations).

5.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..
Removed 155 unused cells and 654 unused wires.
<suppressed ~157 debug messages>

5.15.5. Finished fast OPT passes.

5.16. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port fir8_wrapper.Addr_emu using IBUF.
Mapping port fir8_wrapper.Din_emu using IBUF.
Mapping port fir8_wrapper.Dout_emu using OBUF.
Mapping port fir8_wrapper.clk_dut using IBUF.
Mapping port fir8_wrapper.clk_emu using IBUF.
Mapping port fir8_wrapper.get_emu using IBUF.
Mapping port fir8_wrapper.load_emu using IBUF.

5.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

5.18. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

5.19. Executing TECHMAP pass (map to technology primitives).

5.19.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

5.19.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~495 debug messages>

5.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.
<suppressed ~24 debug messages>

5.21. Executing SIMPLEMAP pass (map simple cells to gate primitives).

5.22. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

5.23. Executing ABC9 pass.

5.23.1. Executing ABC9_OPS pass (helper functions for ABC9).

5.23.2. Executing ABC9_OPS pass (helper functions for ABC9).

5.23.3. Executing PROC pass (convert processes to netlists).

5.23.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:969$4118'.
Cleaned up 1 empty switch.

5.23.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

5.23.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 4 assignments to connections.

5.23.3.4. Executing PROC_INIT pass (extract init attributes).

5.23.3.5. Executing PROC_ARST pass (detect async resets in processes).

5.23.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

5.23.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:969$4118'.

5.23.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).

5.23.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010.\C' using process `$paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:969$4118'.
  created direct connection (no actual register cell created).
Creating register for signal `$paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010.\S' using process `$paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:969$4118'.
  created direct connection (no actual register cell created).

5.23.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

5.23.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:969$4118'.
Cleaned up 0 empty switches.

5.23.3.12. Executing OPT_EXPR pass (perform const folding).

5.23.4. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module fir8_wrapper.
Found 0 SCCs.

5.23.5. Executing ABC9_OPS pass (helper functions for ABC9).

5.23.6. Executing PROC pass (convert processes to netlists).

5.23.6.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.23.6.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

5.23.6.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

5.23.6.4. Executing PROC_INIT pass (extract init attributes).

5.23.6.5. Executing PROC_ARST pass (detect async resets in processes).

5.23.6.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

5.23.6.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

5.23.6.8. Executing PROC_DLATCH pass (convert process syncs to latches).

5.23.6.9. Executing PROC_DFF pass (convert process syncs to FFs).

5.23.6.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

5.23.6.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.23.6.12. Executing OPT_EXPR pass (perform const folding).

5.23.7. Executing TECHMAP pass (map to technology primitives).

5.23.7.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.23.7.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~251 debug messages>

5.23.8. Executing OPT pass (performing simple optimizations).

5.23.8.1. Executing OPT_EXPR pass (perform const folding).

5.23.8.2. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

5.23.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Removed 0 multiplexer ports.

5.23.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Performed a total of 0 changes.

5.23.8.5. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

5.23.8.6. Executing OPT_DFF pass (perform DFF optimizations).

5.23.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).

5.23.8.8. Executing OPT_EXPR pass (perform const folding).

5.23.8.9. Finished OPT passes. (There is nothing left to do.)

5.23.9. Executing TECHMAP pass (map to technology primitives).

5.23.9.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

5.23.9.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~2 debug messages>

5.23.10. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_model.v' to AST representation.
Replacing existing blackbox module `$__ABC9_DELAY' at /usr/local/bin/../share/yosys/abc9_model.v:2.1-7.10.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Replacing existing blackbox module `$__ABC9_SCC_BREAKER' at /usr/local/bin/../share/yosys/abc9_model.v:9.1-11.10.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Replacing existing module `$__DFF_N__$abc9_flop' at /usr/local/bin/../share/yosys/abc9_model.v:14.1-20.10.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Replacing existing module `$__DFF_P__$abc9_flop' at /usr/local/bin/../share/yosys/abc9_model.v:23.1-29.10.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

5.23.11. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~554 debug messages>

5.23.12. Executing ABC9_OPS pass (helper functions for ABC9).

5.23.13. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

5.23.14. Executing TECHMAP pass (map to technology primitives).

5.23.14.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.23.14.2. Continuing TECHMAP pass.
Using template $paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010 for cells of type $paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $not.
No more expansions possible.
<suppressed ~260 debug messages>

5.23.15. Executing OPT pass (performing simple optimizations).

5.23.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.

5.23.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fir8_wrapper'.
Removed a total of 0 cells.

5.23.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fir8_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

5.23.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fir8_wrapper.
Performed a total of 0 changes.

5.23.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fir8_wrapper'.
Removed a total of 0 cells.

5.23.15.6. Executing OPT_DFF pass (perform DFF optimizations).

5.23.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

5.23.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.

5.23.15.9. Rerunning OPT passes. (Maybe there is more to do..)

5.23.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \fir8_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

5.23.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \fir8_wrapper.
Performed a total of 0 changes.

5.23.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\fir8_wrapper'.
Removed a total of 0 cells.

5.23.15.13. Executing OPT_DFF pass (perform DFF optimizations).

5.23.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \fir8_wrapper..

5.23.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module fir8_wrapper.

5.23.15.16. Finished OPT passes. (There is nothing left to do.)

5.23.16. Executing AIGMAP pass (map logic to AIG).
Module fir8_wrapper: replaced 5 cells with 35 new cells, skipped 9 cells.
  replaced 2 cell types:
       3 $_XOR_
       2 $_MUX_
  not replaced 2 cell types:
       8 $specify2
       1 $_NOT_

5.23.17. Executing AIGMAP pass (map logic to AIG).
Module fir8_wrapper: replaced 78 cells with 489 new cells, skipped 1330 cells.
  replaced 3 cell types:
      19 $_OR_
      50 $_XOR_
       9 $_MUX_
  not replaced 10 cell types:
       9 $scopeinfo
       7 $_NOT_
      77 $_AND_
     392 DFF
      80 DFFE
      15 IBUF
       8 OBUF
     190 $paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010
     472 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000001001000000
      80 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000000111111

5.23.17.1. Executing ABC9_OPS pass (helper functions for ABC9).

5.23.17.2. Executing ABC9_OPS pass (helper functions for ABC9).

5.23.17.3. Executing XAIGER backend.
<suppressed ~483 debug messages>
Extracted 273 AND gates and 2265 wires from module `fir8_wrapper' to a netlist network with 509 inputs and 570 outputs.

5.23.17.4. Executing ABC9_EXE pass (technology mapping using ABC9).

5.23.17.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    509/    570  and =     214  lev =    8 (0.16)  mem = 0.05 MB  box = 742  bb = 552
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    509/    570  and =     291  lev =    7 (0.15)  mem = 0.06 MB  ch =   45  box = 742  bb = 552
ABC: + &if -W 500 -v 
ABC: K = 8. Memory (bytes): Truth =    0. Cut =   68. Obj =  152. Set =  708. CutMin = no
ABC: Node =     291.  Ch =    37.  Total mem =    0.58 MB. Peak cut mem =    0.01 MB.
ABC: P:  Del = 5467.00.  Ar =      74.0.  Edge =      203.  Cut =     3960.  T =     0.00 sec
ABC: P:  Del = 5467.00.  Ar =      74.0.  Edge =      203.  Cut =     3960.  T =     0.00 sec
ABC: P:  Del = 5467.00.  Ar =      82.0.  Edge =      240.  Cut =     3960.  T =     0.00 sec
ABC: F:  Del = 5467.00.  Ar =      74.0.  Edge =      203.  Cut =     3241.  T =     0.00 sec
ABC: A:  Del = 5467.00.  Ar =      74.0.  Edge =      200.  Cut =     3241.  T =     0.00 sec
ABC: A:  Del = 5467.00.  Ar =      74.0.  Edge =      200.  Cut =     3241.  T =     0.00 sec
ABC: Total time =     0.00 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: The network is not changed by "&mfs".
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =    509/    570  and =     293  lev =    7 (0.15)  mem = 0.06 MB  box = 742  bb = 552
ABC: Mapping (K=5)  :  lut =     62  edge =     200  lev =    2 (0.08)  levB =   17  mem = 0.02 MB
ABC: LUT = 62 : 2=26 41.9 %  3=8 12.9 %  4=16 25.8 %  5=12 19.4 %  Ave = 3.23
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 0.05 seconds, total: 0.05 seconds

5.23.17.6. Executing AIGER frontend.
<suppressed ~2170 debug messages>
Removed 462 unused cells and 3803 unused wires.

5.23.17.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:       62
ABC RESULTS:   $paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010 cells:      190
ABC RESULTS:           input signals:       49
ABC RESULTS:          output signals:      556
Removing temp directory.

5.23.18. Executing TECHMAP pass (map to technology primitives).

5.23.18.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

5.23.18.2. Continuing TECHMAP pass.
Using template $paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010 for cells of type $paramod\ALU\ALU_MODE=s32'00000000000000000000000000000010.
No more expansions possible.
<suppressed ~196 debug messages>
Removed 15 unused cells and 5336 unused wires.

5.24. Executing TECHMAP pass (map to technology primitives).

5.24.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

5.24.2. Continuing TECHMAP pass.
Using template $paramod$fc9a29568712ccde4cf1db9c7b754dde95820a70\$lut for cells of type $lut.
Using template $paramod$109be716830a6f862b58ecad7bca96960460ecfc\$lut for cells of type $lut.
Using template $paramod$717bf6666116ee4d3a36e1209754d5d20abff615\$lut for cells of type $lut.
Using template $paramod$9d1705341bfa5fd4f71e6517b526937ec7acc6d1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$a7defd4f918862a5b442f9ecbddab049665c36c4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$03a20eca73bd327db6f1c60cd9bb6850dcfca108\$lut for cells of type $lut.
Using template $paramod$40aec0ed5f327702430cbc466f51b2d10c03091a\$lut for cells of type $lut.
Using template $paramod$61c387311e0b7b1481f282cf3d339bc22e86cf60\$lut for cells of type $lut.
Using template $paramod$7ff112640fbb0d23e4cbbcff9d07853da570da93\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10011100 for cells of type $lut.
Using template $paramod$93b5db9f03527dade2bd85d35fb5c9f4bf58f9b4\$lut for cells of type $lut.
Using template $paramod$364c9ffbffac467d60dfec81bba4e18476c15602\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100010 for cells of type $lut.
Using template $paramod$40db9dd7b26c6d992c4916a1b5456ce7201bbfec\$lut for cells of type $lut.
Using template $paramod$a5418d8d6066eeba80e267f69a1246d860db9d32\$lut for cells of type $lut.
Using template $paramod$11e478df2d28ad00475d5dd61d1cac264a05c1ce\$lut for cells of type $lut.
Using template $paramod$0f71ea37248b72e66d575a448ad832b3423dec7d\$lut for cells of type $lut.
Using template $paramod$a30baca5e8f54efabdd76538873694f1ed82709b\$lut for cells of type $lut.
Using template $paramod$efa8abae4babea430d822d3b66983d4e80d973ce\$lut for cells of type $lut.
Using template $paramod$8511620ac19936d2cfc7b6c5ad7b35ef8bb8fc70\$lut for cells of type $lut.
Using template $paramod$28b671e3494d9ab382596a37cf681994cba8c59f\$lut for cells of type $lut.
Using template $paramod$20a673119583bf2425a5af92b73e64320073ab43\$lut for cells of type $lut.
Using template $paramod$d13698d7bcdf0772af5cc6d37da3444540de8179\$lut for cells of type $lut.
Using template $paramod$a6e7a50a746a4a98209a76b6509dd0d9a967f0c7\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~551 debug messages>

5.25. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in fir8_wrapper.

5.26. Executing SETUNDEF pass (replace undef values with defined constants).

5.27. Executing HILOMAP pass (mapping to constant drivers).

5.28. Executing SPLITNETS pass (splitting up multi-bit signals).
Removed 0 unused cells and 386 unused wires.

5.29. Executing AUTONAME pass.
Renamed 3795 objects in module fir8_wrapper (24 iterations).
<suppressed ~1261 debug messages>

5.30. Executing HIERARCHY pass (managing design hierarchy).
Attribute `top' found on module `fir8_wrapper'. Setting top module to fir8_wrapper.

5.30.1. Analyzing design hierarchy..
Top module:  \fir8_wrapper

5.30.2. Analyzing design hierarchy..
Top module:  \fir8_wrapper
Removed 0 unused modules.

5.31. Printing statistics.

=== fir8_wrapper ===

   Number of wires:               1648
   Number of wire bits:           1648
   Number of public wires:        1648
   Number of public wire bits:    1648
   Number of ports:                 23
   Number of port bits:             23
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                782
     $scopeinfo                      9
     ALU                           190
     DFF                           392
     DFFE                           80
     GND                             1
     IBUF                           15
     LUT2                           26
     LUT3                            8
     LUT4                           40
     MUX2_LUT5                      12
     OBUF                            8
     VCC                             1

5.32. Executing CHECK pass (checking for obvious problems).
Checking module fir8_wrapper...
Found and reported 0 problems.

5.33. Executing Verilog backend.

5.33.1. Executing BMUXMAP pass.

5.33.2. Executing DEMUXMAP pass.
Dumping module `\fir8_wrapper'.

6. Executing Verilog backend.

6.1. Executing BMUXMAP pass.

6.2. Executing DEMUXMAP pass.
Dumping module `\fir8_wrapper'.

7. Printing statistics.

=== fir8_wrapper ===

   Number of wires:               1648
   Number of wire bits:           1648
   Number of public wires:        1648
   Number of public wire bits:    1648
   Number of ports:                 23
   Number of port bits:             23
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                782
     $scopeinfo                      9
     ALU                           190
     DFF                           392
     DFFE                           80
     GND                             1
     IBUF                           15
     LUT2                           26
     LUT3                            8
     LUT4                           40
     MUX2_LUT5                      12
     OBUF                            8
     VCC                             1

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 949dca4bcb, CPU: user 0.91s system 0.03s, MEM: 41.94 MB peak
Yosys 0.49+5 (git sha1 954250d1d, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)
Time spent: 15% 8x techmap (0 sec), 11% 24x read_verilog (0 sec), ...
