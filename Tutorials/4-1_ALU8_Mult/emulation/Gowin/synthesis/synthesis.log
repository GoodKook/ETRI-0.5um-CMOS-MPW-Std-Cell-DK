
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.38+88 (git sha1 38f1b0b12, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Executing script file `ALU_wrapper.ys' --

1. Executing Verilog-2005 frontend: ../../../source/ALU_wrapper.v
Parsing Verilog input from `../../../source/ALU_wrapper.v' to AST representation.
Generating RTLIL representation for module `\ALU_wrapper'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../../../source/ALU8.v
Parsing Verilog input from `../../../source/ALU8.v' to AST representation.
Generating RTLIL representation for module `\ALU8'.
Successfully finished Verilog frontend.

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \ALU_wrapper
Used module:     \ALU8

3.2. Analyzing design hierarchy..
Top module:  \ALU_wrapper
Used module:     \ALU8
Removed 0 unused modules.

4. Executing SYNTH_GOWIN pass.

4.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\__APICULA_LUT5'.
Generating RTLIL representation for module `\__APICULA_LUT6'.
Generating RTLIL representation for module `\__APICULA_LUT7'.
Generating RTLIL representation for module `\__APICULA_LUT8'.
Generating RTLIL representation for module `\MUX2'.
Generating RTLIL representation for module `\MUX2_LUT5'.
Generating RTLIL representation for module `\MUX2_LUT6'.
Generating RTLIL representation for module `\MUX2_LUT7'.
Generating RTLIL representation for module `\MUX2_LUT8'.
Generating RTLIL representation for module `\DFF'.
Generating RTLIL representation for module `\DFFE'.
Generating RTLIL representation for module `\DFFS'.
Generating RTLIL representation for module `\DFFSE'.
Generating RTLIL representation for module `\DFFR'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DFFP'.
Generating RTLIL representation for module `\DFFPE'.
Generating RTLIL representation for module `\DFFC'.
Generating RTLIL representation for module `\DFFCE'.
Generating RTLIL representation for module `\DFFN'.
Generating RTLIL representation for module `\DFFNE'.
Generating RTLIL representation for module `\DFFNS'.
Generating RTLIL representation for module `\DFFNSE'.
Generating RTLIL representation for module `\DFFNR'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFNP'.
Generating RTLIL representation for module `\DFFNPE'.
Generating RTLIL representation for module `\DFFNC'.
Generating RTLIL representation for module `\DFFNCE'.
Generating RTLIL representation for module `\VCC'.
Generating RTLIL representation for module `\GND'.
Generating RTLIL representation for module `\IBUF'.
Generating RTLIL representation for module `\OBUF'.
Generating RTLIL representation for module `\TBUF'.
Generating RTLIL representation for module `\IOBUF'.
Generating RTLIL representation for module `\ELVDS_OBUF'.
Generating RTLIL representation for module `\TLVDS_OBUF'.
Generating RTLIL representation for module `\OSER4'.
Generating RTLIL representation for module `\OSER8'.
Generating RTLIL representation for module `\OSER10'.
Generating RTLIL representation for module `\OVIDEO'.
Generating RTLIL representation for module `\OSER16'.
Generating RTLIL representation for module `\IDES4'.
Generating RTLIL representation for module `\IDES8'.
Generating RTLIL representation for module `\IDES10'.
Generating RTLIL representation for module `\IVIDEO'.
Generating RTLIL representation for module `\IDES16'.
Generating RTLIL representation for module `\IDDR'.
Generating RTLIL representation for module `\IDDRC'.
Generating RTLIL representation for module `\ODDR'.
Generating RTLIL representation for module `\ODDRC'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\RAM16S1'.
Generating RTLIL representation for module `\RAM16S2'.
Generating RTLIL representation for module `\RAM16S4'.
Generating RTLIL representation for module `\RAM16SDP1'.
Generating RTLIL representation for module `\RAM16SDP2'.
Generating RTLIL representation for module `\RAM16SDP4'.
Generating RTLIL representation for module `\SP'.
Generating RTLIL representation for module `\SPX9'.
Generating RTLIL representation for module `\SDP'.
Generating RTLIL representation for module `\SDPX9'.
Generating RTLIL representation for module `\DP'.
Generating RTLIL representation for module `\DPX9'.
Generating RTLIL representation for module `\rPLL'.
Generating RTLIL representation for module `\PLLVR'.
Generating RTLIL representation for module `\OSC'.
Generating RTLIL representation for module `\OSCZ'.
Generating RTLIL representation for module `\OSCF'.
Generating RTLIL representation for module `\OSCH'.
Generating RTLIL representation for module `\OSCW'.
Generating RTLIL representation for module `\OSCO'.
Successfully finished Verilog frontend.

4.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_xtra.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_xtra.v' to AST representation.
Generating RTLIL representation for module `\MUX2_MUX8'.
Generating RTLIL representation for module `\MUX2_MUX16'.
Generating RTLIL representation for module `\MUX2_MUX32'.
Generating RTLIL representation for module `\MUX4'.
Generating RTLIL representation for module `\MUX8'.
Generating RTLIL representation for module `\MUX16'.
Generating RTLIL representation for module `\MUX32'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\LUT7'.
Generating RTLIL representation for module `\LUT8'.
Generating RTLIL representation for module `\DL'.
Generating RTLIL representation for module `\DLE'.
Generating RTLIL representation for module `\DLC'.
Generating RTLIL representation for module `\DLCE'.
Generating RTLIL representation for module `\DLP'.
Generating RTLIL representation for module `\DLPE'.
Generating RTLIL representation for module `\DLN'.
Generating RTLIL representation for module `\DLNE'.
Generating RTLIL representation for module `\DLNC'.
Generating RTLIL representation for module `\DLNCE'.
Generating RTLIL representation for module `\DLNP'.
Generating RTLIL representation for module `\DLNPE'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\IODELAY'.
Generating RTLIL representation for module `\IEM'.
Generating RTLIL representation for module `\ROM16'.
Generating RTLIL representation for module `\ROM'.
Generating RTLIL representation for module `\ROMX9'.
Generating RTLIL representation for module `\rSDP'.
Generating RTLIL representation for module `\rSDPX9'.
Generating RTLIL representation for module `\rROM'.
Generating RTLIL representation for module `\rROMX9'.
Generating RTLIL representation for module `\pROM'.
Generating RTLIL representation for module `\pROMX9'.
Generating RTLIL representation for module `\SDPB'.
Generating RTLIL representation for module `\SDPX9B'.
Generating RTLIL representation for module `\DPB'.
Generating RTLIL representation for module `\DPX9B'.
Generating RTLIL representation for module `\PADD18'.
Generating RTLIL representation for module `\PADD9'.
Generating RTLIL representation for module `\MULT9X9'.
Generating RTLIL representation for module `\MULT18X18'.
Generating RTLIL representation for module `\MULT36X36'.
Generating RTLIL representation for module `\MULTALU36X18'.
Generating RTLIL representation for module `\MULTADDALU18X18'.
Generating RTLIL representation for module `\MULTALU18X18'.
Generating RTLIL representation for module `\ALU54D'.
Generating RTLIL representation for module `\BUFG'.
Generating RTLIL representation for module `\BUFS'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\TLVDS_IBUF'.
Generating RTLIL representation for module `\TLVDS_TBUF'.
Generating RTLIL representation for module `\TLVDS_IOBUF'.
Generating RTLIL representation for module `\ELVDS_IBUF'.
Generating RTLIL representation for module `\ELVDS_TBUF'.
Generating RTLIL representation for module `\ELVDS_IOBUF'.
Generating RTLIL representation for module `\MIPI_IBUF'.
Generating RTLIL representation for module `\MIPI_IBUF_HS'.
Generating RTLIL representation for module `\MIPI_IBUF_LP'.
Generating RTLIL representation for module `\MIPI_OBUF'.
Generating RTLIL representation for module `\MIPI_OBUF_A'.
Generating RTLIL representation for module `\I3C_IOBUF'.
Generating RTLIL representation for module `\CLKDIV'.
Generating RTLIL representation for module `\DHCEN'.
Generating RTLIL representation for module `\DLL'.
Generating RTLIL representation for module `\DLLDLY'.
Generating RTLIL representation for module `\FLASH96K'.
Generating RTLIL representation for module `\FLASH256K'.
Generating RTLIL representation for module `\FLASH608K'.
Generating RTLIL representation for module `\DCS'.
Generating RTLIL representation for module `\DQCE'.
Generating RTLIL representation for module `\FLASH128K'.
Generating RTLIL representation for module `\MCU'.
Generating RTLIL representation for module `\USB20_PHY'.
Generating RTLIL representation for module `\ADC'.
Generating RTLIL representation for module `\BANDGAP'.
Generating RTLIL representation for module `\CLKDIV2'.
Generating RTLIL representation for module `\DCC'.
Generating RTLIL representation for module `\DHCENC'.
Generating RTLIL representation for module `\EMCU'.
Generating RTLIL representation for module `\FLASH64K'.
Generating RTLIL representation for module `\FLASH64KZ'.
Generating RTLIL representation for module `\I3C'.
Generating RTLIL representation for module `\IODELAYA'.
Generating RTLIL representation for module `\IODELAYC'.
Generating RTLIL representation for module `\SPMI'.
Generating RTLIL representation for module `\IODELAYB'.
Generating RTLIL representation for module `\PLLO'.
Generating RTLIL representation for module `\DCCG'.
Generating RTLIL representation for module `\FLASH96KA'.
Generating RTLIL representation for module `\MIPI_DPHY_RX'.
Generating RTLIL representation for module `\CLKDIVG'.
Successfully finished Verilog frontend.

4.3. Executing HIERARCHY pass (managing design hierarchy).

4.3.1. Analyzing design hierarchy..
Top module:  \ALU_wrapper
Used module:     \ALU8

4.3.2. Analyzing design hierarchy..
Top module:  \ALU_wrapper
Used module:     \ALU8
Removed 0 unused modules.

4.4. Executing PROC pass (convert processes to netlists).

4.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$257'.
Cleaned up 1 empty switch.

4.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$317 in module RAM16S4.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$281 in module RAM16S2.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$262 in module RAM16S1.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$253 in module DFFNCE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$251 in module DFFNC.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$249 in module DFFNPE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$247 in module DFFNP.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$245 in module DFFNRE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$243 in module DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$241 in module DFFNSE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$239 in module DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$233 in module DFFCE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$231 in module DFFC.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$229 in module DFFPE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$227 in module DFFP.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$225 in module DFFRE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$223 in module DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$221 in module DFFSE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$219 in module DFFS.
Removed 1 dead cases from process $proc$../../../source/ALU8.v:67$14 in module ALU8.
Marked 1 switch rules as full_case in process $proc$../../../source/ALU8.v:67$14 in module ALU8.
Removed 1 dead cases from process $proc$../../../source/ALU8.v:53$10 in module ALU8.
Marked 2 switch rules as full_case in process $proc$../../../source/ALU8.v:53$10 in module ALU8.
Marked 4 switch rules as full_case in process $proc$../../../source/ALU_wrapper.v:161$5 in module ALU_wrapper.
Marked 1 switch rules as full_case in process $proc$../../../source/ALU_wrapper.v:114$3 in module ALU_wrapper.
Marked 1 switch rules as full_case in process $proc$../../../source/ALU_wrapper.v:83$2 in module ALU_wrapper.
Marked 14 switch rules as full_case in process $proc$../../../source/ALU_wrapper.v:49$1 in module ALU_wrapper.
Removed a total of 2 dead cases.

4.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 9 redundant assignments.
Promoted 63 assignments to connections.

4.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$362'.
  Set init value: \mem0 = 16'0000000000000000
  Set init value: \mem1 = 16'0000000000000000
  Set init value: \mem2 = 16'0000000000000000
  Set init value: \mem3 = 16'0000000000000000
Found init rule in `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$304'.
  Set init value: \mem0 = 16'0000000000000000
  Set init value: \mem1 = 16'0000000000000000
Found init rule in `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$274'.
  Set init value: \mem = 16'0000000000000000
Found init rule in `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$254'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$252'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$250'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$248'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$246'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$244'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$242'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$240'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$238'.
  Set init value: \Q = 1'0
Found init rule in `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$236'.
  Set init value: \Q = 1'0
Found init rule in `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$234'.
  Set init value: \Q = 1'0
Found init rule in `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$232'.
  Set init value: \Q = 1'0
Found init rule in `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$230'.
  Set init value: \Q = 1'1
Found init rule in `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$228'.
  Set init value: \Q = 1'1
Found init rule in `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$226'.
  Set init value: \Q = 1'0
Found init rule in `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$224'.
  Set init value: \Q = 1'0
Found init rule in `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$222'.
  Set init value: \Q = 1'1
Found init rule in `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$220'.
  Set init value: \Q = 1'1
Found init rule in `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$218'.
  Set init value: \Q = 1'0
Found init rule in `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$216'.
  Set init value: \Q = 1'0

4.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \CLEAR in `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$253'.
Found async reset \CLEAR in `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$251'.
Found async reset \PRESET in `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$249'.
Found async reset \PRESET in `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$247'.
Found async reset \CLEAR in `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$233'.
Found async reset \CLEAR in `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$231'.
Found async reset \PRESET in `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$229'.
Found async reset \PRESET in `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$227'.
Found async reset \reset in `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:161$5'.
Found async reset \reset in `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:114$3'.
Found async reset \reset in `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:49$1'.

4.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~44 debug messages>

4.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$362'.
Creating decoders for process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$317'.
     1/8: $1$lookahead\mem3$316[15:0]$333
     2/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1075$308[3:0]$329
     3/8: $1$lookahead\mem2$315[15:0]$332
     4/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1074$307[3:0]$328
     5/8: $1$lookahead\mem1$314[15:0]$331
     6/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1073$306[3:0]$327
     7/8: $1$lookahead\mem0$313[15:0]$330
     8/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1072$305[3:0]$326
Creating decoders for process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$304'.
Creating decoders for process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$281'.
     1/4: $1$lookahead\mem1$280[15:0]$289
     2/4: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1028$276[3:0]$287
     3/4: $1$lookahead\mem0$279[15:0]$288
     4/4: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1027$275[3:0]$286
Creating decoders for process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$274'.
Creating decoders for process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$262'.
     1/2: $1$lookahead\mem$261[15:0]$266
     2/2: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:989$259[3:0]$265
Creating decoders for process `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$257'.
Creating decoders for process `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$254'.
Creating decoders for process `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$253'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$252'.
Creating decoders for process `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$251'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$250'.
Creating decoders for process `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$249'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$248'.
Creating decoders for process `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$247'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$246'.
Creating decoders for process `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$245'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$244'.
Creating decoders for process `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$243'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$242'.
Creating decoders for process `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$241'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$240'.
Creating decoders for process `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$239'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$238'.
Creating decoders for process `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$237'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$236'.
Creating decoders for process `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:366$235'.
Creating decoders for process `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$234'.
Creating decoders for process `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$233'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$232'.
Creating decoders for process `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$231'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$230'.
Creating decoders for process `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$229'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$228'.
Creating decoders for process `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$227'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$226'.
Creating decoders for process `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$225'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$224'.
Creating decoders for process `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$223'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$222'.
Creating decoders for process `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$221'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$220'.
Creating decoders for process `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$219'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$218'.
Creating decoders for process `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$217'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$216'.
Creating decoders for process `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:179$215'.
Creating decoders for process `\ALU8.$proc$../../../source/ALU8.v:87$21'.
Creating decoders for process `\ALU8.$proc$../../../source/ALU8.v:67$14'.
     1/1: $1\temp_BI[7:0]
Creating decoders for process `\ALU8.$proc$../../../source/ALU8.v:53$10'.
     1/2: $2\temp_logic[8:0]
     2/2: $1\temp_logic[8:0]
Creating decoders for process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:161$5'.
     1/1: $0\ACC_o[7:0]
Creating decoders for process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:114$3'.
     1/2: $0\rB[7:0]
     2/2: $0\rA[7:0]
Creating decoders for process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:83$2'.
     1/5: $1\LoadA[0:0]
     2/5: $1\OutFlag[0:0]
     3/5: $1\LoadCmd[0:0]
     4/5: $1\LoadB[0:0]
     5/5: $1\Done_o[0:0]
Creating decoders for process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:49$1'.
     1/1: $0\state[2:0]

4.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\ALU8.\temp_l' from process `\ALU8.$proc$../../../source/ALU8.v:87$21'.
No latch inferred for signal `\ALU8.\temp_h' from process `\ALU8.$proc$../../../source/ALU8.v:87$21'.
No latch inferred for signal `\ALU8.\temp_BI' from process `\ALU8.$proc$../../../source/ALU8.v:67$14'.
No latch inferred for signal `\ALU8.\temp_logic' from process `\ALU8.$proc$../../../source/ALU8.v:53$10'.
No latch inferred for signal `\ALU_wrapper.\Done_o' from process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:83$2'.
No latch inferred for signal `\ALU_wrapper.\LoadA' from process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:83$2'.
No latch inferred for signal `\ALU_wrapper.\LoadB' from process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:83$2'.
No latch inferred for signal `\ALU_wrapper.\LoadCmd' from process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:83$2'.
No latch inferred for signal `\ALU_wrapper.\OutFlag' from process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:83$2'.

4.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\RAM16S4.\mem0' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$317'.
  created $dff cell `$procdff$548' with positive edge clock.
Creating register for signal `\RAM16S4.\mem1' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$317'.
  created $dff cell `$procdff$549' with positive edge clock.
Creating register for signal `\RAM16S4.\mem2' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$317'.
  created $dff cell `$procdff$550' with positive edge clock.
Creating register for signal `\RAM16S4.\mem3' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$317'.
  created $dff cell `$procdff$551' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1072$305' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$317'.
  created $dff cell `$procdff$552' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1073$306' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$317'.
  created $dff cell `$procdff$553' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1074$307' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$317'.
  created $dff cell `$procdff$554' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1075$308' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$317'.
  created $dff cell `$procdff$555' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem0$313' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$317'.
  created $dff cell `$procdff$556' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem1$314' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$317'.
  created $dff cell `$procdff$557' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem2$315' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$317'.
  created $dff cell `$procdff$558' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem3$316' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$317'.
  created $dff cell `$procdff$559' with positive edge clock.
Creating register for signal `\RAM16S2.\mem0' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$281'.
  created $dff cell `$procdff$560' with positive edge clock.
Creating register for signal `\RAM16S2.\mem1' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$281'.
  created $dff cell `$procdff$561' with positive edge clock.
Creating register for signal `\RAM16S2.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1027$275' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$281'.
  created $dff cell `$procdff$562' with positive edge clock.
Creating register for signal `\RAM16S2.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1028$276' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$281'.
  created $dff cell `$procdff$563' with positive edge clock.
Creating register for signal `\RAM16S2.$lookahead\mem0$279' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$281'.
  created $dff cell `$procdff$564' with positive edge clock.
Creating register for signal `\RAM16S2.$lookahead\mem1$280' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$281'.
  created $dff cell `$procdff$565' with positive edge clock.
Creating register for signal `\RAM16S1.\mem' using process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$262'.
  created $dff cell `$procdff$566' with positive edge clock.
Creating register for signal `\RAM16S1.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:989$259' using process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$262'.
  created $dff cell `$procdff$567' with positive edge clock.
Creating register for signal `\RAM16S1.$lookahead\mem$261' using process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$262'.
  created $dff cell `$procdff$568' with positive edge clock.
Creating register for signal `\ALU.\C' using process `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$257'.
  created direct connection (no actual register cell created).
Creating register for signal `\ALU.\S' using process `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$257'.
  created direct connection (no actual register cell created).
Creating register for signal `\DFFNCE.\Q' using process `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$253'.
  created $adff cell `$procdff$569' with negative edge clock and positive level reset.
Creating register for signal `\DFFNC.\Q' using process `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$251'.
  created $adff cell `$procdff$570' with negative edge clock and positive level reset.
Creating register for signal `\DFFNPE.\Q' using process `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$249'.
  created $adff cell `$procdff$571' with negative edge clock and positive level reset.
Creating register for signal `\DFFNP.\Q' using process `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$247'.
  created $adff cell `$procdff$572' with negative edge clock and positive level reset.
Creating register for signal `\DFFNRE.\Q' using process `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$245'.
  created $dff cell `$procdff$573' with negative edge clock.
Creating register for signal `\DFFNR.\Q' using process `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$243'.
  created $dff cell `$procdff$574' with negative edge clock.
Creating register for signal `\DFFNSE.\Q' using process `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$241'.
  created $dff cell `$procdff$575' with negative edge clock.
Creating register for signal `\DFFNS.\Q' using process `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$239'.
  created $dff cell `$procdff$576' with negative edge clock.
Creating register for signal `\DFFNE.\Q' using process `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$237'.
  created $dff cell `$procdff$577' with negative edge clock.
Creating register for signal `\DFFN.\Q' using process `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:366$235'.
  created $dff cell `$procdff$578' with negative edge clock.
Creating register for signal `\DFFCE.\Q' using process `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$233'.
  created $adff cell `$procdff$579' with positive edge clock and positive level reset.
Creating register for signal `\DFFC.\Q' using process `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$231'.
  created $adff cell `$procdff$580' with positive edge clock and positive level reset.
Creating register for signal `\DFFPE.\Q' using process `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$229'.
  created $adff cell `$procdff$581' with positive edge clock and positive level reset.
Creating register for signal `\DFFP.\Q' using process `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$227'.
  created $adff cell `$procdff$582' with positive edge clock and positive level reset.
Creating register for signal `\DFFRE.\Q' using process `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$225'.
  created $dff cell `$procdff$583' with positive edge clock.
Creating register for signal `\DFFR.\Q' using process `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$223'.
  created $dff cell `$procdff$584' with positive edge clock.
Creating register for signal `\DFFSE.\Q' using process `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$221'.
  created $dff cell `$procdff$585' with positive edge clock.
Creating register for signal `\DFFS.\Q' using process `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$219'.
  created $dff cell `$procdff$586' with positive edge clock.
Creating register for signal `\DFFE.\Q' using process `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$217'.
  created $dff cell `$procdff$587' with positive edge clock.
Creating register for signal `\DFF.\Q' using process `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:179$215'.
  created $dff cell `$procdff$588' with positive edge clock.
Creating register for signal `\ALU_wrapper.\ACC_o' using process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:161$5'.
  created $adff cell `$procdff$589' with positive edge clock and positive level reset.
Creating register for signal `\ALU_wrapper.\rA' using process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:114$3'.
  created $adff cell `$procdff$590' with positive edge clock and positive level reset.
Creating register for signal `\ALU_wrapper.\rB' using process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:114$3'.
  created $adff cell `$procdff$591' with positive edge clock and positive level reset.
Creating register for signal `\ALU_wrapper.\state' using process `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:49$1'.
  created $adff cell `$procdff$592' with positive edge clock and positive level reset.

4.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$362'.
Found and cleaned up 1 empty switch in `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$317'.
Removing empty process `RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1070$317'.
Removing empty process `RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$304'.
Found and cleaned up 1 empty switch in `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$281'.
Removing empty process `RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1025$281'.
Removing empty process `RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$274'.
Found and cleaned up 1 empty switch in `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$262'.
Removing empty process `RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:987$262'.
Removing empty process `ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:913$257'.
Removing empty process `DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$254'.
Found and cleaned up 1 empty switch in `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$253'.
Removing empty process `DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$253'.
Removing empty process `DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$252'.
Removing empty process `DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$251'.
Removing empty process `DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$250'.
Found and cleaned up 1 empty switch in `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$249'.
Removing empty process `DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$249'.
Removing empty process `DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$248'.
Removing empty process `DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$247'.
Removing empty process `DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$246'.
Found and cleaned up 2 empty switches in `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$245'.
Removing empty process `DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$245'.
Removing empty process `DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$244'.
Found and cleaned up 1 empty switch in `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$243'.
Removing empty process `DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$243'.
Removing empty process `DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$242'.
Found and cleaned up 2 empty switches in `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$241'.
Removing empty process `DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$241'.
Removing empty process `DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$240'.
Found and cleaned up 1 empty switch in `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$239'.
Removing empty process `DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$239'.
Removing empty process `DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$238'.
Found and cleaned up 1 empty switch in `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$237'.
Removing empty process `DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$237'.
Removing empty process `DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$236'.
Removing empty process `DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:366$235'.
Removing empty process `DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$234'.
Found and cleaned up 1 empty switch in `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$233'.
Removing empty process `DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$233'.
Removing empty process `DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$232'.
Removing empty process `DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$231'.
Removing empty process `DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$230'.
Found and cleaned up 1 empty switch in `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$229'.
Removing empty process `DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$229'.
Removing empty process `DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$228'.
Removing empty process `DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$227'.
Removing empty process `DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$226'.
Found and cleaned up 2 empty switches in `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$225'.
Removing empty process `DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$225'.
Removing empty process `DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$224'.
Found and cleaned up 1 empty switch in `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$223'.
Removing empty process `DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$223'.
Removing empty process `DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$222'.
Found and cleaned up 2 empty switches in `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$221'.
Removing empty process `DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$221'.
Removing empty process `DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$220'.
Found and cleaned up 1 empty switch in `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$219'.
Removing empty process `DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$219'.
Removing empty process `DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$218'.
Found and cleaned up 1 empty switch in `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$217'.
Removing empty process `DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$217'.
Removing empty process `DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$216'.
Removing empty process `DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:179$215'.
Removing empty process `ALU8.$proc$../../../source/ALU8.v:87$21'.
Found and cleaned up 1 empty switch in `\ALU8.$proc$../../../source/ALU8.v:67$14'.
Removing empty process `ALU8.$proc$../../../source/ALU8.v:67$14'.
Found and cleaned up 2 empty switches in `\ALU8.$proc$../../../source/ALU8.v:53$10'.
Removing empty process `ALU8.$proc$../../../source/ALU8.v:53$10'.
Found and cleaned up 4 empty switches in `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:161$5'.
Removing empty process `ALU_wrapper.$proc$../../../source/ALU_wrapper.v:161$5'.
Found and cleaned up 2 empty switches in `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:114$3'.
Removing empty process `ALU_wrapper.$proc$../../../source/ALU_wrapper.v:114$3'.
Found and cleaned up 1 empty switch in `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:83$2'.
Removing empty process `ALU_wrapper.$proc$../../../source/ALU_wrapper.v:83$2'.
Found and cleaned up 13 empty switches in `\ALU_wrapper.$proc$../../../source/ALU_wrapper.v:49$1'.
Removing empty process `ALU_wrapper.$proc$../../../source/ALU_wrapper.v:49$1'.
Cleaned up 44 empty switches.

4.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU8.
<suppressed ~2 debug messages>
Optimizing module ALU_wrapper.

4.5. Executing FLATTEN pass (flatten design).
Deleting now unused module ALU8.
<suppressed ~1 debug messages>

4.6. Executing TRIBUF pass.

4.7. Executing DEMINOUT pass (demote inout ports to input or output).

4.8. Executing SYNTH pass.

4.8.1. Executing PROC pass (convert processes to netlists).

4.8.1.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.8.1.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.8.1.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

4.8.1.4. Executing PROC_INIT pass (extract init attributes).

4.8.1.5. Executing PROC_ARST pass (detect async resets in processes).

4.8.1.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

4.8.1.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

4.8.1.8. Executing PROC_DLATCH pass (convert process syncs to latches).

4.8.1.9. Executing PROC_DFF pass (convert process syncs to FFs).

4.8.1.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.8.1.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.8.1.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

4.8.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

4.8.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..
Removed 0 unused cells and 57 unused wires.
<suppressed ~2 debug messages>

4.8.4. Executing CHECK pass (checking for obvious problems).
Checking module ALU_wrapper...
Found and reported 0 problems.

4.8.5. Executing OPT pass (performing simple optimizations).

4.8.5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

4.8.5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

4.8.5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~12 debug messages>

4.8.5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU_wrapper.
Performed a total of 0 changes.

4.8.5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

4.8.5.6. Executing OPT_DFF pass (perform DFF optimizations).

4.8.5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

4.8.5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

4.8.5.9. Rerunning OPT passes. (Maybe there is more to do..)

4.8.5.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

4.8.5.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU_wrapper.
    New ctrl vector for $pmux cell $procmux$515: { $procmux$489_CMP $procmux$501_CMP $procmux$496_CMP $auto$opt_reduce.cc:134:opt_pmux$595 }
  Optimizing cells in module \ALU_wrapper.
Performed a total of 1 changes.

4.8.5.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

4.8.5.13. Executing OPT_DFF pass (perform DFF optimizations).

4.8.5.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..

4.8.5.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

4.8.5.16. Rerunning OPT passes. (Maybe there is more to do..)

4.8.5.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

4.8.5.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU_wrapper.
Performed a total of 0 changes.

4.8.5.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

4.8.5.20. Executing OPT_DFF pass (perform DFF optimizations).

4.8.5.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..

4.8.5.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

4.8.5.23. Finished OPT passes. (There is nothing left to do.)

4.8.6. Executing FSM pass (extract and optimize FSM).

4.8.6.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking ALU_wrapper.state as FSM state register:
    Circuit seems to be self-resetting.

4.8.6.2. Executing FSM_EXTRACT pass (extracting FSM from design).

4.8.6.3. Executing FSM_OPT pass (simple optimizations of FSMs).

4.8.6.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..

4.8.6.5. Executing FSM_OPT pass (simple optimizations of FSMs).

4.8.6.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

4.8.6.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

4.8.6.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

4.8.7. Executing OPT pass (performing simple optimizations).

4.8.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

4.8.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

4.8.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~11 debug messages>

4.8.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU_wrapper.
Performed a total of 0 changes.

4.8.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

4.8.7.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$591 ($adff) from module ALU_wrapper (D = \ABCmd_i, Q = \rB).
Adding EN signal on $procdff$590 ($adff) from module ALU_wrapper (D = \ABCmd_i, Q = \rA).
Adding EN signal on $procdff$589 ($adff) from module ALU_wrapper (D = $0\ACC_o[7:0], Q = \ACC_o).

4.8.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

4.8.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.
<suppressed ~1 debug messages>

4.8.7.9. Rerunning OPT passes. (Maybe there is more to do..)

4.8.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

4.8.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU_wrapper.
Performed a total of 0 changes.

4.8.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

4.8.7.13. Executing OPT_DFF pass (perform DFF optimizations).

4.8.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..

4.8.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

4.8.7.16. Finished OPT passes. (There is nothing left to do.)

4.8.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 3) from port B of cell ALU_wrapper.$procmux$489_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ALU_wrapper.$procmux$501_CMP0 ($eq).
Removed top 1 bits (of 3) from mux cell ALU_wrapper.$procmux$507 ($mux).
Removed top 1 bits (of 3) from mux cell ALU_wrapper.$procmux$510 ($mux).
Removed top 2 bits (of 3) from port B of cell ALU_wrapper.$procmux$547_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell ALU_wrapper.$flatten\u_ALU8.$procmux$467_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell ALU_wrapper.$flatten\u_ALU8.$procmux$459_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell ALU_wrapper.$flatten\u_ALU8.$ternary$../../../source/ALU8.v:48$9 ($mux).
Removed top 1 bits (of 3) from wire ALU_wrapper.$procmux$507_Y.
Removed top 1 bits (of 3) from wire ALU_wrapper.$procmux$510_Y.

4.8.9. Executing PEEPOPT pass (run peephole optimizers).

4.8.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

4.8.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ALU_wrapper:
  creating $macc model for $flatten\u_ALU8.$add$../../../source/ALU8.v:89$22 ($add).
  creating $macc model for $flatten\u_ALU8.$add$../../../source/ALU8.v:89$23 ($add).
  creating $macc model for $flatten\u_ALU8.$add$../../../source/ALU8.v:90$24 ($add).
  creating $macc model for $flatten\u_ALU8.$add$../../../source/ALU8.v:90$25 ($add).
  creating $macc model for $mul$../../../source/ALU_wrapper.v:142$4 ($mul).
  merging $macc model for $flatten\u_ALU8.$add$../../../source/ALU8.v:90$24 into $flatten\u_ALU8.$add$../../../source/ALU8.v:90$25.
  merging $macc model for $flatten\u_ALU8.$add$../../../source/ALU8.v:89$22 into $flatten\u_ALU8.$add$../../../source/ALU8.v:89$23.
  creating $alu model for $macc $flatten\u_ALU8.$add$../../../source/ALU8.v:90$25.
  creating $alu model for $macc $flatten\u_ALU8.$add$../../../source/ALU8.v:89$23.
  creating $macc cell for $mul$../../../source/ALU_wrapper.v:142$4: $auto$alumacc.cc:365:replace_macc$603
  creating $alu model for $flatten\u_ALU8.$ge$../../../source/ALU8.v:77$16 ($ge): new $alu
  creating $alu model for $flatten\u_ALU8.$ge$../../../source/ALU8.v:80$18 ($ge): new $alu
  creating $alu cell for $flatten\u_ALU8.$ge$../../../source/ALU8.v:80$18: $auto$alumacc.cc:485:replace_alu$606
  creating $alu cell for $flatten\u_ALU8.$ge$../../../source/ALU8.v:77$16: $auto$alumacc.cc:485:replace_alu$615
  creating $alu cell for $flatten\u_ALU8.$add$../../../source/ALU8.v:89$23: $auto$alumacc.cc:485:replace_alu$624
  creating $alu cell for $flatten\u_ALU8.$add$../../../source/ALU8.v:90$25: $auto$alumacc.cc:485:replace_alu$627
  created 4 $alu and 1 $macc cells.

4.8.12. Executing SHARE pass (SAT-based resource sharing).

4.8.13. Executing OPT pass (performing simple optimizations).

4.8.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

4.8.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

4.8.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

4.8.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU_wrapper.
Performed a total of 0 changes.

4.8.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

4.8.13.6. Executing OPT_DFF pass (perform DFF optimizations).

4.8.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..
Removed 2 unused cells and 4 unused wires.
<suppressed ~3 debug messages>

4.8.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

4.8.13.9. Rerunning OPT passes. (Maybe there is more to do..)

4.8.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~9 debug messages>

4.8.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU_wrapper.
Performed a total of 0 changes.

4.8.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

4.8.13.13. Executing OPT_DFF pass (perform DFF optimizations).

4.8.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..

4.8.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

4.8.13.16. Finished OPT passes. (There is nothing left to do.)

4.8.14. Executing MEMORY pass.

4.8.14.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

4.8.14.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

4.8.14.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

4.8.14.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

4.8.14.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

4.8.14.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..

4.8.14.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

4.8.14.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

4.8.14.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..

4.8.14.10. Executing MEMORY_COLLECT pass (generating $mem cells).

4.8.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..

4.9. Executing MEMORY_LIBMAP pass (mapping memories to cells).

4.10. Executing TECHMAP pass (map to technology primitives).

4.10.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/lutrams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_LUTRAM_'.
Successfully finished Verilog frontend.

4.10.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_SP_'.
Generating RTLIL representation for module `\$__GOWIN_DP_'.
Generating RTLIL representation for module `\$__GOWIN_SDP_'.
Successfully finished Verilog frontend.

4.10.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

4.11. Executing OPT pass (performing simple optimizations).

4.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.
<suppressed ~9 debug messages>

4.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

4.11.3. Executing OPT_DFF pass (perform DFF optimizations).

4.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..
Removed 4 unused cells and 9 unused wires.
<suppressed ~5 debug messages>

4.11.5. Finished fast OPT passes.

4.12. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

4.13. Executing OPT pass (performing simple optimizations).

4.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

4.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

4.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~5 debug messages>

4.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU_wrapper.
    Consolidated identical input bits for $pmux cell $flatten\u_ALU8.$procmux$464:
      Old ports: A={ 1'0 $flatten\u_ALU8.$or$../../../source/ALU8.v:55$11_Y }, B={ 1'0 $flatten\u_ALU8.$and$../../../source/ALU8.v:56$12_Y 1'0 $flatten\u_ALU8.$xor$../../../source/ALU8.v:57$13_Y 1'0 \rA }, Y=$flatten\u_ALU8.$1\temp_logic[8:0]
      New ports: A=$flatten\u_ALU8.$or$../../../source/ALU8.v:55$11_Y, B={ $flatten\u_ALU8.$and$../../../source/ALU8.v:56$12_Y $flatten\u_ALU8.$xor$../../../source/ALU8.v:57$13_Y \rA }, Y=$flatten\u_ALU8.$1\temp_logic[8:0] [7:0]
      New connections: $flatten\u_ALU8.$1\temp_logic[8:0] [8] = 1'0
    Consolidated identical input bits for $mux cell $procmux$518:
      Old ports: A=3'110, B=3'011, Y=$procmux$518_Y
      New ports: A=2'10, B=2'01, Y={ $procmux$518_Y [2] $procmux$518_Y [0] }
      New connections: $procmux$518_Y [1] = 1'1
    Consolidated identical input bits for $mux cell $procmux$525:
      Old ports: A=3'011, B=3'100, Y=$procmux$525_Y
      New ports: A=2'01, B=2'10, Y={ $procmux$525_Y [2] $procmux$525_Y [0] }
      New connections: $procmux$525_Y [1] = $procmux$525_Y [0]
    Consolidated identical input bits for $mux cell $procmux$532:
      Old ports: A=3'010, B=3'100, Y=$procmux$532_Y
      New ports: A=2'01, B=2'10, Y=$procmux$532_Y [2:1]
      New connections: $procmux$532_Y [0] = 1'0
  Optimizing cells in module \ALU_wrapper.
    Consolidated identical input bits for $mux cell $procmux$521:
      Old ports: A=$procmux$518_Y, B=3'010, Y=$procmux$521_Y
      New ports: A={ $procmux$518_Y [2] $procmux$518_Y [0] }, B=2'00, Y={ $procmux$521_Y [2] $procmux$521_Y [0] }
      New connections: $procmux$521_Y [1] = 1'1
  Optimizing cells in module \ALU_wrapper.
Performed a total of 5 changes.

4.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

4.13.6. Executing OPT_DFF pass (perform DFF optimizations).

4.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

4.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

4.13.9. Rerunning OPT passes. (Maybe there is more to do..)

4.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

4.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU_wrapper.
Performed a total of 0 changes.

4.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

4.13.13. Executing OPT_DFF pass (perform DFF optimizations).

4.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..

4.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

4.13.16. Finished OPT passes. (There is nothing left to do.)

4.14. Executing TECHMAP pass (map to technology primitives).

4.14.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.14.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $not.
Using template $paramod$645fe0cc96ae5edb83bff90cc2c78f4a20ca3e3c\_90_pmux for cells of type $pmux.
Using template $paramod$83dd457849c736323edf2edb15923eb27f99c683\_90_alu for cells of type $alu.
Using template $paramod$7e708ae28ab761f11d0fb59d3ffc72f6a4baf5d9\_90_alu for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add \rA * \rB (8x8 bits, unsigned)
Using extmapper simplemap for cells of type $adffe.
Using template $paramod$d31bf4d7d72e59528d18fbd4f322e9d608532043\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $and.
Using template $paramod$b85fbb3374a1d9ba7ee4f4d6323c30f939df3ada\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000010000 for cells of type $fa.
Using template $paramod$6df0329addda9228fcc2546de2aaf14ad26c98e1\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000010000 for cells of type $lcu.
No more expansions possible.
<suppressed ~801 debug messages>

4.15. Executing OPT pass (performing simple optimizations).

4.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.
<suppressed ~501 debug messages>

4.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
<suppressed ~51 debug messages>
Removed a total of 17 cells.

4.15.3. Executing OPT_DFF pass (perform DFF optimizations).

4.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..
Removed 36 unused cells and 357 unused wires.
<suppressed ~37 debug messages>

4.15.5. Finished fast OPT passes.

4.16. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port ALU_wrapper.ABCmd_i using IBUF.
Mapping port ALU_wrapper.ACC_o using OBUF.
Mapping port ALU_wrapper.Done_o using OBUF.
Mapping port ALU_wrapper.LoadA_i using IBUF.
Mapping port ALU_wrapper.LoadB_i using IBUF.
Mapping port ALU_wrapper.LoadCmd_i using IBUF.
Mapping port ALU_wrapper.clk using IBUF.
Mapping port ALU_wrapper.reset using IBUF.

4.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

4.18. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

4.19. Executing TECHMAP pass (map to technology primitives).

4.19.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.19.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFF_PP1_ for cells of type $_DFF_PP1_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
No more expansions possible.
<suppressed ~50 debug messages>

4.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

4.21. Executing SIMPLEMAP pass (map simple cells to gate primitives).

4.22. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

4.23. Executing ABC9 pass.

4.23.1. Executing ABC9_OPS pass (helper functions for ABC9).

4.23.2. Executing ABC9_OPS pass (helper functions for ABC9).

4.23.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module ALU_wrapper.
Found 0 SCCs.

4.23.4. Executing ABC9_OPS pass (helper functions for ABC9).

4.23.5. Executing PROC pass (convert processes to netlists).

4.23.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.23.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

4.23.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

4.23.5.4. Executing PROC_INIT pass (extract init attributes).

4.23.5.5. Executing PROC_ARST pass (detect async resets in processes).

4.23.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

4.23.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

4.23.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

4.23.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

4.23.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

4.23.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

4.23.5.12. Executing OPT_EXPR pass (perform const folding).

4.23.6. Executing TECHMAP pass (map to technology primitives).

4.23.6.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.23.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~251 debug messages>

4.23.7. Executing OPT pass (performing simple optimizations).

4.23.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module DFFC.
Optimizing module DFFCE.
Optimizing module DFFP.

4.23.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DFFC'.
Finding identical cells in module `\DFFCE'.
Finding identical cells in module `\DFFP'.
Removed a total of 0 cells.

4.23.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \DFFC..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \DFFCE..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \DFFP..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.23.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \DFFC.
  Optimizing cells in module \DFFCE.
  Optimizing cells in module \DFFP.
Performed a total of 0 changes.

4.23.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\DFFC'.
Finding identical cells in module `\DFFCE'.
Finding identical cells in module `\DFFP'.
Removed a total of 0 cells.

4.23.7.6. Executing OPT_DFF pass (perform DFF optimizations).

4.23.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \DFFC..
Finding unused cells or wires in module \DFFCE..
Finding unused cells or wires in module \DFFP..

4.23.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module DFFC.
Optimizing module DFFCE.
Optimizing module DFFP.

4.23.7.9. Finished OPT passes. (There is nothing left to do.)

4.23.8. Executing TECHMAP pass (map to technology primitives).

4.23.8.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

4.23.8.2. Continuing TECHMAP pass.
Using template DFFCE for cells of type DFFCE.
Using template DFFC for cells of type DFFC.
Using template DFFP for cells of type DFFP.
No more expansions possible.
<suppressed ~32 debug messages>

4.23.9. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_model.v' to AST representation.
Replacing existing blackbox module `$__ABC9_DELAY' at /usr/local/bin/../share/yosys/abc9_model.v:2.1-7.10.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Replacing existing blackbox module `$__ABC9_SCC_BREAKER' at /usr/local/bin/../share/yosys/abc9_model.v:9.1-11.10.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Replacing existing module `$__DFF_N__$abc9_flop' at /usr/local/bin/../share/yosys/abc9_model.v:14.1-20.10.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Replacing existing module `$__DFF_P__$abc9_flop' at /usr/local/bin/../share/yosys/abc9_model.v:23.1-29.10.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

4.23.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

4.23.11. Executing ABC9_OPS pass (helper functions for ABC9).

4.23.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

4.23.13. Executing TECHMAP pass (map to technology primitives).

4.23.13.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

4.23.13.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~251 debug messages>

4.23.14. Executing OPT pass (performing simple optimizations).

4.23.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

4.23.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

4.23.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ALU_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

4.23.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ALU_wrapper.
Performed a total of 0 changes.

4.23.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ALU_wrapper'.
Removed a total of 0 cells.

4.23.14.6. Executing OPT_DFF pass (perform DFF optimizations).

4.23.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ALU_wrapper..

4.23.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ALU_wrapper.

4.23.14.9. Finished OPT passes. (There is nothing left to do.)

4.23.15. Executing AIGMAP pass (map logic to AIG).

4.23.16. Executing AIGMAP pass (map logic to AIG).
Module ALU_wrapper: replaced 344 cells with 1985 new cells, skipped 392 cells.
  replaced 3 cell types:
     141 $_OR_
     139 $_XOR_
      64 $_MUX_
  not replaced 11 cell types:
       1 $scopeinfo
      52 $_NOT_
     263 $_AND_
       1 DFFP
       2 DFFC
      24 DFFCE
      13 IBUF
       9 OBUF
       1 DFFP_$abc9_byp
      24 DFFCE_$abc9_byp
       2 DFFC_$abc9_byp

4.23.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

4.23.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

4.23.16.3. Executing XAIGER backend.
<suppressed ~38 debug messages>
Extracted 1013 AND gates and 2427 wires from module `ALU_wrapper' to a netlist network with 62 inputs and 56 outputs.

4.23.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

4.23.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =     62/     56  and =     841  lev =   49 (3.47)  mem = 0.01 MB  box = 27  bb = 27
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =     62/     56  and =     871  lev =   37 (2.85)  mem = 0.01 MB  ch =   59  box = 27  bb = 27
ABC: + &if -W 500 -v 
ABC: K = 8. Memory (bytes): Truth =    0. Cut =   64. Obj =  144. Set =  672. CutMin = no
ABC: Node =     871.  Ch =    55.  Total mem =    0.16 MB. Peak cut mem =    0.04 MB.
ABC: P:  Del = 15046.00.  Ar =    1573.0.  Edge =     1040.  Cut =    14582.  T =     0.00 sec
ABC: P:  Del = 15046.00.  Ar =    1587.0.  Edge =     1043.  Cut =    14633.  T =     0.00 sec
ABC: P:  Del = 15046.00.  Ar =    1299.0.  Edge =     1228.  Cut =    29127.  T =     0.00 sec
ABC: F:  Del = 15003.00.  Ar =     629.0.  Edge =     1039.  Cut =    23008.  T =     0.00 sec
ABC: A:  Del = 15003.00.  Ar =     551.0.  Edge =      944.  Cut =    21794.  T =     0.01 sec
ABC: A:  Del = 15003.00.  Ar =     544.0.  Edge =      930.  Cut =    22655.  T =     0.01 sec
ABC: Total time =     0.03 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =     62/     56  and =    2038  lev =   43 (3.31)  mem = 0.03 MB  box = 27  bb = 27
ABC: Mapping (K=8)  :  lut =    217  edge =     896  lev =    9 (0.91)  levB =   10  mem = 0.01 MB
ABC: LUT = 217 : 2=42 19.4 %  3=38 17.5 %  4=46 21.2 %  5=60 27.6 %  6=14 6.5 %  7=6 2.8 %  8=11 5.1 %  Ave = 4.13
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 0.27 seconds, total: 0.27 seconds

4.23.16.6. Executing AIGER frontend.
<suppressed ~248 debug messages>
Removed 3505 unused cells and 3704 unused wires.

4.23.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:      217
ABC RESULTS:   \DFFP_$abc9_byp cells:        1
ABC RESULTS:   \DFFCE_$abc9_byp cells:       24
ABC RESULTS:   \DFFC_$abc9_byp cells:        2
ABC RESULTS:           input signals:       40
ABC RESULTS:          output signals:       30
Removing temp directory.

4.23.17. Executing TECHMAP pass (map to technology primitives).

4.23.17.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

4.23.17.2. Continuing TECHMAP pass.
Using template DFFCE_$abc9_byp for cells of type DFFCE_$abc9_byp.
Using template DFFC_$abc9_byp for cells of type DFFC_$abc9_byp.
Using template DFFP_$abc9_byp for cells of type DFFP_$abc9_byp.
No more expansions possible.
<suppressed ~35 debug messages>
Removed 10 unused cells and 2778 unused wires.

4.24. Executing TECHMAP pass (map to technology primitives).

4.24.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

4.24.2. Continuing TECHMAP pass.
Using template $paramod$1e68cde23013b810c4d2e218bfc4fe63224d5e20\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$75b3b6b5b766d7477e63bfd7fa528980f75f32fa\$lut for cells of type $lut.
Using template $paramod$94775d1003fd9a8c5868b35a33db1df43efa5b1a\$lut for cells of type $lut.
Using template $paramod$eaea85d27cc0950ed001348e061727a194f5cf9c\$lut for cells of type $lut.
Using template $paramod$21c681aae93c226cfbb227673a4e20ceb48574a6\$lut for cells of type $lut.
Using template $paramod$78e1751931755f088c8bc676bcbc3bb642c26bfc\$lut for cells of type $lut.
Using template $paramod$0e9da079a37ca99a4fcb9b7f941e4fdd02726fae\$lut for cells of type $lut.
Using template $paramod$15461f19a92a8e1d73368fdb8da013c721144871\$lut for cells of type $lut.
Using template $paramod$141a52a36671d47ce0b8b30e0b7a0d8259f76b52\$lut for cells of type $lut.
Using template $paramod$ac1cfb4a5a5e959b4bb8a71fce6c1f5f5e538dde\$lut for cells of type $lut.
Using template $paramod$28d058de54679f828015740822c0b89650557efe\$lut for cells of type $lut.
Using template $paramod$4df93b640e897473abe56cf09cdb72eb251c231c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$46191831d0bdc7667ef0951c9c6ea05af22bf981\$lut for cells of type $lut.
Using template $paramod$2a918c538a315836e7790e3755422b33966a718b\$lut for cells of type $lut.
Using template $paramod$2c67ccf5f40a03b6432e0181849d6af925a4337f\$lut for cells of type $lut.
Using template $paramod$ed7c1e1ec0542954037e3f5218b7168f84efdfa9\$lut for cells of type $lut.
Using template $paramod$4df6fa97f29b2dade0ab2db25ac891e403a39d75\$lut for cells of type $lut.
Using template $paramod$d3f66c085370db20aa5a75862bd74708cd6623cd\$lut for cells of type $lut.
Using template $paramod$3a5e240c0dab257a38a01549ace1360d74f9d49e\$lut for cells of type $lut.
Using template $paramod$a07236b43ce46c94925010a26896e4436da69d2b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$239a649c3c5dcff42e28a38401931acf401ef810\$lut for cells of type $lut.
Using template $paramod$bf0d22492b141397adcabc2e359ee0f860225fa5\$lut for cells of type $lut.
Using template $paramod$21a9cf1c7cffed4ea7970972274e8bcced7c7005\$lut for cells of type $lut.
Using template $paramod$6835ecac1a3649029c9c29f0e7e716f021af995e\$lut for cells of type $lut.
Using template $paramod$abd75201ad02056f10f70712d114afe5ffd8adce\$lut for cells of type $lut.
Using template $paramod$6b5ab31b2e1f9fda181d2c5461f9ed9e8396f683\$lut for cells of type $lut.
Using template $paramod$32e695aadb68b82be722c2e10b13eb450640f777\$lut for cells of type $lut.
Using template $paramod$8bda1f127fa4e8e6a0aed4b4606bbca88d5cdc73\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000110 for cells of type $lut.
Using template $paramod$627570a8a50d4c4339d6d85e3e952bcdc54eef41\$lut for cells of type $lut.
Using template $paramod$fe6221dd427d9814525ec6d3741999a5701a6ac3\$lut for cells of type $lut.
Using template $paramod$8da7abc39347fd77bf6613286358ff0e58fa3871\$lut for cells of type $lut.
Using template $paramod$6c4b9dacfd4371aa22b3a66d7439658875155f3d\$lut for cells of type $lut.
Using template $paramod$d309c420122d35a8f70edfaeeb7908db5137817a\$lut for cells of type $lut.
Using template $paramod$658dd85c1f5fbb5878da3babf5a7a36c08b087bc\$lut for cells of type $lut.
Using template $paramod$00aed87d96b970d49f8d25d91835eab631ceabcd\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100111 for cells of type $lut.
Using template $paramod$338ce46cf7ff44b9974887dd2adee6c4e0530bed\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100011 for cells of type $lut.
Using template $paramod$432f26b811c14bf54c5e87c8670ec65cbcaf38ac\$lut for cells of type $lut.
Using template $paramod$d277b935eaaebbbc08ef3a897d7bce1920c2e65a\$lut for cells of type $lut.
Using template $paramod$70882b2af0e5b8870cb9bce9a0d30275b8da706f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101000 for cells of type $lut.
Using template $paramod$a50d8417db0f3a51891af8670e611f7f89ddeef4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$d89b437f6e04585fb6ec63e66c2a620393b6245e\$lut for cells of type $lut.
Using template $paramod$82682b4cca085e045c1e8d1ab4e5c2ada54b77d7\$lut for cells of type $lut.
Using template $paramod$d4b2195bc4b9f9920cb039e6645b08cd66ac0492\$lut for cells of type $lut.
Using template $paramod$c01d1f1a2c22a23f58c65a92a9c94eaeebcde834\$lut for cells of type $lut.
Using template $paramod$c08e5dedca1f73ccfe3cfa166efa6d8090f53cef\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101001 for cells of type $lut.
Using template $paramod$e9f71582696849081fb79e4580214a5c109ded04\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101011 for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001101 for cells of type $lut.
Using template $paramod$6ab1af087b7cdbbe9fe0b2c8de0775ec05f2311f\$lut for cells of type $lut.
Using template $paramod$33802653dd357dcf403b184a410843f4afbe945a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010111 for cells of type $lut.
Using template $paramod$68c7f28164dce6d260fcf6c8e4993122b5bcce53\$lut for cells of type $lut.
Using template $paramod$ebd246aabe3fa13c087af8e5b7603325ddb0c2ed\$lut for cells of type $lut.
Using template $paramod$3a50020782446af0c3bf6a2dd97c855872fbd50a\$lut for cells of type $lut.
Using template $paramod$092c0da68b4cde141db35eb3b91e2788576b07fe\$lut for cells of type $lut.
Using template $paramod$c34e627cd4d89609e3102ec7a3843de1ea53981f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001000 for cells of type $lut.
Using template $paramod$73a758b5e2f47baaf15091e3afc5edea3945f853\$lut for cells of type $lut.
Using template $paramod$08a5251094e6791f0c6a19a79c33ed46d064f1e7\$lut for cells of type $lut.
Using template $paramod$af2b970363478c934f632261f05f42c59b0d7a99\$lut for cells of type $lut.
Using template $paramod$a0b86751f8d81de56d810c1b13003976f3822b7b\$lut for cells of type $lut.
Using template $paramod$91f08f2d57d93ab359c8cbbd44e8de71febdfa4f\$lut for cells of type $lut.
Using template $paramod$6646de20abdb3bb2f9e6a6eb597813bd86ab3001\$lut for cells of type $lut.
Using template $paramod$9159078607b23ba04fcc26a60c5b49e12a1de92e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$98fd3baf89b6896f3e018e1a628f182d8cf3ea4d\$lut for cells of type $lut.
Using template $paramod$4bf23d45a3e7588698f930a3e47a1038c7a957ee\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010100 for cells of type $lut.
Using template $paramod$1460e4ab74a237aad172a11bbe553b1b52e76bf1\$lut for cells of type $lut.
Using template $paramod$e0286d7bdebdb6346cb367bb1962e01892ba2e32\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$af3a6f6a87a1a99e112439b45648369c9bde6328\$lut for cells of type $lut.
Using template $paramod$b7611934be317f9fa7bbfd9dac8123cc02568748\$lut for cells of type $lut.
Using template $paramod$16459dc2d44f653c326b0e48bbda08f0d51227d1\$lut for cells of type $lut.
Using template $paramod$f1cf40d6afe32714e8c4cd36f4f1f053787cbb35\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$ebf67536873d6a25ea5a81802d39452407181117\$lut for cells of type $lut.
Using template $paramod$5507e85e6887ae9842b821e6740589c69416e76c\$lut for cells of type $lut.
Using template $paramod$d0fe7556ef6223c467da0bfe5c6e9cca5c3fc0e5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110001 for cells of type $lut.
Using template $paramod$ae583e54536c96129b052d3b01c1d776471a8de7\$lut for cells of type $lut.
Using template $paramod$5ee7528b91907f7cfc6ce6a69bbe5683373ea804\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$cf7f3a0cbef28573cfdd7218ef90ef5391ec0286\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001110 for cells of type $lut.
Using template $paramod$f5c97e291c8b48d9f1b4239d871ab7639e5a24ac\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111110 for cells of type $lut.
Using template $paramod$764142a2b8391d0c5c7d42d62fc60b3bb51f0f40\$lut for cells of type $lut.
Using template $paramod$baa9d2fb2d21010939721b85aa9f11effe0b53c4\$lut for cells of type $lut.
Using template $paramod$51cce956e3787a5343180a9fb6ef91d9f3ad5dd8\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110010 for cells of type $lut.
Using template $paramod$1b53a9695a0f80de7517b50863b438fd2b7f56da\$lut for cells of type $lut.
Using template $paramod$23c94ade0ece9745d080cc58c6c3dddeb53c9936\$lut for cells of type $lut.
Using template $paramod$daf7b5384a8474a6eae43be3e357e5b11b0180ab\$lut for cells of type $lut.
Using template $paramod$a5aedce720ba68becb225f05b983da96cb9313be\$lut for cells of type $lut.
Using template $paramod$b2dbe048b4332b3b5716fe8da151d9c2730f8351\$lut for cells of type $lut.
Using template $paramod$98706df86741f6151e6f5b18a040de5d8e4da678\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001001 for cells of type $lut.
Using template $paramod$5e844258580b65b0a61ab2d72f9b312e6dea74e5\$lut for cells of type $lut.
Using template $paramod$722f028300a9cf6791144c2d511569d6e65ee7cf\$lut for cells of type $lut.
Using template $paramod$2b496643a9d147063a8a9514b9acd20e3eb3ede2\$lut for cells of type $lut.
Using template $paramod$d6be80d3e909ac44e80e668cb5422906b1bfeb58\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000010 for cells of type $lut.
Using template $paramod$9fc14cb0ba5120a1da0c687a9fb19472f206fdfe\$lut for cells of type $lut.
Using template $paramod$47d0c3743819073da89d4a3a221750d163f2ef27\$lut for cells of type $lut.
Using template $paramod$0c42aa2d810e617c3a061a5c3b298929baf96983\$lut for cells of type $lut.
Using template $paramod$2ec6422db00d358fc7469efce6208bffbc8521cd\$lut for cells of type $lut.
Using template $paramod$4609d6170df9df51ab903023a98ef7fe930e70d9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011000 for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$03da3dcc7c75ea9c9148a6fc634f76a9d0cbefef\$lut for cells of type $lut.
Using template $paramod$43fdd6c449a2f992b20885794f2c883853d692ad\$lut for cells of type $lut.
Using template $paramod$a2078492a93db2b736e3f44dc8f19641566d846d\$lut for cells of type $lut.
Using template $paramod$43ed4c308a68f320e774e1ce1195f17eeb52abaf\$lut for cells of type $lut.
Using template $paramod$6da36b00000992020b7b7eba5fbe42bbd326035f\$lut for cells of type $lut.
Using template $paramod$91473507f19f2a4d1bdaebcb06c852f9b988f282\$lut for cells of type $lut.
Using template $paramod$a1769518ab7023458db488878a380a7a94ea70cc\$lut for cells of type $lut.
Using template $paramod$3aae5ed580e3aa81b307e94cff26857e4cb0471b\$lut for cells of type $lut.
Using template $paramod$23adc0644788a327b6d04654971339463f38fe45\$lut for cells of type $lut.
Using template $paramod$71a77fdaf447c9c0d28706521b08d0158ddc2dd4\$lut for cells of type $lut.
Using template $paramod$efa5fd23ab14f394f5f0e93a618c47315bc7594a\$lut for cells of type $lut.
Using template $paramod$d7de2a6459c56d811785bb0221e9d25aab083c9a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod$7b678d078b5745f9a7419e372d68c83d6eeda0f3\$lut for cells of type $lut.
Using template $paramod$cf54e60e11158517ca7a063eca3f019f2ded2c6f\$lut for cells of type $lut.
Using template $paramod$e74a4491d340c1bc3f576e3a081eb8d360146ac4\$lut for cells of type $lut.
Using template $paramod$16f8cc29a0c41c95a0af67fc5274473afeafe668\$lut for cells of type $lut.
Using template $paramod$5943bbe2124673d6b71e3f03c5475812ac44cc8d\$lut for cells of type $lut.
Using template $paramod$f6e385c2147f18a5d19d60454132a8b5cea3535f\$lut for cells of type $lut.
Using template $paramod$9664483609d9e726df9697364de1aad825ad3979\$lut for cells of type $lut.
Using template $paramod$3392bf818bb5a037f0e73b009fed64efed169099\$lut for cells of type $lut.
Using template $paramod$c7f5a90999282d10a23966ae817bccb97f4b27dc\$lut for cells of type $lut.
Using template $paramod$e5c37cdd98de73e8bfab8337fd0b13b14f011d68\$lut for cells of type $lut.
Using template $paramod$627aa37abaab6839ccf6cb0f0673a9cad240d463\$lut for cells of type $lut.
Using template $paramod$f1bdf5268949b7a35eadbfacdb53293543d36a3a\$lut for cells of type $lut.
Using template $paramod$7e3b606f081b1ff84f8a55168f10f7474a40ea79\$lut for cells of type $lut.
Using template $paramod$ad22b4b28418f0adaab31e3acdeb2be42406ab8c\$lut for cells of type $lut.
Using template $paramod$42253ec393aa297b297af920a318aa999ce61565\$lut for cells of type $lut.
Using template $paramod$81e6d63550f6c82050b454d39cb4e4ca693c70ff\$lut for cells of type $lut.
Using template $paramod$efe2875e7ae6ab7efb9893bac4bcef4b1e5c9d73\$lut for cells of type $lut.
Using template $paramod$33f9239094b9c7b5cca599c8b771274a49b00385\$lut for cells of type $lut.
Using template $paramod$61bc98ece8c76bffd4acdf40e5f231340cba90fc\$lut for cells of type $lut.
Using template $paramod$e6c03e8b26f5d5f1b2333f7834eeaaa0c1cd8519\$lut for cells of type $lut.
Using template $paramod$e0b192dcf742212c7befd720b774997b20cd9310\$lut for cells of type $lut.
Using template $paramod$17e46d307aa6f91567cfb4dde52a5a06a41f81de\$lut for cells of type $lut.
Using template $paramod$3deb8b0669bd7728c17687ff07ed134fc7ae0478\$lut for cells of type $lut.
Using template $paramod$73d896dd56a06beec25ea39be5d78d77a7deaa28\$lut for cells of type $lut.
Using template $paramod$95d36dc87025f01cb3ffd2b864f0eb98b9d3a05e\$lut for cells of type $lut.
Using template $paramod$ff3b04fc04a5df84a70499147f6a962e56652ac9\$lut for cells of type $lut.
Using template $paramod$65ca986451a70e11046ba5d4d305846973c222d6\$lut for cells of type $lut.
Using template $paramod$7a44d7a29e658f79fded008243c8ec59cc1f7cff\$lut for cells of type $lut.
Using template $paramod$80283a48ee7d087bbd1063af8b303958d2769e2d\$lut for cells of type $lut.
Using template $paramod$623642ae5f00581b6b9ebb0ad586f6e7449fe809\$lut for cells of type $lut.
Using template $paramod$c81968afadd81b17087a85026201b3be754664fb\$lut for cells of type $lut.
Using template $paramod$2e31f4044d7bd0157082c0cf6cd31540e3a6c8be\$lut for cells of type $lut.
Using template $paramod$2966b99191b11b6e8f9eacdf239d2f5e4450a5d2\$lut for cells of type $lut.
Using template $paramod$218a4ef519e1316de284ae2ea2c32325b7105c82\$lut for cells of type $lut.
Using template $paramod$b409c2ef37a512f102fe56cad1a15fbb8f59e72c\$lut for cells of type $lut.
Using template $paramod$5dd7bbe0bd3f3a1ad1e7af2fcab6eb632926860d\$lut for cells of type $lut.
Using template $paramod$3dcc5ead7a37b8b185d32d4f6110ceb451729a0f\$lut for cells of type $lut.
Using template $paramod$1525a7e04fa2e0b8a09e9d3afa8991498ef081d6\$lut for cells of type $lut.
Using template $paramod$6bab67387a8983e69b09f29cb554456d1e93056c\$lut for cells of type $lut.
Using template $paramod$531c6fbd704283c0586f0141710ac30d6e5eabb3\$lut for cells of type $lut.
Using template $paramod$5b8d6cceca54349ac401b8ae2601abba4236805e\$lut for cells of type $lut.
Using template $paramod$0a7ff3266c6d77e83b0922e997312bbd3338dc00\$lut for cells of type $lut.
Using template $paramod$2e1e96ff161a260fac6295b71b685c40f32b4447\$lut for cells of type $lut.
Using template $paramod$c687d1681f8178eea861b957b873c7d0be6e36a6\$lut for cells of type $lut.
Using template $paramod$2789389b49cb3fdd2f3ca80c01c92ac229d872cd\$lut for cells of type $lut.
Using template $paramod$da9d6eb00307d15292e014cd59e5b9098c71b3b1\$lut for cells of type $lut.
Using template $paramod$27a0458214bdac7a2e0c509309bd6e406498a863\$lut for cells of type $lut.
Using template $paramod$7d267d9d58bd47fca3d685c7e615299e5359a418\$lut for cells of type $lut.
Using template $paramod$e3d029cabf2b7c68afa8400b9084ee4ecf1e95b8\$lut for cells of type $lut.
Using template $paramod$7f15b56147fa1f490bcf73068c1c12d747ecb760\$lut for cells of type $lut.
Using template $paramod$8511620ac19936d2cfc7b6c5ad7b35ef8bb8fc70\$lut for cells of type $lut.
Using template $paramod$a95aeb58822b83840ad0d33221e28b316b409b83\$lut for cells of type $lut.
Using template $paramod$cc4ba2deaf9aaf3acbf46e8043adf35b28e8b71a\$lut for cells of type $lut.
Using template $paramod$1988702369d004101daa49bbca08cc4510c07e06\$lut for cells of type $lut.
Using template $paramod$b4c1d615aeb67fd9b6f079f1285642d90fddd129\$lut for cells of type $lut.
Using template $paramod$aff766d51bfd6300c845683283a4e6e3ffed8b12\$lut for cells of type $lut.
Using template $paramod$f4dd353dbf97bdb40e6767d9461856f4e44b196c\$lut for cells of type $lut.
Using template $paramod$16c7e5b275a4bed09dfa984043cb39ff22a6755e\$lut for cells of type $lut.
Using template $paramod$b1ae43a9547b657b39bb61eb1976396cbf9a66e4\$lut for cells of type $lut.
Using template $paramod$36cec4ada12467ddd39ad24666af15254a697aad\$lut for cells of type $lut.
Using template $paramod$a047c63d652edc374f5d1e62a5c0765bc470b0fe\$lut for cells of type $lut.
Using template $paramod$70900fdede1451aed02deaf332ef9132b74ff57d\$lut for cells of type $lut.
Using template $paramod$ed29e7d001a1a28b656ab175cf2b2374213b088e\$lut for cells of type $lut.
Using template $paramod$196e959213b04d7687e4ded97ea7d526c69c8d5a\$lut for cells of type $lut.
Using template $paramod$e732117b7e48e9f8ec8c1dd91718baab668ae2e8\$lut for cells of type $lut.
Using template $paramod$522374e9546d04b3f3dbc84e2b34af010467b241\$lut for cells of type $lut.
Using template $paramod$85e7d7134302c917623146a14cdab0fb3ba63c95\$lut for cells of type $lut.
Using template $paramod$90dfd6f90ef85876701363263dad39cc206130a8\$lut for cells of type $lut.
Using template $paramod$86f29a8ad68fbe34271801f5f4dc9fbee149c4ad\$lut for cells of type $lut.
Using template $paramod$75348e2a2d30fcf2e94569f0d230039a39fc456c\$lut for cells of type $lut.
Using template $paramod$b76724d2153afbf5a3b409393ccff81f27687a13\$lut for cells of type $lut.
Using template $paramod$4a42954d95bf5037927d85cc38d5fb68b1cc68e4\$lut for cells of type $lut.
Using template $paramod$049c4c887717475c8d1f76166d18e5f1647368de\$lut for cells of type $lut.
Using template $paramod$57cdccc0efb2c6cc2839e9431d4f0ebcb35917be\$lut for cells of type $lut.
Using template $paramod$16892adf1fbd6ec3f1aa22cfd7ecb5d38b4dbcac\$lut for cells of type $lut.
Using template $paramod$daa97e4b8aaf5460b9e2444f66a3b9a2871b91af\$lut for cells of type $lut.
Using template $paramod$d42922873c956dbaf758e7ac09241b5bca7e6e95\$lut for cells of type $lut.
Using template $paramod$40f0b1e9bdc9af48cdbd6dba62ec31d8072cbfcf\$lut for cells of type $lut.
Using template $paramod$f7540c3cb2c6674b22acd56c62d0e04695f0f791\$lut for cells of type $lut.
Using template $paramod$71a1847b390c295422fbb2f18e0ec7d2330e9d7d\$lut for cells of type $lut.
Using template $paramod$69d1773a15ef35fe1553c00a68e7b254cd5c8f80\$lut for cells of type $lut.
Using template $paramod$7fc67e7b95fb2356f0319ee92c72350790dac046\$lut for cells of type $lut.
Using template $paramod$55faf693274f54b7031075032b57f35143a78134\$lut for cells of type $lut.
Using template $paramod$f6dba2448f5e10fc9abe7a8fb56233608df62b77\$lut for cells of type $lut.
Using template $paramod$641765d19b07224ee3905d13b3845bf933f6c51d\$lut for cells of type $lut.
Using template $paramod$1785d0ab73a1e768de601d1be765f7d90d0f96f5\$lut for cells of type $lut.
Using template $paramod$1a39f5d89adcfce6658576a40ae008dd1c5d9a20\$lut for cells of type $lut.
Using template $paramod$0919ea193cf7432588c1fba8bd17c933c47ca41e\$lut for cells of type $lut.
Using template $paramod$d5111aac42f4ee580f575d1b8c96983b83b98fda\$lut for cells of type $lut.
Using template $paramod$ffa48eaeb403feed8770458563964188bb5e78d6\$lut for cells of type $lut.
Using template $paramod$95def4fcf53c30a1585a909ac35e222e81523cd9\$lut for cells of type $lut.
Using template $paramod$310ab7c41932eec803eb4e40843bc9649816936c\$lut for cells of type $lut.
Using template $paramod$f2d3248682939c8229ccb049e73aa61f7c752de2\$lut for cells of type $lut.
Using template $paramod$6af023d04780a6b54e8dd53dc6126bcf1a45e79b\$lut for cells of type $lut.
Using template $paramod$2cf1834be60825a90c2bc782fd0db58dd113ff01\$lut for cells of type $lut.
Using template $paramod$059a18b83f440098c69d0c68999bb03d1f1b1ff8\$lut for cells of type $lut.
Using template $paramod$ad19fce210f78af5172b58da5baa39c1d60f3005\$lut for cells of type $lut.
Using template $paramod$4099203d33f9128ee81ba0de84e9ab0d92fe10d0\$lut for cells of type $lut.
Using template $paramod$61b561a9604edd2e90728d80aebd2dd86863dc38\$lut for cells of type $lut.
Using template $paramod$2954cee436c66b733605e5f5280b54a33dbf9fd5\$lut for cells of type $lut.
Using template $paramod$15ed15c002e80338f7ab3f2fd29b5e1f110031a4\$lut for cells of type $lut.
Using template $paramod$75c997e67dded9281f4a06b7758745795691eab4\$lut for cells of type $lut.
Using template $paramod$0a1332b0c912cd11bff4a185c1875f01a34f66ba\$lut for cells of type $lut.
Using template $paramod$a8cb9dc6eccb911035b7155b3fa8bdcdb987b386\$lut for cells of type $lut.
Using template $paramod$c95acd14534a5f8efb5d41c97ef30b04e81e94a8\$lut for cells of type $lut.
Using template $paramod$4fa6b2341de25908d3ef7ed2441777e47b14b13f\$lut for cells of type $lut.
Using template $paramod$d5d3ac77cdff77257e317cafc62e9c54d65c6db4\$lut for cells of type $lut.
Using template $paramod$eff69d40034cc3120cc393cbd03c0fa0f6ce51ba\$lut for cells of type $lut.
Using template $paramod$2fff5c5f384e14b9af8c8eb78ea74b631d0e8276\$lut for cells of type $lut.
Using template $paramod$6a5a4d22ddb060f73ae96e7201d959ca4da8532e\$lut for cells of type $lut.
Using template $paramod$a9262dc0e8d57540d597d2da7a10335ecf90b959\$lut for cells of type $lut.
Using template $paramod$0c132984c796f3b2fe7849d8dbe85456976f8f72\$lut for cells of type $lut.
Using template $paramod$193d4dd05ca4a3ebd34b4c27a65736ea7671a66c\$lut for cells of type $lut.
Using template $paramod$41a25018da41ba3773c643032e300cd7f94f58dc\$lut for cells of type $lut.
Using template $paramod$5351ca4b971474cbfa82057c497ca8e7d6c350ab\$lut for cells of type $lut.
Using template $paramod$a6766e320d89b19a2c01d85f24c777926c5a5c21\$lut for cells of type $lut.
Using template $paramod$4d74be4487efbf070e9f4bf62f62579de2f7e220\$lut for cells of type $lut.
Using template $paramod$b5d8cce52e8ae0e47482581b4d66edec78be5499\$lut for cells of type $lut.
Using template $paramod$3cd14cc2d8f8eb83ad4ebf1aaf8f139650c443b3\$lut for cells of type $lut.
Using template $paramod$805061b344ea1f7399fa94bbeaa6d360d614d5f5\$lut for cells of type $lut.
Using template $paramod$703e358fdbf2c91746d9bc21de63cab5ea5d6e7a\$lut for cells of type $lut.
Using template $paramod$3e0f0a6d022897d10b49a97245d980597513ead6\$lut for cells of type $lut.
Using template $paramod$8bd7995d67c09322929eb14db302d53fb108f84a\$lut for cells of type $lut.
Using template $paramod$c03c49ca5b726ae0fb29982ce99211df1a758051\$lut for cells of type $lut.
Using template $paramod$52680b6ec65479783a92a60edf333d1c763dc805\$lut for cells of type $lut.
Using template $paramod$d524e2880f81075050b0352b313a3943bb6678df\$lut for cells of type $lut.
Using template $paramod$0519f9a247c477858237e3a4aa2c155a5f7b4ac1\$lut for cells of type $lut.
Using template $paramod$6676c0547eb22a65f4cc12deb30e6c6dc986639c\$lut for cells of type $lut.
Using template $paramod$c2bdc04a97c18cd4e7d5eaa676f3260d928c18f1\$lut for cells of type $lut.
Using template $paramod$fbd42e1c1d107a846494f161a3f42051ede46d80\$lut for cells of type $lut.
Using template $paramod$0d6c834c8a3819578a7f1d5d328f4d993b45abbd\$lut for cells of type $lut.
Using template $paramod$88de67c5ae9fc4948c655e906c4146384bd8b6c0\$lut for cells of type $lut.
Using template $paramod$cd13747e8ca827f54a7a00f968e3dc8ab1f4e293\$lut for cells of type $lut.
Using template $paramod$2dd8bf74b508cfd8c389fd262a23b99435eb4d27\$lut for cells of type $lut.
Using template $paramod$3e4c59084f0ebce33c277e53ecdf7642f80632eb\$lut for cells of type $lut.
Using template $paramod$748438a819d2378278dedf872c17da3557f0ef07\$lut for cells of type $lut.
Using template $paramod$fa79ece05b3ebed3a26921bc0fd8b9225eba33c7\$lut for cells of type $lut.
Using template $paramod$0e7d55bf08637f050084cebe2481f653dcf970ea\$lut for cells of type $lut.
Using template $paramod$e11d4286c310fb6ef636f326143e273f6d53a236\$lut for cells of type $lut.
Using template $paramod$877e64ebae47e59ba428c221e91c73c6a9d6f94d\$lut for cells of type $lut.
Using template $paramod$ce88a07e5daedccb83da75f9d59eca961dd56f6e\$lut for cells of type $lut.
Using template $paramod$1df122ebbcaec3f14d3c3be8909e48eac7f00a8d\$lut for cells of type $lut.
Using template $paramod$cb766b7d8e25c08dd1aaffdc8aa94927a9f814fd\$lut for cells of type $lut.
Using template $paramod$5ec223d173981e7c743ff23de69fd65ace76c465\$lut for cells of type $lut.
Using template $paramod$317fa2ce87c0b9d940e969fdd428832dd997c1e5\$lut for cells of type $lut.
Using template $paramod$12d432536ac924a5df77e7b41ac0be697dab966e\$lut for cells of type $lut.
Using template $paramod$a3780eb0de6401f7c8d6c13c1dcf6102374318de\$lut for cells of type $lut.
Using template $paramod$692927e279b3d5c42ee4aacb287247c0b34943ed\$lut for cells of type $lut.
Using template $paramod$dcb62dbb5f56eb9426ae3bf2b5162affe36f732c\$lut for cells of type $lut.
Using template $paramod$47fd42e8cb828bfbee33fd4c5fa4da8cc0f97379\$lut for cells of type $lut.
Using template $paramod$c89957d18d61c8694af02c761040a567dedb2ebe\$lut for cells of type $lut.
Using template $paramod$fa8014b0085f9e6ac6d0514c00d4b9469c3ea158\$lut for cells of type $lut.
Using template $paramod$150934d1cb8b048767119223f60822d78b62791b\$lut for cells of type $lut.
Using template $paramod$1ec2b37b390128eff942245bdaffc234c0d268fb\$lut for cells of type $lut.
Using template $paramod$64f061817d409ca347344c1e61d5550e10625006\$lut for cells of type $lut.
Using template $paramod$59075f0fdd7d3d19bdb95664cde86838e3839ec2\$lut for cells of type $lut.
Using template $paramod$dc902f3f464f6cd0ba4c1df1892d7571bc39f3bd\$lut for cells of type $lut.
Using template $paramod$e8a82fa81ecaa1f6448c9d156396b446d3d3e990\$lut for cells of type $lut.
Using template $paramod$8e0af5c473ddd5583f91f84139a1cb173c515ad8\$lut for cells of type $lut.
Using template $paramod$919c6a1c1ebc593bfb70732d1d7d41ca2bb1db52\$lut for cells of type $lut.
Using template $paramod$e5abf68f51fc8295123c45ff7943b4aa9c779bd2\$lut for cells of type $lut.
Using template $paramod$f152ca5b59301264ef7fc8448842073b33b15cfd\$lut for cells of type $lut.
Using template $paramod$c2366baf791250cc5e62dfc8c5e16e2b4a505e0e\$lut for cells of type $lut.
Using template $paramod$fe2ccc9771c7f3621af3392ea69c0322e13310d4\$lut for cells of type $lut.
Using template $paramod$bf0d0292861bdee659ef5cbc5e58b330ac5871f9\$lut for cells of type $lut.
Using template $paramod$35f754bb6446d01b5018da49fc32053cd630a61e\$lut for cells of type $lut.
Using template $paramod$a652a81bc12bf721decc1c1d219246b1d9209dd8\$lut for cells of type $lut.
Using template $paramod$91a18a116dffbe0a12888801c4e2ac7e27897443\$lut for cells of type $lut.
Using template $paramod$19e6ecf2d26f7751aebd08bd7447d0cdd714033a\$lut for cells of type $lut.
Using template $paramod$835928a1e97be15ba2f6dfbf9ca782cc76824066\$lut for cells of type $lut.
Using template $paramod$77527184588b80c60756c2fd9c8625ef24874d59\$lut for cells of type $lut.
Using template $paramod$a28afa0d6abbf1522ceb46d083e929acf76a504f\$lut for cells of type $lut.
Using template $paramod$ef3157df45507300ca6f9a3271db882b7a8115ef\$lut for cells of type $lut.
Using template $paramod$26c6eee984c99ab7c3bb4a85cab5854f70684cc5\$lut for cells of type $lut.
Using template $paramod$dec6b4c54c08baf387ed52d9ee0bb6c38fbd310b\$lut for cells of type $lut.
Using template $paramod$e23408e1e52394bbed35d1f2d3bbf7668edfb25d\$lut for cells of type $lut.
Using template $paramod$7911430a9d7b49e7f7a6f4f58f8e35b6261a3c0c\$lut for cells of type $lut.
Using template $paramod$01c0c0ab9849bbf74a4065f536cf375b0e2680b0\$lut for cells of type $lut.
Using template $paramod$e0b939323004dc894bac4534831333680f298a8e\$lut for cells of type $lut.
Using template $paramod$8d8494f7cfe36d82d6756ac76b234ef6bcfd0ae3\$lut for cells of type $lut.
Using template $paramod$9c422be1b5a584a89894d6ba2aaf9a7c3665f46f\$lut for cells of type $lut.
Using template $paramod$281fbdd751763d2178cb8e3e95bc1073c0957e08\$lut for cells of type $lut.
Using template $paramod$cb36ef92affcffabd3b3ad7fae7aeed3ade9339d\$lut for cells of type $lut.
Using template $paramod$10354dfc969d8ec8a335946a86c147e9370c81b8\$lut for cells of type $lut.
Using template $paramod$36a43e7b0d7db34d1f3917c8f8e2a9339ae539df\$lut for cells of type $lut.
Using template $paramod$83d221d397e7b2673981c4c9d9e3a73c81d558d1\$lut for cells of type $lut.
Using template $paramod$e044897215a0cff344e1d0c578cdec102c0b644b\$lut for cells of type $lut.
Using template $paramod$28f7d980e2481e680639d8012b77cad0d3827f75\$lut for cells of type $lut.
Using template $paramod$eb89795ec7554bb4199cccd3d12f7ec874c7b5f1\$lut for cells of type $lut.
Using template $paramod$0a2b3b5914dcd335002863722b012502007c4124\$lut for cells of type $lut.
Using template $paramod$168e99822f9ee51a44ac08c845672957d7c94553\$lut for cells of type $lut.
Using template $paramod$0f9175153cfd49f3f50ee29e5b7031574d2b2a30\$lut for cells of type $lut.
Using template $paramod$820e1b438dfe99d41ebe45c6e8c06980921b1e90\$lut for cells of type $lut.
Using template $paramod$fa0c24cd88245c658a35bd16a1d5004a1313b1c0\$lut for cells of type $lut.
Using template $paramod$158ee9589fd156f8bf6d95cd9ebb24387cb768bd\$lut for cells of type $lut.
Using template $paramod$8bd704e201ef1d6e591fde8bbd43602d636e8fd7\$lut for cells of type $lut.
Using template $paramod$04a149ac819ebfe8793fabe24e9fa951a2222ef7\$lut for cells of type $lut.
Using template $paramod$f32c7c6440c44fe212cf73c3a854037595ea8d34\$lut for cells of type $lut.
Using template $paramod$38508ba1a0888ebbff4a399a4f4447ff31dc3a11\$lut for cells of type $lut.
Using template $paramod$ee1ee9cc53f9d26005c7f9d1e1e93d6d8fa11123\$lut for cells of type $lut.
Using template $paramod$7b6dba9da7b24ba15cc91d483adc1cbb42ec924c\$lut for cells of type $lut.
Using template $paramod$e66a51b75889e5014c861732f1b16e1a23cb32cc\$lut for cells of type $lut.
Using template $paramod$21df01f5394f02bf448d29d3dbe99710dcc68b1f\$lut for cells of type $lut.
Using template $paramod$daa90735e7403f682760629caeb5b84faed0cd55\$lut for cells of type $lut.
Using template $paramod$95004e7250e145a5828a4ef0914ab67a182c2cfc\$lut for cells of type $lut.
Using template $paramod$8b5bfaaf6f7aceda149adfd5aa1e028a4d8934ea\$lut for cells of type $lut.
Using template $paramod$7fdb9e53a572a917a166b8b78e0b220e84f9efaf\$lut for cells of type $lut.
Using template $paramod$0d26bd0fa70a7a6eaa7830d7fea755543dfbadad\$lut for cells of type $lut.
Using template $paramod$6c5add53213cf3730cc1fb0846e0e07f3c2e3d75\$lut for cells of type $lut.
Using template $paramod$afade5696f5081321e74ea9f394b3e3e534f26e2\$lut for cells of type $lut.
Using template $paramod$6ce4f1e2c7f7e1dec9af33b6e88801151beb4b9f\$lut for cells of type $lut.
Using template $paramod$584a7b466f18159cd89cf79c09a75a34376950b6\$lut for cells of type $lut.
Using template $paramod$7d52092fe537cc9c7a4c16935ac3dc8b62a7ba40\$lut for cells of type $lut.
Using template $paramod$36b9699375d95650e47cb942956dc8c5b2823107\$lut for cells of type $lut.
Using template $paramod$201b4b5f1787009dba27eca8567fe2b0056279c4\$lut for cells of type $lut.
Using template $paramod$3479964439ca8dc455cbba652932251df2d21766\$lut for cells of type $lut.
Using template $paramod$ecc6222ce6172fbd0e34c0b17961d10b9a6e6508\$lut for cells of type $lut.
Using template $paramod$bd9c5ccb4e8b571f1f7871ba52786ae0a4537314\$lut for cells of type $lut.
Using template $paramod$2fce62c67413630166512ed5ea867e4dc08dc814\$lut for cells of type $lut.
Using template $paramod$7be5ba6537bbd61f594c56628aabac8a2fd8927a\$lut for cells of type $lut.
Using template $paramod$7d866cc5c29c75d6a07cf452e040d7c292d9d225\$lut for cells of type $lut.
Using template $paramod$f0fb56fd249ab3d2c3f26de3600bb1f1eb797f3c\$lut for cells of type $lut.
Using template $paramod$5e817052f0fe3d7aa2d208a5f2304d132e47ccc0\$lut for cells of type $lut.
Using template $paramod$02b90b385c88dd6d6a6fa4b086f8c7755b78e194\$lut for cells of type $lut.
Using template $paramod$04ae10f7d848c17f6abdd4c00ba30939b2cb4eb5\$lut for cells of type $lut.
Using template $paramod$f3681af76a61a5b27cbf7d348fac70653361809d\$lut for cells of type $lut.
Using template $paramod$dd36dd92a9754daf319b2823a15176320acc5f91\$lut for cells of type $lut.
Using template $paramod$7e3c3f63946ced24822e2b211cfd43b0929aca79\$lut for cells of type $lut.
Using template $paramod$2acc56796dae1e7bbd8d34441a24f749523f3d30\$lut for cells of type $lut.
Using template $paramod$5c0c016f416a4897490ea14d32e00a4180d6d196\$lut for cells of type $lut.
Using template $paramod$5532d6060e6154aa22e74cc516debc3dcd54e74d\$lut for cells of type $lut.
Using template $paramod$4a153ce5486584cc54b4e0e2e52691077ed33b83\$lut for cells of type $lut.
Using template $paramod$daa4bbfad51b81d5cab51b4466412c252b5f19b8\$lut for cells of type $lut.
Using template $paramod$4746a60bfc10be9bfa0a4391d6758dbe5fca4cc6\$lut for cells of type $lut.
Using template $paramod$6a4da7ee9a8d1455b23ecfbacf7f1f3eb2e0aa54\$lut for cells of type $lut.
Using template $paramod$42cd32f53dc7e0d3d0a8f98b906d20deb0bee77a\$lut for cells of type $lut.
Using template $paramod$986930afb145af953a55ed3010eb89b53c9a1a83\$lut for cells of type $lut.
Using template $paramod$cc27f620814085e61ebea87b440c1b3f060b5926\$lut for cells of type $lut.
Using template $paramod$97784556c5e57d66bdc6d79b227d182ac917ea60\$lut for cells of type $lut.
Using template $paramod$632b7c096d83a234d788096481a196fd1ec86789\$lut for cells of type $lut.
Using template $paramod$82a2f5a28bf8da7b07afa726dca5691e56b62c1f\$lut for cells of type $lut.
Using template $paramod$311a4ba60a0b5bc9e533b79b30eeac76fa114003\$lut for cells of type $lut.
Using template $paramod$8c903d715aa28711d6b596e6cae5641f6faa2048\$lut for cells of type $lut.
Using template $paramod$8461a38da2644081983cd5b082d7f6c55a8dc5b7\$lut for cells of type $lut.
Using template $paramod$ff724369c5c12baad25cedb6726bbb47b2452d9f\$lut for cells of type $lut.
Using template $paramod$81919cda90ab7ecb2823a99b19199706c4cfb4b7\$lut for cells of type $lut.
Using template $paramod$e125573185f7976bc2f37b0a21b39572c620b3d2\$lut for cells of type $lut.
Using template $paramod$70254aca0f28c83a93cb66f0e523da9be5fe6b9c\$lut for cells of type $lut.
Using template $paramod$711ac778c1095def207218f0d05a35930c12f6de\$lut for cells of type $lut.
Using template $paramod$05ccfad97a8983846f25b8344d038a7b4f80c6da\$lut for cells of type $lut.
Using template $paramod$825bc103cb3450feacadae96b7af0d884bec3428\$lut for cells of type $lut.
Using template $paramod$14c2d2f1db2a6e197fe4a6c5037badc0ee5b661f\$lut for cells of type $lut.
Using template $paramod$f287fc6273f6d713a5dca641106474c5c2a3b96e\$lut for cells of type $lut.
Using template $paramod$99e0639343b0edba4d2cf693a71d101736e3dadc\$lut for cells of type $lut.
Using template $paramod$0e576ce3646eb3102ada867e7d91b41d002cba54\$lut for cells of type $lut.
Using template $paramod$85c381ab7140a4e6c9c98308f5282d3783ac6920\$lut for cells of type $lut.
Using template $paramod$6644d0b63664cdb0b4ad0c4c4a592d6e61763751\$lut for cells of type $lut.
Using template $paramod$dadff75c617cf87bb5b8cfe47ca6c69fb6925370\$lut for cells of type $lut.
Using template $paramod$87bef44dbb3bb76ab30b6afc07979e89ab3ab10c\$lut for cells of type $lut.
Using template $paramod$dc1941da7bf7cd190acc19b5feb9f4a12acb5833\$lut for cells of type $lut.
Using template $paramod$d7d9c4c928b797cef5571b7479864bd8355db491\$lut for cells of type $lut.
Using template $paramod$e2c6e8f3e11205fabc87c38d9b30b795c1c3175c\$lut for cells of type $lut.
Using template $paramod$3b4334bd25a3e9c6777f8ce65e399328493873d3\$lut for cells of type $lut.
Using template $paramod$f12f5c320f33b032a5d8e9643b181e1c187aab62\$lut for cells of type $lut.
Using template $paramod$2a6c2a8739f93da34996afef3b645394b8a92221\$lut for cells of type $lut.
Using template $paramod$a4bd0bcd77c9d43395e47b4c27e6d1ac69f0a5ad\$lut for cells of type $lut.
Using template $paramod$db6b1d04b6d95bb843274e9ec5314d0ee20e7256\$lut for cells of type $lut.
Using template $paramod$8e7f4d4ed756f4811a3508507d4f415d009fa256\$lut for cells of type $lut.
Using template $paramod$2cae86d326c3ef9046cf9d9cfd5f93ce988c5d0c\$lut for cells of type $lut.
Using template $paramod$3c60505cfd30c0f9d3250a40b421b7dd7c960665\$lut for cells of type $lut.
Using template $paramod$15af3599dd38163c2e1dcdf5e10c1253fd138877\$lut for cells of type $lut.
Using template $paramod$1b0b9e599614b8748fd7e5d0540215710ebdeb1e\$lut for cells of type $lut.
Using template $paramod$45eb78c3bc673ab109ddf72c678338f3cf061cf3\$lut for cells of type $lut.
Using template $paramod$6336977525d90785d9a71e78184e73ffcb9a9c7e\$lut for cells of type $lut.
Using template $paramod$99fc4625a920738e2036fe603a29484a13ba165a\$lut for cells of type $lut.
Using template $paramod$c17ee2797c72ce4d236921f02d1d813d39436849\$lut for cells of type $lut.
Using template $paramod$713a2d7a6559d51c15a321a5f845ced054ef9a43\$lut for cells of type $lut.
Using template $paramod$9bd00bdc37d2f460349d0063c85c4ddf70bfe951\$lut for cells of type $lut.
Using template $paramod$8cfe86fcacc3489c007dfb4d7d3def3322313e2b\$lut for cells of type $lut.
Using template $paramod$73a21a445e94971037205d49d4e2f1d052865f55\$lut for cells of type $lut.
Using template $paramod$591ea5455ba7451436d1caf19e0682ccb5602624\$lut for cells of type $lut.
Using template $paramod$8917450ddb884d3f5bb39d17ba87dde0e012f2af\$lut for cells of type $lut.
Using template $paramod$d335c7267dfdb02bbcb8e3e6a04f8c855fa8d7c2\$lut for cells of type $lut.
Using template $paramod$e7618568755e3bf4e2c64dede73757fc82b84743\$lut for cells of type $lut.
Using template $paramod$e3c677f6b4c7891f01cb477ae57dab25b7b7bc1f\$lut for cells of type $lut.
Using template $paramod$0991ac300cb749cfe95c14c855fc1b909e2ddd24\$lut for cells of type $lut.
Using template $paramod$41aa8a4bea9bf9fb2e2d3dd27b240cb1c06ebaf0\$lut for cells of type $lut.
Using template $paramod$626707b1a4b9e7bd2355faaa37fa9ff185e19277\$lut for cells of type $lut.
Using template $paramod$51a72b3c97628a3868b6745bc8baebb6552a1cd9\$lut for cells of type $lut.
Using template $paramod$6daaf194686adbeaa92c9a1cab6c22f91c992a0c\$lut for cells of type $lut.
Using template $paramod$f4578f1b549826695233d370b7df652b0a0ce8ae\$lut for cells of type $lut.
Using template $paramod$40614bc945b57aab95fbc31af093a3fc79ada1f6\$lut for cells of type $lut.
Using template $paramod$4d135227c001b0fd4217b3033f10f5c65d228efa\$lut for cells of type $lut.
Using template $paramod$a503fc015f49b77afd0eb87085329da6ac0231b6\$lut for cells of type $lut.
Using template $paramod$7042d6206706a291af7626d2b8656dd3c87c92a2\$lut for cells of type $lut.
Using template $paramod$2a31049b5c2b5e8436c3c7967b99d1af8e209131\$lut for cells of type $lut.
Using template $paramod$ddd4d546aff570a02152f377983f90a8c5fe9c1d\$lut for cells of type $lut.
Using template $paramod$32da94e930967cea74de5c439b0420b03dd5d46c\$lut for cells of type $lut.
Using template $paramod$1cc4ead1be7d20343e835592d0565bc12283c933\$lut for cells of type $lut.
Using template $paramod$f2e4c82f7516f03ac7a4eab3aa23e5c3fb944e64\$lut for cells of type $lut.
Using template $paramod$0b7d81ff28efc2f21972b5968fb42f63121403ef\$lut for cells of type $lut.
Using template $paramod$3a32a7587b9f95b908af04fb9b75cd3eae00b58e\$lut for cells of type $lut.
Using template $paramod$fe837ea97078e22067b9788841ffbd7e90c65bd5\$lut for cells of type $lut.
Using template $paramod$d8fa270f64ca5c2e2296dc4f613aedb5b3fe2ca0\$lut for cells of type $lut.
Using template $paramod$e3af6b6d2bcb9a1cf6dc3f4a7c1ab0cb67b99995\$lut for cells of type $lut.
Using template $paramod$2f6e960aae4aea19fb536fb0ff6d962ec56f57c0\$lut for cells of type $lut.
Using template $paramod$45b781be2d3e3c12da03451bf43ad36bf1ed767b\$lut for cells of type $lut.
Using template $paramod$3bf791ce19ab1fce0f203fc6f34ead3782af50f0\$lut for cells of type $lut.
Using template $paramod$ee6682f13f4058ad3f1adfcfc64fc4b737208600\$lut for cells of type $lut.
Using template $paramod$cb6fea417751c5b86f96a40e2bd22e414bc89f54\$lut for cells of type $lut.
Using template $paramod$ede761341368efd53bcaebaec83bbf67ed9dec7f\$lut for cells of type $lut.
Using template $paramod$eede1ed487fa9fd2add80d7b04453e72c83cee7d\$lut for cells of type $lut.
Using template $paramod$2661aa2601af93e362041e04a59405a491f36855\$lut for cells of type $lut.
Using template $paramod$cb8c3d2ea5f8b62a34d8a8a27958e2e6e248662b\$lut for cells of type $lut.
Using template $paramod$d8ce67cd4489b02c4ed7256c47f4a3db429cd3eb\$lut for cells of type $lut.
Using template $paramod$c9b0cb09c33ccf71585730a98a31f5e97322f91d\$lut for cells of type $lut.
Using template $paramod$fa4f2acdba28ce6eb73b71febb064127b6642dfa\$lut for cells of type $lut.
Using template $paramod$1f3d9e41b8852a046a8964629407ac2a74581a71\$lut for cells of type $lut.
Using template $paramod$07c3b0842731b4306af4df7c27e16d01e1bc3512\$lut for cells of type $lut.
Using template $paramod$64892fa03b94e3b43f3ace48226dbcde5907812b\$lut for cells of type $lut.
Using template $paramod$2161d456ba9e79e15fc162ee6a6f279543b27d9d\$lut for cells of type $lut.
Using template $paramod$9426338acd384bec95a262bf99fc688ef895ae1a\$lut for cells of type $lut.
Using template $paramod$d0a770e4418cc1bd55c5894d620cd74c1d6344a1\$lut for cells of type $lut.
Using template $paramod$880c782886878e8ac1f3024bfed253d001984ba3\$lut for cells of type $lut.
Using template $paramod$e318ba82bf70d1dd671a0b7b30b9019adeba484a\$lut for cells of type $lut.
Using template $paramod$7c2a7b4c4bf5a57c40bc7d720fe80707cf889245\$lut for cells of type $lut.
Using template $paramod$11192f8580ce45e22f036ff8ed0811eeca390bae\$lut for cells of type $lut.
Using template $paramod$41830bd53c6ed5b0cde14be5b7e6874ea2d99b98\$lut for cells of type $lut.
Using template $paramod$1987f59cf217be80abbc97df201045b2769abf5a\$lut for cells of type $lut.
Using template $paramod$52512c8d4014892951d04c4e1d4a5c48ad035474\$lut for cells of type $lut.
Using template $paramod$cc6f168b93470fcc711df6312603d46c5e4b0e07\$lut for cells of type $lut.
Using template $paramod$0103e8148786bdf29f52c01b5d8da40a7dd32d70\$lut for cells of type $lut.
Using template $paramod$6901d2fe6a8425bb9609cebf303ef3b15353816e\$lut for cells of type $lut.
Using template $paramod$db9f5d954a2ce752681ed35164ad2fb539e1c77f\$lut for cells of type $lut.
Using template $paramod$129a1510f764e92eec8ff5a2d36db65c5c75d2b8\$lut for cells of type $lut.
Using template $paramod$6180c0076fd7fc899077f833212f7fa4966918da\$lut for cells of type $lut.
Using template $paramod$82a48e5f5771a531ca9edba4cc6af5165f5035d5\$lut for cells of type $lut.
Using template $paramod$660652b12fae3f1568969ea0b99c36a53ee0fe09\$lut for cells of type $lut.
Using template $paramod$f85e8fbacd8940b8ab4dec83e7428377d2851a3d\$lut for cells of type $lut.
Using template $paramod$1e52e1bfec68dbc62cff1536e5e456e4e983f97b\$lut for cells of type $lut.
Using template $paramod$1b44db9f919312d71432a1a9407e98bcfdccbb63\$lut for cells of type $lut.
Using template $paramod$71a96c621bf23b139038ce199a04f47b853774b7\$lut for cells of type $lut.
Using template $paramod$0370933cb498c689040b3aa0bfb4ab66aa41e69e\$lut for cells of type $lut.
Using template $paramod$16863281a9301e30ffd8706341550763fea6fed9\$lut for cells of type $lut.
Using template $paramod$89f2662fe342bcad858018cd787a07f0b1711711\$lut for cells of type $lut.
Using template $paramod$f23a4e39b971de25cac8bf6ae6e0fe64b2dcfa34\$lut for cells of type $lut.
Using template $paramod$ccd6f92787999b2e69a0d06087e99ff863bad1ba\$lut for cells of type $lut.
Using template $paramod$bdb9257695609aba3f93d4bfd52c7b7ad476da8c\$lut for cells of type $lut.
Using template $paramod$e6197a5e543ebf944598378b59598d3f9f1b57f8\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~7228 debug messages>

4.25. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in ALU_wrapper.
  Optimizing lut $abc$6677$lut$aiger6676$659.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$659.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$553.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$502.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$502.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$502.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$502.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1705.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6677$lut$aiger6676$1705.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1559.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1559.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$487.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1559.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1559.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1705.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1688.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$758.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1385.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1688.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$842.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1385.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1705.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1115.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6677$lut$aiger6676$1385.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1385.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$502.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$659.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1705.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1559.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1115.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6677$lut$aiger6676$1385.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$659.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$319.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1115.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6677$lut$aiger6676$1385.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1559.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$842.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1559.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$842.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1688.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1705.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$179.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$179.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1385.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6677$lut$aiger6676$179.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$659.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$179.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1559.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$722.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6677$lut$aiger6676$179.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$842.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1705.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$722.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6677$lut$aiger6676$383.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$722.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6677$lut$aiger6676$179.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$402.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$487.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1705.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$842.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1705.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1385.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$179.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1115.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$6677$lut$aiger6676$1115.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6677$lut$aiger6676$1385.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1385.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$2040.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1559.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1559.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1385.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$487.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$842.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$722.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$722.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1705.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$798.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1115.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$502.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$502.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$758.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$758.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1385.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$866.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$487.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$502.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$502.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$553.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$553.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$553.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$565.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$487.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1115.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6677$lut$aiger6676$502.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$502.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1257.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$383.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$722.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1115.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$257.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$179.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$936.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$967.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1291.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1115.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1559.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$487.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1115.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1087.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$179.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1559.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1705.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$257.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$402.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1559.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$798.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1550:reintegrate$6684.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1705.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$179.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1079.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1352.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1705.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$581.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$553.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$502.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$418.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$866.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$758.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$601.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1115.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1022.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1014.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$112.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1038.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1055.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1064.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1705.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1095.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1069.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1125.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1257.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$257.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1241.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1291.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1376.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1360.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1385.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6677$lut$aiger6676$1395.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1475.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1420.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1440.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1939.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1511.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1966.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1559.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1580.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1564.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1705.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$487.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$487.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1705.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6677$lut$aiger6676$842.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1115.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$2040.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$1529.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$2040.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$2058.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1550:reintegrate$6679.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1385.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1550:reintegrate$6678.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$319.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$402.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$1241.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$659.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$383.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$6677$lut$aiger6676$319.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$1115.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$6677$lut$aiger6676$936.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$6677$lut$aiger6676$842.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$967.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1550:reintegrate$6678.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$6677$lut$aiger6676$2122.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1550:reintegrate$6678.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1550:reintegrate$6685.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1550:reintegrate$6683.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1550:reintegrate$6682.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)

4.26. Executing SETUNDEF pass (replace undef values with defined constants).

4.27. Executing HILOMAP pass (mapping to constant drivers).
Removed 1 unused cells and 1804 unused wires.

4.28. Executing AUTONAME pass.
Renamed 27416 objects in module ALU_wrapper (128 iterations).
<suppressed ~1602 debug messages>

4.29. Executing HIERARCHY pass (managing design hierarchy).

4.29.1. Analyzing design hierarchy..
Top module:  \ALU_wrapper

4.29.2. Analyzing design hierarchy..
Top module:  \ALU_wrapper
Removed 0 unused modules.

4.30. Printing statistics.

=== ALU_wrapper ===

   Number of wires:                736
   Number of wire bits:           1141
   Number of public wires:         736
   Number of public wire bits:    1141
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                886
     $scopeinfo                      1
     DFFC                            2
     DFFCE                          24
     DFFP                            1
     GND                             1
     IBUF                           13
     LUT1                           90
     LUT2                           86
     LUT3                           90
     LUT4                          260
     MUX2_LUT5                     200
     MUX2_LUT6                      70
     MUX2_LUT7                      28
     MUX2_LUT8                      11
     OBUF                            9

4.31. Executing CHECK pass (checking for obvious problems).
Checking module ALU_wrapper...
Found and reported 0 problems.

5. Executing Verilog backend.

5.1. Executing BMUXMAP pass.

5.2. Executing DEMUXMAP pass.
Dumping module `\ALU_wrapper'.

6. Printing statistics.

=== ALU_wrapper ===

   Number of wires:                736
   Number of wire bits:           1141
   Number of public wires:         736
   Number of public wire bits:    1141
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                886
     $scopeinfo                      1
     DFFC                            2
     DFFCE                          24
     DFFP                            1
     GND                             1
     IBUF                           13
     LUT1                           90
     LUT2                           86
     LUT3                           90
     LUT4                          260
     MUX2_LUT5                     200
     MUX2_LUT6                      70
     MUX2_LUT7                      28
     MUX2_LUT8                      11
     OBUF                            9

End of script. Logfile hash: e6505bd2b8, CPU: user 0.97s system 0.08s, MEM: 97.38 MB peak
Yosys 0.38+88 (git sha1 38f1b0b12, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 30% 8x techmap (0 sec), 22% 1x abc9_exe (0 sec), ...
