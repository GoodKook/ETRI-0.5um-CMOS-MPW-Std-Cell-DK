
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2025  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.50+56 (git sha1 176131b50, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)

-- Executing script file `test_wrapper.ys' --

1. Executing Verilog-2005 frontend: ../../../test_wrapper.v
Parsing Verilog input from `../../../test_wrapper.v' to AST representation.
Generating RTLIL representation for module `\test_wrapper'.
Warning: Replacing memory \vectOut with list of registers. See ../../../test_wrapper.v:78
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: ../../../../source/test.v
Parsing SystemVerilog input from `../../../../source/test.v' to AST representation.
Generating RTLIL representation for module `\test'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../../../../source/test_flow_control_loop_delay_pipe.v
Parsing SystemVerilog input from `../../../../source/test_flow_control_loop_delay_pipe.v' to AST representation.
Generating RTLIL representation for module `\test_flow_control_loop_delay_pipe'.
Successfully finished Verilog frontend.

4. Executing HIERARCHY pass (managing design hierarchy).

4.1. Analyzing design hierarchy..
Top module:  \test_wrapper
Used module:     \test
Used module:         \test_flow_control_loop_delay_pipe

4.2. Analyzing design hierarchy..
Top module:  \test_wrapper
Used module:     \test
Used module:         \test_flow_control_loop_delay_pipe
Removed 0 unused modules.

5. Executing SYNTH_GOWIN pass.

5.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\__APICULA_LUT5'.
Generating RTLIL representation for module `\__APICULA_LUT6'.
Generating RTLIL representation for module `\__APICULA_LUT7'.
Generating RTLIL representation for module `\__APICULA_LUT8'.
Generating RTLIL representation for module `\MUX2'.
Generating RTLIL representation for module `\MUX2_LUT5'.
Generating RTLIL representation for module `\MUX2_LUT6'.
Generating RTLIL representation for module `\MUX2_LUT7'.
Generating RTLIL representation for module `\MUX2_LUT8'.
Generating RTLIL representation for module `\DFF'.
Generating RTLIL representation for module `\DFFE'.
Generating RTLIL representation for module `\DFFS'.
Generating RTLIL representation for module `\DFFSE'.
Generating RTLIL representation for module `\DFFR'.
Generating RTLIL representation for module `\DFFRE'.
Generating RTLIL representation for module `\DFFP'.
Generating RTLIL representation for module `\DFFPE'.
Generating RTLIL representation for module `\DFFC'.
Generating RTLIL representation for module `\DFFCE'.
Generating RTLIL representation for module `\DFFN'.
Generating RTLIL representation for module `\DFFNE'.
Generating RTLIL representation for module `\DFFNS'.
Generating RTLIL representation for module `\DFFNSE'.
Generating RTLIL representation for module `\DFFNR'.
Generating RTLIL representation for module `\DFFNRE'.
Generating RTLIL representation for module `\DFFNP'.
Generating RTLIL representation for module `\DFFNPE'.
Generating RTLIL representation for module `\DFFNC'.
Generating RTLIL representation for module `\DFFNCE'.
Generating RTLIL representation for module `\VCC'.
Generating RTLIL representation for module `\GND'.
Generating RTLIL representation for module `\IBUF'.
Generating RTLIL representation for module `\OBUF'.
Generating RTLIL representation for module `\TBUF'.
Generating RTLIL representation for module `\IOBUF'.
Generating RTLIL representation for module `\ELVDS_OBUF'.
Generating RTLIL representation for module `\TLVDS_OBUF'.
Generating RTLIL representation for module `\OSER4'.
Generating RTLIL representation for module `\OSER4_MEM'.
Generating RTLIL representation for module `\OSER8'.
Generating RTLIL representation for module `\OSER10'.
Generating RTLIL representation for module `\OVIDEO'.
Generating RTLIL representation for module `\OSER16'.
Generating RTLIL representation for module `\IDES4'.
Generating RTLIL representation for module `\IDES4_MEM'.
Generating RTLIL representation for module `\IDES8'.
Generating RTLIL representation for module `\IDES10'.
Generating RTLIL representation for module `\IVIDEO'.
Generating RTLIL representation for module `\IDES16'.
Generating RTLIL representation for module `\IDDR'.
Generating RTLIL representation for module `\IDDRC'.
Generating RTLIL representation for module `\DQS'.
Generating RTLIL representation for module `\ODDR'.
Generating RTLIL representation for module `\ODDRC'.
Generating RTLIL representation for module `\GSR'.
Generating RTLIL representation for module `\BANDGAP'.
Generating RTLIL representation for module `\ALU'.
Generating RTLIL representation for module `\RAM16S1'.
Generating RTLIL representation for module `\RAM16S2'.
Generating RTLIL representation for module `\RAM16S4'.
Generating RTLIL representation for module `\RAM16SDP1'.
Generating RTLIL representation for module `\RAM16SDP2'.
Generating RTLIL representation for module `\RAM16SDP4'.
Generating RTLIL representation for module `\SP'.
Generating RTLIL representation for module `\SPX9'.
Generating RTLIL representation for module `\SDP'.
Generating RTLIL representation for module `\SDPX9'.
Generating RTLIL representation for module `\DP'.
Generating RTLIL representation for module `\DPX9'.
Generating RTLIL representation for module `\rPLL'.
Generating RTLIL representation for module `\PLLVR'.
Generating RTLIL representation for module `\OSC'.
Generating RTLIL representation for module `\OSCZ'.
Generating RTLIL representation for module `\OSCF'.
Generating RTLIL representation for module `\OSCH'.
Generating RTLIL representation for module `\OSCW'.
Generating RTLIL representation for module `\OSCO'.
Generating RTLIL representation for module `\DCS'.
Generating RTLIL representation for module `\EMCU'.
Successfully finished Verilog frontend.

5.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_xtra_gw1n.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_xtra_gw1n.v' to AST representation.
Generating RTLIL representation for module `\MUX2_MUX8'.
Generating RTLIL representation for module `\MUX2_MUX16'.
Generating RTLIL representation for module `\MUX2_MUX32'.
Generating RTLIL representation for module `\MUX4'.
Generating RTLIL representation for module `\MUX8'.
Generating RTLIL representation for module `\MUX16'.
Generating RTLIL representation for module `\MUX32'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\LUT7'.
Generating RTLIL representation for module `\LUT8'.
Generating RTLIL representation for module `\DL'.
Generating RTLIL representation for module `\DLE'.
Generating RTLIL representation for module `\DLC'.
Generating RTLIL representation for module `\DLCE'.
Generating RTLIL representation for module `\DLP'.
Generating RTLIL representation for module `\DLPE'.
Generating RTLIL representation for module `\DLN'.
Generating RTLIL representation for module `\DLNE'.
Generating RTLIL representation for module `\DLNC'.
Generating RTLIL representation for module `\DLNCE'.
Generating RTLIL representation for module `\DLNP'.
Generating RTLIL representation for module `\DLNPE'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\IODELAY'.
Generating RTLIL representation for module `\IEM'.
Generating RTLIL representation for module `\ROM16'.
Generating RTLIL representation for module `\ROM'.
Generating RTLIL representation for module `\ROMX9'.
Generating RTLIL representation for module `\rSDP'.
Generating RTLIL representation for module `\rSDPX9'.
Generating RTLIL representation for module `\rROM'.
Generating RTLIL representation for module `\rROMX9'.
Generating RTLIL representation for module `\pROM'.
Generating RTLIL representation for module `\pROMX9'.
Generating RTLIL representation for module `\SDPB'.
Generating RTLIL representation for module `\SDPX9B'.
Generating RTLIL representation for module `\DPB'.
Generating RTLIL representation for module `\DPX9B'.
Generating RTLIL representation for module `\PADD18'.
Generating RTLIL representation for module `\PADD9'.
Generating RTLIL representation for module `\MULT9X9'.
Generating RTLIL representation for module `\MULT18X18'.
Generating RTLIL representation for module `\MULT36X36'.
Generating RTLIL representation for module `\MULTALU36X18'.
Generating RTLIL representation for module `\MULTADDALU18X18'.
Generating RTLIL representation for module `\MULTALU18X18'.
Generating RTLIL representation for module `\ALU54D'.
Generating RTLIL representation for module `\BUFG'.
Generating RTLIL representation for module `\BUFS'.
Generating RTLIL representation for module `\PLL'.
Generating RTLIL representation for module `\TLVDS_IBUF'.
Generating RTLIL representation for module `\TLVDS_TBUF'.
Generating RTLIL representation for module `\TLVDS_IOBUF'.
Generating RTLIL representation for module `\ELVDS_IBUF'.
Generating RTLIL representation for module `\ELVDS_TBUF'.
Generating RTLIL representation for module `\ELVDS_IOBUF'.
Generating RTLIL representation for module `\MIPI_IBUF'.
Generating RTLIL representation for module `\MIPI_IBUF_HS'.
Generating RTLIL representation for module `\MIPI_IBUF_LP'.
Generating RTLIL representation for module `\MIPI_OBUF'.
Generating RTLIL representation for module `\MIPI_OBUF_A'.
Generating RTLIL representation for module `\ELVDS_IBUF_MIPI'.
Generating RTLIL representation for module `\I3C_IOBUF'.
Generating RTLIL representation for module `\TLVDS_OEN_BK'.
Generating RTLIL representation for module `\CLKDIV'.
Generating RTLIL representation for module `\DHCEN'.
Generating RTLIL representation for module `\DLL'.
Generating RTLIL representation for module `\DLLDLY'.
Generating RTLIL representation for module `\FLASH96K'.
Generating RTLIL representation for module `\FLASH256K'.
Generating RTLIL representation for module `\FLASH608K'.
Generating RTLIL representation for module `\DQCE'.
Generating RTLIL representation for module `\CLKDIV2'.
Generating RTLIL representation for module `\DCC'.
Generating RTLIL representation for module `\DHCENC'.
Generating RTLIL representation for module `\FLASH64K'.
Generating RTLIL representation for module `\FLASH64KZ'.
Generating RTLIL representation for module `\I3C'.
Generating RTLIL representation for module `\IODELAYA'.
Generating RTLIL representation for module `\IODELAYC'.
Generating RTLIL representation for module `\SPMI'.
Generating RTLIL representation for module `\IODELAYB'.
Generating RTLIL representation for module `\PLLO'.
Generating RTLIL representation for module `\DCCG'.
Generating RTLIL representation for module `\FLASH96KA'.
Generating RTLIL representation for module `\MIPI_DPHY_RX'.
Generating RTLIL representation for module `\CLKDIVG'.
Generating RTLIL representation for module `\PWRGRD'.
Successfully finished Verilog frontend.

5.3. Executing HIERARCHY pass (managing design hierarchy).

5.3.1. Analyzing design hierarchy..
Top module:  \test_wrapper
Used module:     \test
Used module:         \test_flow_control_loop_delay_pipe

5.3.2. Analyzing design hierarchy..
Top module:  \test_wrapper
Used module:     \test
Used module:         \test_flow_control_loop_delay_pipe
Removed 0 unused modules.

5.4. Executing PROC pass (convert processes to netlists).

5.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:969$371'.
Cleaned up 1 empty switch.

5.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$431 in module RAM16S4.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$395 in module RAM16S2.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1043$376 in module RAM16S1.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$367 in module DFFNCE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$365 in module DFFNC.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$363 in module DFFNPE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$361 in module DFFNP.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$359 in module DFFNRE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$357 in module DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$355 in module DFFNSE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$353 in module DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$347 in module DFFCE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$345 in module DFFC.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$343 in module DFFPE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$341 in module DFFP.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$339 in module DFFRE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$337 in module DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$335 in module DFFSE.
Marked 1 switch rules as full_case in process $proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$333 in module DFFS.
Marked 1 switch rules as full_case in process $proc$../../../../source/test_flow_control_loop_delay_pipe.v:96$141 in module test_flow_control_loop_delay_pipe.
Marked 2 switch rules as full_case in process $proc$../../../../source/test_flow_control_loop_delay_pipe.v:86$131 in module test_flow_control_loop_delay_pipe.
Marked 2 switch rules as full_case in process $proc$../../../../source/test_flow_control_loop_delay_pipe.v:75$127 in module test_flow_control_loop_delay_pipe.
Marked 1 switch rules as full_case in process $proc$../../../../source/test.v:230$114 in module test.
Marked 1 switch rules as full_case in process $proc$../../../../source/test.v:222$106 in module test.
Marked 1 switch rules as full_case in process $proc$../../../../source/test.v:214$100 in module test.
Marked 1 switch rules as full_case in process $proc$../../../../source/test.v:206$94 in module test.
Marked 1 switch rules as full_case in process $proc$../../../../source/test.v:198$90 in module test.
Marked 1 switch rules as full_case in process $proc$../../../../source/test.v:190$84 in module test.
Marked 1 switch rules as full_case in process $proc$../../../../source/test.v:182$78 in module test.
Marked 1 switch rules as full_case in process $proc$../../../../source/test.v:174$70 in module test.
Marked 1 switch rules as full_case in process $proc$../../../../source/test.v:166$64 in module test.
Marked 1 switch rules as full_case in process $proc$../../../../source/test.v:144$50 in module test.
Marked 1 switch rules as full_case in process $proc$../../../../source/test.v:134$44 in module test.
Marked 1 switch rules as full_case in process $proc$../../../../source/test.v:124$39 in module test.
Marked 2 switch rules as full_case in process $proc$../../../../source/test.v:112$31 in module test.
Marked 1 switch rules as full_case in process $proc$../../../../source/test.v:104$29 in module test.
Marked 3 switch rules as full_case in process $proc$../../../test_wrapper.v:68$5 in module test_wrapper.
Removed a total of 0 dead cases.

5.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 9 redundant assignments.
Promoted 79 assignments to connections.

5.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$476'.
  Set init value: \mem0 = 16'0000000000000000
  Set init value: \mem1 = 16'0000000000000000
  Set init value: \mem2 = 16'0000000000000000
  Set init value: \mem3 = 16'0000000000000000
Found init rule in `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$418'.
  Set init value: \mem0 = 16'0000000000000000
  Set init value: \mem1 = 16'0000000000000000
Found init rule in `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$388'.
  Set init value: \mem = 16'0000000000000000
Found init rule in `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$368'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$366'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$364'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$362'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$360'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$358'.
  Set init value: \Q = 1'0
Found init rule in `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$356'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$354'.
  Set init value: \Q = 1'1
Found init rule in `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$352'.
  Set init value: \Q = 1'0
Found init rule in `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$350'.
  Set init value: \Q = 1'0
Found init rule in `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$348'.
  Set init value: \Q = 1'0
Found init rule in `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$346'.
  Set init value: \Q = 1'0
Found init rule in `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$344'.
  Set init value: \Q = 1'1
Found init rule in `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$342'.
  Set init value: \Q = 1'1
Found init rule in `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$340'.
  Set init value: \Q = 1'0
Found init rule in `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$338'.
  Set init value: \Q = 1'0
Found init rule in `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$336'.
  Set init value: \Q = 1'1
Found init rule in `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$334'.
  Set init value: \Q = 1'1
Found init rule in `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$332'.
  Set init value: \Q = 1'0
Found init rule in `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$330'.
  Set init value: \Q = 1'0
Found init rule in `\test_flow_control_loop_delay_pipe.$proc$../../../../source/test_flow_control_loop_delay_pipe.v:0$145'.
  Set init value: \ap_loop_init = 1'1
  Set init value: \rewind_ap_ready_reg = 1'0
Found init rule in `\test.$proc$../../../../source/test.v:0$126'.
  Set init value: \ap_CS_fsm = 1'1
  Set init value: \ap_enable_reg_pp0_iter1 = 1'0
  Set init value: \x1_fu_42 = 4'0000
  Set init value: \out_accum2_fu_46 = 12'000000000000
  Set init value: \ap_done_reg = 1'0

5.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \CLEAR in `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$367'.
Found async reset \CLEAR in `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$365'.
Found async reset \PRESET in `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$363'.
Found async reset \PRESET in `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$361'.
Found async reset \CLEAR in `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$347'.
Found async reset \CLEAR in `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$345'.
Found async reset \PRESET in `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$343'.
Found async reset \PRESET in `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$341'.

5.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~54 debug messages>

5.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$476'.
Creating decoders for process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$431'.
     1/8: $1$lookahead\mem3$430[15:0]$447
     2/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1131$422[3:0]$443
     3/8: $1$lookahead\mem2$429[15:0]$446
     4/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1130$421[3:0]$442
     5/8: $1$lookahead\mem1$428[15:0]$445
     6/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1129$420[3:0]$441
     7/8: $1$lookahead\mem0$427[15:0]$444
     8/8: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1128$419[3:0]$440
Creating decoders for process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$418'.
Creating decoders for process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$395'.
     1/4: $1$lookahead\mem1$394[15:0]$403
     2/4: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1084$390[3:0]$401
     3/4: $1$lookahead\mem0$393[15:0]$402
     4/4: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1083$389[3:0]$400
Creating decoders for process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$388'.
Creating decoders for process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1043$376'.
     1/2: $1$lookahead\mem$375[15:0]$380
     2/2: $1$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1045$373[3:0]$379
Creating decoders for process `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:969$371'.
Creating decoders for process `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$368'.
Creating decoders for process `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$367'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$366'.
Creating decoders for process `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$365'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$364'.
Creating decoders for process `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$363'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$362'.
Creating decoders for process `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$361'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$360'.
Creating decoders for process `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$359'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$358'.
Creating decoders for process `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$357'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$356'.
Creating decoders for process `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$355'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$354'.
Creating decoders for process `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$353'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$352'.
Creating decoders for process `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$351'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$350'.
Creating decoders for process `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:366$349'.
Creating decoders for process `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$348'.
Creating decoders for process `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$347'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$346'.
Creating decoders for process `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$345'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$344'.
Creating decoders for process `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$343'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$342'.
Creating decoders for process `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$341'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$340'.
Creating decoders for process `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$339'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$338'.
Creating decoders for process `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$337'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$336'.
Creating decoders for process `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$335'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$334'.
Creating decoders for process `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$333'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$332'.
Creating decoders for process `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$331'.
     1/1: $0\Q[0:0]
Creating decoders for process `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$330'.
Creating decoders for process `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:179$329'.
Creating decoders for process `\test_flow_control_loop_delay_pipe.$proc$../../../../source/test_flow_control_loop_delay_pipe.v:0$145'.
Creating decoders for process `\test_flow_control_loop_delay_pipe.$proc$../../../../source/test_flow_control_loop_delay_pipe.v:96$141'.
     1/1: $1\ap_start_int[0:0]
Creating decoders for process `\test_flow_control_loop_delay_pipe.$proc$../../../../source/test_flow_control_loop_delay_pipe.v:86$131'.
     1/1: $0\rewind_ap_ready_reg[0:0]
Creating decoders for process `\test_flow_control_loop_delay_pipe.$proc$../../../../source/test_flow_control_loop_delay_pipe.v:75$127'.
     1/1: $0\ap_loop_init[0:0]
Creating decoders for process `\test.$proc$../../../../source/test.v:0$126'.
Creating decoders for process `\test.$proc$../../../../source/test.v:253$115'.
Creating decoders for process `\test.$proc$../../../../source/test.v:230$114'.
     1/1: $1\ap_NS_fsm[0:0]
Creating decoders for process `\test.$proc$../../../../source/test.v:222$106'.
     1/1: $1\ap_sig_allocacmp_x1_load[3:0]
Creating decoders for process `\test.$proc$../../../../source/test.v:214$100'.
     1/1: $1\ap_ready_int[0:0]
Creating decoders for process `\test.$proc$../../../../source/test.v:206$94'.
     1/1: $1\ap_loop_exit_ready_delayed[0:0]
Creating decoders for process `\test.$proc$../../../../source/test.v:198$90'.
     1/1: $1\ap_idle_pp0[0:0]
Creating decoders for process `\test.$proc$../../../../source/test.v:190$84'.
     1/1: $1\ap_idle[0:0]
Creating decoders for process `\test.$proc$../../../../source/test.v:182$78'.
     1/1: $1\ap_done_int[0:0]
Creating decoders for process `\test.$proc$../../../../source/test.v:174$70'.
     1/1: $1\ap_condition_exit_pp0_iter0_stage0[0:0]
Creating decoders for process `\test.$proc$../../../../source/test.v:166$64'.
     1/1: $1\A_ce0_local[0:0]
Creating decoders for process `\test.$proc$../../../../source/test.v:160$60'.
     1/1: $0\ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg[0:0]
Creating decoders for process `\test.$proc$../../../../source/test.v:154$58'.
     1/1: $0\x1_fu_42[3:0]
Creating decoders for process `\test.$proc$../../../../source/test.v:144$50'.
     1/1: $0\out_accum2_fu_46[11:0]
Creating decoders for process `\test.$proc$../../../../source/test.v:134$44'.
     1/1: $0\ap_loop_exit_ready_pp0_iter1_reg[0:0]
Creating decoders for process `\test.$proc$../../../../source/test.v:124$39'.
     1/1: $0\ap_enable_reg_pp0_iter1[0:0]
Creating decoders for process `\test.$proc$../../../../source/test.v:112$31'.
     1/1: $0\ap_done_reg[0:0]
Creating decoders for process `\test.$proc$../../../../source/test.v:104$29'.
     1/1: $0\ap_CS_fsm[0:0]
Creating decoders for process `\test_wrapper.$proc$../../../test_wrapper.v:68$5'.
     1/24: $3$mem2reg_rd$\vectOut$../../../test_wrapper.v:89$1_DATA[7:0]$28
     2/24: $0\vectOut[0][7:0] [7:4]
     3/24: $0\vectOut[0][7:0] [3]
     4/24: $0\vectOut[0][7:0] [2]
     5/24: $0\vectOut[0][7:0] [1]
     6/24: $0\vectOut[0][7:0] [0]
     7/24: $2$memwr$\stimIn$../../../test_wrapper.v:88$4_DATA[7:0]$26
     8/24: $2$memwr$\stimIn$../../../test_wrapper.v:88$4_ADDR[2:0]$25
     9/24: $2$mem2reg_rd$\vectOut$../../../test_wrapper.v:89$1_DATA[7:0]$24
    10/24: $2$mem2reg_rd$\vectOut$../../../test_wrapper.v:89$1_ADDR[1:0]$23
    11/24: $1$mem2bits$\stimIn$../../../test_wrapper.v:73$3[7:0]$16
    12/24: $1$mem2bits$\stimIn$../../../test_wrapper.v:72$2[7:0]$15
    13/24: $1$memwr$\stimIn$../../../test_wrapper.v:88$4_EN[7:0]$19
    14/24: $1$memwr$\stimIn$../../../test_wrapper.v:88$4_DATA[7:0]$18
    15/24: $1$memwr$\stimIn$../../../test_wrapper.v:88$4_ADDR[2:0]$17
    16/24: $1$mem2reg_rd$\vectOut$../../../test_wrapper.v:89$1_DATA[7:0]$14
    17/24: $1$mem2reg_rd$\vectOut$../../../test_wrapper.v:89$1_ADDR[1:0]$13
    18/24: $0\vectOut[2][4:0]
    19/24: $0\vectOut[1][7:0]
    20/24: $2$memwr$\stimIn$../../../test_wrapper.v:88$4_EN[7:0]$27
    21/24: $0\A_q0[7:0]
    22/24: $0\ap_start[0:0]
    23/24: $0\ap_rst[0:0]
    24/24: $0\Dout_emu[7:0]

5.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\test_flow_control_loop_delay_pipe.\ap_start_int' from process `\test_flow_control_loop_delay_pipe.$proc$../../../../source/test_flow_control_loop_delay_pipe.v:96$141'.
No latch inferred for signal `\test.\ap_condition_75' from process `\test.$proc$../../../../source/test.v:253$115'.
No latch inferred for signal `\test.\ap_NS_fsm' from process `\test.$proc$../../../../source/test.v:230$114'.
No latch inferred for signal `\test.\ap_sig_allocacmp_x1_load' from process `\test.$proc$../../../../source/test.v:222$106'.
No latch inferred for signal `\test.\ap_ready_int' from process `\test.$proc$../../../../source/test.v:214$100'.
No latch inferred for signal `\test.\ap_loop_exit_ready_delayed' from process `\test.$proc$../../../../source/test.v:206$94'.
No latch inferred for signal `\test.\ap_idle_pp0' from process `\test.$proc$../../../../source/test.v:198$90'.
No latch inferred for signal `\test.\ap_idle' from process `\test.$proc$../../../../source/test.v:190$84'.
No latch inferred for signal `\test.\ap_done_int' from process `\test.$proc$../../../../source/test.v:182$78'.
No latch inferred for signal `\test.\ap_condition_exit_pp0_iter0_stage0' from process `\test.$proc$../../../../source/test.v:174$70'.
No latch inferred for signal `\test.\A_ce0_local' from process `\test.$proc$../../../../source/test.v:166$64'.

5.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\RAM16S4.\mem0' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$431'.
  created $dff cell `$procdff$769' with positive edge clock.
Creating register for signal `\RAM16S4.\mem1' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$431'.
  created $dff cell `$procdff$770' with positive edge clock.
Creating register for signal `\RAM16S4.\mem2' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$431'.
  created $dff cell `$procdff$771' with positive edge clock.
Creating register for signal `\RAM16S4.\mem3' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$431'.
  created $dff cell `$procdff$772' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1128$419' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$431'.
  created $dff cell `$procdff$773' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1129$420' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$431'.
  created $dff cell `$procdff$774' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1130$421' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$431'.
  created $dff cell `$procdff$775' with positive edge clock.
Creating register for signal `\RAM16S4.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1131$422' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$431'.
  created $dff cell `$procdff$776' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem0$427' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$431'.
  created $dff cell `$procdff$777' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem1$428' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$431'.
  created $dff cell `$procdff$778' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem2$429' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$431'.
  created $dff cell `$procdff$779' with positive edge clock.
Creating register for signal `\RAM16S4.$lookahead\mem3$430' using process `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$431'.
  created $dff cell `$procdff$780' with positive edge clock.
Creating register for signal `\RAM16S2.\mem0' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$395'.
  created $dff cell `$procdff$781' with positive edge clock.
Creating register for signal `\RAM16S2.\mem1' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$395'.
  created $dff cell `$procdff$782' with positive edge clock.
Creating register for signal `\RAM16S2.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1083$389' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$395'.
  created $dff cell `$procdff$783' with positive edge clock.
Creating register for signal `\RAM16S2.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1084$390' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$395'.
  created $dff cell `$procdff$784' with positive edge clock.
Creating register for signal `\RAM16S2.$lookahead\mem0$393' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$395'.
  created $dff cell `$procdff$785' with positive edge clock.
Creating register for signal `\RAM16S2.$lookahead\mem1$394' using process `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$395'.
  created $dff cell `$procdff$786' with positive edge clock.
Creating register for signal `\RAM16S1.\mem' using process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1043$376'.
  created $dff cell `$procdff$787' with positive edge clock.
Creating register for signal `\RAM16S1.$bitselwrite$pos$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1045$373' using process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1043$376'.
  created $dff cell `$procdff$788' with positive edge clock.
Creating register for signal `\RAM16S1.$lookahead\mem$375' using process `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1043$376'.
  created $dff cell `$procdff$789' with positive edge clock.
Creating register for signal `\ALU.\C' using process `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:969$371'.
  created direct connection (no actual register cell created).
Creating register for signal `\ALU.\S' using process `\ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:969$371'.
  created direct connection (no actual register cell created).
Creating register for signal `\DFFNCE.\Q' using process `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$367'.
  created $adff cell `$procdff$792' with negative edge clock and positive level reset.
Creating register for signal `\DFFNC.\Q' using process `\DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$365'.
  created $adff cell `$procdff$795' with negative edge clock and positive level reset.
Creating register for signal `\DFFNPE.\Q' using process `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$363'.
  created $adff cell `$procdff$798' with negative edge clock and positive level reset.
Creating register for signal `\DFFNP.\Q' using process `\DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$361'.
  created $adff cell `$procdff$801' with negative edge clock and positive level reset.
Creating register for signal `\DFFNRE.\Q' using process `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$359'.
  created $dff cell `$procdff$802' with negative edge clock.
Creating register for signal `\DFFNR.\Q' using process `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$357'.
  created $dff cell `$procdff$803' with negative edge clock.
Creating register for signal `\DFFNSE.\Q' using process `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$355'.
  created $dff cell `$procdff$804' with negative edge clock.
Creating register for signal `\DFFNS.\Q' using process `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$353'.
  created $dff cell `$procdff$805' with negative edge clock.
Creating register for signal `\DFFNE.\Q' using process `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$351'.
  created $dff cell `$procdff$806' with negative edge clock.
Creating register for signal `\DFFN.\Q' using process `\DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:366$349'.
  created $dff cell `$procdff$807' with negative edge clock.
Creating register for signal `\DFFCE.\Q' using process `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$347'.
  created $adff cell `$procdff$810' with positive edge clock and positive level reset.
Creating register for signal `\DFFC.\Q' using process `\DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$345'.
  created $adff cell `$procdff$813' with positive edge clock and positive level reset.
Creating register for signal `\DFFPE.\Q' using process `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$343'.
  created $adff cell `$procdff$816' with positive edge clock and positive level reset.
Creating register for signal `\DFFP.\Q' using process `\DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$341'.
  created $adff cell `$procdff$819' with positive edge clock and positive level reset.
Creating register for signal `\DFFRE.\Q' using process `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$339'.
  created $dff cell `$procdff$820' with positive edge clock.
Creating register for signal `\DFFR.\Q' using process `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$337'.
  created $dff cell `$procdff$821' with positive edge clock.
Creating register for signal `\DFFSE.\Q' using process `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$335'.
  created $dff cell `$procdff$822' with positive edge clock.
Creating register for signal `\DFFS.\Q' using process `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$333'.
  created $dff cell `$procdff$823' with positive edge clock.
Creating register for signal `\DFFE.\Q' using process `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$331'.
  created $dff cell `$procdff$824' with positive edge clock.
Creating register for signal `\DFF.\Q' using process `\DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:179$329'.
  created $dff cell `$procdff$825' with positive edge clock.
Creating register for signal `\test_flow_control_loop_delay_pipe.\rewind_ap_ready_reg' using process `\test_flow_control_loop_delay_pipe.$proc$../../../../source/test_flow_control_loop_delay_pipe.v:86$131'.
  created $dff cell `$procdff$826' with positive edge clock.
Creating register for signal `\test_flow_control_loop_delay_pipe.\ap_loop_init' using process `\test_flow_control_loop_delay_pipe.$proc$../../../../source/test_flow_control_loop_delay_pipe.v:75$127'.
  created $dff cell `$procdff$827' with positive edge clock.
Creating register for signal `\test.\ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg' using process `\test.$proc$../../../../source/test.v:160$60'.
  created $dff cell `$procdff$828' with positive edge clock.
Creating register for signal `\test.\x1_fu_42' using process `\test.$proc$../../../../source/test.v:154$58'.
  created $dff cell `$procdff$829' with positive edge clock.
Creating register for signal `\test.\out_accum2_fu_46' using process `\test.$proc$../../../../source/test.v:144$50'.
  created $dff cell `$procdff$830' with positive edge clock.
Creating register for signal `\test.\ap_loop_exit_ready_pp0_iter1_reg' using process `\test.$proc$../../../../source/test.v:134$44'.
  created $dff cell `$procdff$831' with positive edge clock.
Creating register for signal `\test.\ap_enable_reg_pp0_iter1' using process `\test.$proc$../../../../source/test.v:124$39'.
  created $dff cell `$procdff$832' with positive edge clock.
Creating register for signal `\test.\ap_done_reg' using process `\test.$proc$../../../../source/test.v:112$31'.
  created $dff cell `$procdff$833' with positive edge clock.
Creating register for signal `\test.\ap_CS_fsm' using process `\test.$proc$../../../../source/test.v:104$29'.
  created $dff cell `$procdff$834' with positive edge clock.
Creating register for signal `\test_wrapper.\Dout_emu' using process `\test_wrapper.$proc$../../../test_wrapper.v:68$5'.
  created $dff cell `$procdff$835' with positive edge clock.
Creating register for signal `\test_wrapper.\ap_rst' using process `\test_wrapper.$proc$../../../test_wrapper.v:68$5'.
  created $dff cell `$procdff$836' with positive edge clock.
Creating register for signal `\test_wrapper.\ap_start' using process `\test_wrapper.$proc$../../../test_wrapper.v:68$5'.
  created $dff cell `$procdff$837' with positive edge clock.
Creating register for signal `\test_wrapper.\A_q0' using process `\test_wrapper.$proc$../../../test_wrapper.v:68$5'.
  created $dff cell `$procdff$838' with positive edge clock.
Creating register for signal `\test_wrapper.\vectOut[0]' using process `\test_wrapper.$proc$../../../test_wrapper.v:68$5'.
  created $dff cell `$procdff$839' with positive edge clock.
Creating register for signal `\test_wrapper.\vectOut[1]' using process `\test_wrapper.$proc$../../../test_wrapper.v:68$5'.
  created $dff cell `$procdff$840' with positive edge clock.
Creating register for signal `\test_wrapper.\vectOut[2] [4:0]' using process `\test_wrapper.$proc$../../../test_wrapper.v:68$5'.
  created $dff cell `$procdff$841' with positive edge clock.
Creating register for signal `\test_wrapper.$mem2reg_rd$\vectOut$../../../test_wrapper.v:89$1_ADDR' using process `\test_wrapper.$proc$../../../test_wrapper.v:68$5'.
  created $dff cell `$procdff$842' with positive edge clock.
Creating register for signal `\test_wrapper.$mem2reg_rd$\vectOut$../../../test_wrapper.v:89$1_DATA' using process `\test_wrapper.$proc$../../../test_wrapper.v:68$5'.
  created $dff cell `$procdff$843' with positive edge clock.
Creating register for signal `\test_wrapper.$mem2bits$\stimIn$../../../test_wrapper.v:72$2' using process `\test_wrapper.$proc$../../../test_wrapper.v:68$5'.
  created $dff cell `$procdff$844' with positive edge clock.
Creating register for signal `\test_wrapper.$mem2bits$\stimIn$../../../test_wrapper.v:73$3' using process `\test_wrapper.$proc$../../../test_wrapper.v:68$5'.
  created $dff cell `$procdff$845' with positive edge clock.
Creating register for signal `\test_wrapper.$memwr$\stimIn$../../../test_wrapper.v:88$4_ADDR' using process `\test_wrapper.$proc$../../../test_wrapper.v:68$5'.
  created $dff cell `$procdff$846' with positive edge clock.
Creating register for signal `\test_wrapper.$memwr$\stimIn$../../../test_wrapper.v:88$4_DATA' using process `\test_wrapper.$proc$../../../test_wrapper.v:68$5'.
  created $dff cell `$procdff$847' with positive edge clock.
Creating register for signal `\test_wrapper.$memwr$\stimIn$../../../test_wrapper.v:88$4_EN' using process `\test_wrapper.$proc$../../../test_wrapper.v:68$5'.
  created $dff cell `$procdff$848' with positive edge clock.

5.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

5.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$476'.
Found and cleaned up 1 empty switch in `\RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$431'.
Removing empty process `RAM16S4.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1126$431'.
Removing empty process `RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$418'.
Found and cleaned up 1 empty switch in `\RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$395'.
Removing empty process `RAM16S2.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1081$395'.
Removing empty process `RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$388'.
Found and cleaned up 1 empty switch in `\RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1043$376'.
Removing empty process `RAM16S1.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:1043$376'.
Removing empty process `ALU.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:969$371'.
Removing empty process `DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$368'.
Found and cleaned up 1 empty switch in `\DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$367'.
Removing empty process `DFFNCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:535$367'.
Removing empty process `DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$366'.
Removing empty process `DFFNC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:515$365'.
Removing empty process `DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$364'.
Found and cleaned up 1 empty switch in `\DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$363'.
Removing empty process `DFFNPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:496$363'.
Removing empty process `DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$362'.
Removing empty process `DFFNP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:476$361'.
Removing empty process `DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$360'.
Found and cleaned up 2 empty switches in `\DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$359'.
Removing empty process `DFFNRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:457$359'.
Removing empty process `DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$358'.
Found and cleaned up 1 empty switch in `\DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$357'.
Removing empty process `DFFNR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:437$357'.
Removing empty process `DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$356'.
Found and cleaned up 2 empty switches in `\DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$355'.
Removing empty process `DFFNSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:418$355'.
Removing empty process `DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$354'.
Found and cleaned up 1 empty switch in `\DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$353'.
Removing empty process `DFFNS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:398$353'.
Removing empty process `DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$352'.
Found and cleaned up 1 empty switch in `\DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$351'.
Removing empty process `DFFNE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:381$351'.
Removing empty process `DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$350'.
Removing empty process `DFFN.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:366$349'.
Removing empty process `DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$348'.
Found and cleaned up 1 empty switch in `\DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$347'.
Removing empty process `DFFCE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:348$347'.
Removing empty process `DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$346'.
Removing empty process `DFFC.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:328$345'.
Removing empty process `DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$344'.
Found and cleaned up 1 empty switch in `\DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$343'.
Removing empty process `DFFPE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:309$343'.
Removing empty process `DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$342'.
Removing empty process `DFFP.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:289$341'.
Removing empty process `DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$340'.
Found and cleaned up 2 empty switches in `\DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$339'.
Removing empty process `DFFRE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:270$339'.
Removing empty process `DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$338'.
Found and cleaned up 1 empty switch in `\DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$337'.
Removing empty process `DFFR.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:250$337'.
Removing empty process `DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$336'.
Found and cleaned up 2 empty switches in `\DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$335'.
Removing empty process `DFFSE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:231$335'.
Removing empty process `DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$334'.
Found and cleaned up 1 empty switch in `\DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$333'.
Removing empty process `DFFS.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:211$333'.
Removing empty process `DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$332'.
Found and cleaned up 1 empty switch in `\DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$331'.
Removing empty process `DFFE.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:194$331'.
Removing empty process `DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:0$330'.
Removing empty process `DFF.$proc$/usr/local/bin/../share/yosys/gowin/cells_sim.v:179$329'.
Removing empty process `test_flow_control_loop_delay_pipe.$proc$../../../../source/test_flow_control_loop_delay_pipe.v:0$145'.
Found and cleaned up 1 empty switch in `\test_flow_control_loop_delay_pipe.$proc$../../../../source/test_flow_control_loop_delay_pipe.v:96$141'.
Removing empty process `test_flow_control_loop_delay_pipe.$proc$../../../../source/test_flow_control_loop_delay_pipe.v:96$141'.
Found and cleaned up 3 empty switches in `\test_flow_control_loop_delay_pipe.$proc$../../../../source/test_flow_control_loop_delay_pipe.v:86$131'.
Removing empty process `test_flow_control_loop_delay_pipe.$proc$../../../../source/test_flow_control_loop_delay_pipe.v:86$131'.
Found and cleaned up 3 empty switches in `\test_flow_control_loop_delay_pipe.$proc$../../../../source/test_flow_control_loop_delay_pipe.v:75$127'.
Removing empty process `test_flow_control_loop_delay_pipe.$proc$../../../../source/test_flow_control_loop_delay_pipe.v:75$127'.
Removing empty process `test.$proc$../../../../source/test.v:0$126'.
Removing empty process `test.$proc$../../../../source/test.v:253$115'.
Found and cleaned up 1 empty switch in `\test.$proc$../../../../source/test.v:230$114'.
Removing empty process `test.$proc$../../../../source/test.v:230$114'.
Found and cleaned up 1 empty switch in `\test.$proc$../../../../source/test.v:222$106'.
Removing empty process `test.$proc$../../../../source/test.v:222$106'.
Found and cleaned up 1 empty switch in `\test.$proc$../../../../source/test.v:214$100'.
Removing empty process `test.$proc$../../../../source/test.v:214$100'.
Found and cleaned up 1 empty switch in `\test.$proc$../../../../source/test.v:206$94'.
Removing empty process `test.$proc$../../../../source/test.v:206$94'.
Found and cleaned up 1 empty switch in `\test.$proc$../../../../source/test.v:198$90'.
Removing empty process `test.$proc$../../../../source/test.v:198$90'.
Found and cleaned up 1 empty switch in `\test.$proc$../../../../source/test.v:190$84'.
Removing empty process `test.$proc$../../../../source/test.v:190$84'.
Found and cleaned up 1 empty switch in `\test.$proc$../../../../source/test.v:182$78'.
Removing empty process `test.$proc$../../../../source/test.v:182$78'.
Found and cleaned up 1 empty switch in `\test.$proc$../../../../source/test.v:174$70'.
Removing empty process `test.$proc$../../../../source/test.v:174$70'.
Found and cleaned up 1 empty switch in `\test.$proc$../../../../source/test.v:166$64'.
Removing empty process `test.$proc$../../../../source/test.v:166$64'.
Found and cleaned up 1 empty switch in `\test.$proc$../../../../source/test.v:160$60'.
Removing empty process `test.$proc$../../../../source/test.v:160$60'.
Found and cleaned up 1 empty switch in `\test.$proc$../../../../source/test.v:154$58'.
Removing empty process `test.$proc$../../../../source/test.v:154$58'.
Found and cleaned up 3 empty switches in `\test.$proc$../../../../source/test.v:144$50'.
Removing empty process `test.$proc$../../../../source/test.v:144$50'.
Found and cleaned up 3 empty switches in `\test.$proc$../../../../source/test.v:134$44'.
Removing empty process `test.$proc$../../../../source/test.v:134$44'.
Found and cleaned up 2 empty switches in `\test.$proc$../../../../source/test.v:124$39'.
Removing empty process `test.$proc$../../../../source/test.v:124$39'.
Found and cleaned up 3 empty switches in `\test.$proc$../../../../source/test.v:112$31'.
Removing empty process `test.$proc$../../../../source/test.v:112$31'.
Found and cleaned up 1 empty switch in `\test.$proc$../../../../source/test.v:104$29'.
Removing empty process `test.$proc$../../../../source/test.v:104$29'.
Found and cleaned up 3 empty switches in `\test_wrapper.$proc$../../../test_wrapper.v:68$5'.
Removing empty process `test_wrapper.$proc$../../../test_wrapper.v:68$5'.
Cleaned up 54 empty switches.

5.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_flow_control_loop_delay_pipe.
<suppressed ~11 debug messages>
Optimizing module test.
<suppressed ~77 debug messages>
Optimizing module test_wrapper.
<suppressed ~1 debug messages>

5.5. Executing FLATTEN pass (flatten design).
Deleting now unused module test_flow_control_loop_delay_pipe.
Deleting now unused module test.
<suppressed ~2 debug messages>

5.6. Executing TRIBUF pass.

5.7. Executing DEMINOUT pass (demote inout ports to input or output).

5.8. Executing SYNTH pass.

5.8.1. Executing PROC pass (convert processes to netlists).

5.8.1.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.8.1.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

5.8.1.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

5.8.1.4. Executing PROC_INIT pass (extract init attributes).

5.8.1.5. Executing PROC_ARST pass (detect async resets in processes).

5.8.1.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

5.8.1.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

5.8.1.8. Executing PROC_DLATCH pass (convert process syncs to latches).

5.8.1.9. Executing PROC_DFF pass (convert process syncs to FFs).

5.8.1.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

5.8.1.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.8.1.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.
<suppressed ~2 debug messages>

5.8.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.

5.8.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_wrapper..
Removed 19 unused cells and 241 unused wires.
<suppressed ~22 debug messages>

5.8.4. Executing CHECK pass (checking for obvious problems).
Checking module test_wrapper...
Warning: Wire test_wrapper.\vectOut[2] [7] is used but has no driver.
Warning: Wire test_wrapper.\vectOut[2] [6] is used but has no driver.
Warning: Wire test_wrapper.\vectOut[2] [5] is used but has no driver.
Found and reported 3 problems.

5.8.5. Executing OPT pass (performing simple optimizations).

5.8.5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.

5.8.5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_wrapper'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

5.8.5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $flatten\u_test.$procmux$630: \u_test.ap_condition_exit_pp0_iter0_stage0 -> 1'1
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$656.
    dead port 1/2 on $mux $procmux$659.
    dead port 1/2 on $mux $procmux$695.
    dead port 1/2 on $mux $procmux$701.
    dead port 1/2 on $mux $procmux$752.
Removed 5 multiplexer ports.
<suppressed ~29 debug messages>

5.8.5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test_wrapper.
    Consolidated identical input bits for $mux cell $procmux$749:
      Old ports: A=8'11111111, B=8'00000000, Y=$procmux$749_Y
      New ports: A=1'1, B=1'0, Y=$procmux$749_Y [0]
      New connections: $procmux$749_Y [7:1] = { $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] $procmux$749_Y [0] }
  Optimizing cells in module \test_wrapper.
    Consolidated identical input bits for $mux cell $procmux$722:
      Old ports: A=$2$memwr$\stimIn$../../../test_wrapper.v:88$4_EN[7:0]$27, B=8'00000000, Y=$0$memwr$\stimIn$../../../test_wrapper.v:88$4_EN[7:0]$12
      New ports: A=$procmux$749_Y [0], B=1'0, Y=$0$memwr$\stimIn$../../../test_wrapper.v:88$4_EN[7:0]$12 [0]
      New connections: $0$memwr$\stimIn$../../../test_wrapper.v:88$4_EN[7:0]$12 [7:1] = { $0$memwr$\stimIn$../../../test_wrapper.v:88$4_EN[7:0]$12 [0] $0$memwr$\stimIn$../../../test_wrapper.v:88$4_EN[7:0]$12 [0] $0$memwr$\stimIn$../../../test_wrapper.v:88$4_EN[7:0]$12 [0] $0$memwr$\stimIn$../../../test_wrapper.v:88$4_EN[7:0]$12 [0] $0$memwr$\stimIn$../../../test_wrapper.v:88$4_EN[7:0]$12 [0] $0$memwr$\stimIn$../../../test_wrapper.v:88$4_EN[7:0]$12 [0] $0$memwr$\stimIn$../../../test_wrapper.v:88$4_EN[7:0]$12 [0] }
  Optimizing cells in module \test_wrapper.
Performed a total of 2 changes.

5.8.5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_wrapper'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

5.8.5.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\u_test.$procdff$833 ($dff) from module test_wrapper.

5.8.5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_wrapper..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

5.8.5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.

5.8.5.9. Rerunning OPT passes. (Maybe there is more to do..)

5.8.5.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

5.8.5.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test_wrapper.
Performed a total of 0 changes.

5.8.5.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_wrapper'.
Removed a total of 0 cells.

5.8.5.13. Executing OPT_DFF pass (perform DFF optimizations).

5.8.5.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_wrapper..

5.8.5.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.

5.8.5.16. Finished OPT passes. (There is nothing left to do.)

5.8.6. Executing FSM pass (extract and optimize FSM).

5.8.6.1. Executing FSM_DETECT pass (finding FSMs in design).

5.8.6.2. Executing FSM_EXTRACT pass (extracting FSM from design).

5.8.6.3. Executing FSM_OPT pass (simple optimizations of FSMs).

5.8.6.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_wrapper..

5.8.6.5. Executing FSM_OPT pass (simple optimizations of FSMs).

5.8.6.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

5.8.6.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

5.8.6.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

5.8.7. Executing OPT pass (performing simple optimizations).

5.8.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.

5.8.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_wrapper'.
Removed a total of 0 cells.

5.8.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

5.8.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test_wrapper.
Performed a total of 0 changes.

5.8.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_wrapper'.
Removed a total of 0 cells.

5.8.7.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$841 ($dff) from module test_wrapper (D = { \u_test.out_accum_fu_105_p2 [11] \u_test.out_accum_fu_105_p2 [11:8] }, Q = \vectOut[2] [4:0]).
Adding EN signal on $procdff$840 ($dff) from module test_wrapper (D = \u_test.out_accum_fu_105_p2 [7:0], Q = \vectOut[1]).
Adding EN signal on $procdff$839 ($dff) from module test_wrapper (D = { \A_address0 \A_ce0 \ap_ready \ap_idle \ap_done }, Q = \vectOut[0]).
Adding EN signal on $procdff$838 ($dff) from module test_wrapper (D = $memrd$\stimIn$../../../test_wrapper.v:74$22_DATA, Q = \A_q0).
Adding EN signal on $procdff$837 ($dff) from module test_wrapper (D = $memrd$\stimIn$../../../test_wrapper.v:72$20_DATA [1], Q = \ap_start).
Adding EN signal on $procdff$836 ($dff) from module test_wrapper (D = $memrd$\stimIn$../../../test_wrapper.v:72$20_DATA [0], Q = \ap_rst).
Adding EN signal on $procdff$835 ($dff) from module test_wrapper (D = $3$mem2reg_rd$\vectOut$../../../test_wrapper.v:89$1_DATA[7:0]$28, Q = \Dout_emu).
Adding SRST signal on $flatten\u_test.\flow_control_loop_delay_pipe_U.$procdff$827 ($dff) from module test_wrapper (D = $flatten\u_test.\flow_control_loop_delay_pipe_U.$procmux$581_Y, Q = \u_test.flow_control_loop_delay_pipe_U.ap_loop_init, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$879 ($sdff) from module test_wrapper (D = 1'0, Q = \u_test.flow_control_loop_delay_pipe_U.ap_loop_init).
Adding SRST signal on $flatten\u_test.\flow_control_loop_delay_pipe_U.$procdff$826 ($dff) from module test_wrapper (D = $flatten\u_test.\flow_control_loop_delay_pipe_U.$procmux$576_Y, Q = \u_test.flow_control_loop_delay_pipe_U.rewind_ap_ready_reg, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$883 ($sdff) from module test_wrapper (D = $flatten\u_test.\flow_control_loop_delay_pipe_U.$procmux$576_Y, Q = \u_test.flow_control_loop_delay_pipe_U.rewind_ap_ready_reg).
Adding SRST signal on $flatten\u_test.$procdff$834 ($dff) from module test_wrapper (D = 1'x, Q = \u_test.ap_CS_fsm, rval = 1'1).
Adding SRST signal on $flatten\u_test.$procdff$832 ($dff) from module test_wrapper (D = $flatten\u_test.$procmux$634_Y, Q = \u_test.ap_enable_reg_pp0_iter1, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$890 ($sdff) from module test_wrapper (D = \u_test.ap_enable_reg_pp0_iter0, Q = \u_test.ap_enable_reg_pp0_iter1).
Adding EN signal on $flatten\u_test.$procdff$831 ($dff) from module test_wrapper (D = $flatten\u_test.$procmux$630_Y, Q = \u_test.ap_loop_exit_ready_pp0_iter1_reg).
Adding EN signal on $flatten\u_test.$procdff$830 ($dff) from module test_wrapper (D = $flatten\u_test.$procmux$623_Y, Q = \u_test.out_accum2_fu_46).
Adding SRST signal on $auto$ff.cc:266:slice$893 ($dffe) from module test_wrapper (D = $flatten\u_test.$procmux$620_Y, Q = \u_test.out_accum2_fu_46, rval = 12'000000000000).
Adding EN signal on $flatten\u_test.$procdff$829 ($dff) from module test_wrapper (D = \u_test.x_fu_81_p2, Q = \u_test.x1_fu_42).
Adding EN signal on $flatten\u_test.$procdff$828 ($dff) from module test_wrapper (D = \u_test.ap_condition_exit_pp0_iter0_stage0, Q = \u_test.ap_condition_exit_pp0_iter0_stage0_pp0_iter1_reg).
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$887 ($sdff) from module test_wrapper.

5.8.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_wrapper..
Removed 33 unused cells and 29 unused wires.
<suppressed ~35 debug messages>

5.8.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.
<suppressed ~9 debug messages>

5.8.7.9. Rerunning OPT passes. (Maybe there is more to do..)

5.8.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

5.8.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test_wrapper.
Performed a total of 0 changes.

5.8.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_wrapper'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

5.8.7.13. Executing OPT_DFF pass (perform DFF optimizations).
Removing always-active EN on $auto$ff.cc:266:slice$892 ($dffe) from module test_wrapper.
Removing always-active EN on $auto$ff.cc:266:slice$891 ($sdffe) from module test_wrapper.
Removing always-active EN on $auto$ff.cc:266:slice$900 ($dffe) from module test_wrapper.

5.8.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_wrapper..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

5.8.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.

5.8.7.16. Rerunning OPT passes. (Maybe there is more to do..)

5.8.7.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

5.8.7.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test_wrapper.
Performed a total of 0 changes.

5.8.7.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_wrapper'.
Removed a total of 0 cells.

5.8.7.20. Executing OPT_DFF pass (perform DFF optimizations).

5.8.7.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_wrapper..

5.8.7.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.

5.8.7.23. Finished OPT passes. (There is nothing left to do.)

5.8.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 address bits (of 3) from memory init port test_wrapper.$auto$proc_memwr.cc:45:proc_memwr$849 (stimIn).
Removed top 31 address bits (of 32) from memory read port test_wrapper.$memrd$\stimIn$../../../test_wrapper.v:72$20 (stimIn).
Removed top 31 address bits (of 32) from memory read port test_wrapper.$memrd$\stimIn$../../../test_wrapper.v:74$22 (stimIn).
Removed top 1 bits (of 2) from port B of cell test_wrapper.$procmux$653_CMP0 ($eq).
Removed top 2 bits (of 3) from mux cell test_wrapper.$procmux$728 ($mux).
Removed top 1 bits (of 5) from FF cell test_wrapper.$auto$ff.cc:266:slice$854 ($dffe).
Removed top 3 bits (of 4) from port B of cell test_wrapper.$flatten\u_test.$add$../../../../source/test.v:275$125 ($add).
Removed top 4 bits (of 12) from port A of cell test_wrapper.$flatten\u_test.$add$../../../../source/test.v:271$124 ($add).
Removed top 2 bits (of 3) from mux cell test_wrapper.$procmux$698 ($mux).
Removed top 2 bits (of 3) from wire test_wrapper.$0$memwr$\stimIn$../../../test_wrapper.v:88$4_ADDR[2:0]$10.
Removed top 2 bits (of 3) from wire test_wrapper.$2$memwr$\stimIn$../../../test_wrapper.v:88$4_ADDR[2:0]$25.

5.8.9. Executing PEEPOPT pass (run peephole optimizers).

5.8.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_wrapper..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

5.8.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module test_wrapper:
  creating $macc model for $flatten\u_test.$add$../../../../source/test.v:271$124 ($add).
  creating $macc model for $flatten\u_test.$add$../../../../source/test.v:275$125 ($add).
  creating $alu model for $macc $flatten\u_test.$add$../../../../source/test.v:275$125.
  creating $alu model for $macc $flatten\u_test.$add$../../../../source/test.v:271$124.
  creating $alu cell for $flatten\u_test.$add$../../../../source/test.v:271$124: $auto$alumacc.cc:495:replace_alu$903
  creating $alu cell for $flatten\u_test.$add$../../../../source/test.v:275$125: $auto$alumacc.cc:495:replace_alu$906
  created 2 $alu and 0 $macc cells.

5.8.12. Executing SHARE pass (SAT-based resource sharing).

5.8.13. Executing OPT pass (performing simple optimizations).

5.8.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.

5.8.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_wrapper'.
Removed a total of 0 cells.

5.8.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~16 debug messages>

5.8.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test_wrapper.
Performed a total of 0 changes.

5.8.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_wrapper'.
Removed a total of 0 cells.

5.8.13.6. Executing OPT_DFF pass (perform DFF optimizations).

5.8.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_wrapper..

5.8.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.

5.8.13.9. Finished OPT passes. (There is nothing left to do.)

5.8.14. Executing MEMORY pass.

5.8.14.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

5.8.14.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

5.8.14.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing test_wrapper.stimIn write port 0.

5.8.14.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

5.8.14.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\stimIn'[0] in module `\test_wrapper': merging output FF to cell.
    Write port 0: don't care on collision.
Checking read port `\stimIn'[1] in module `\test_wrapper': merging output FF to cell.
    Write port 0: don't care on collision.

5.8.14.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_wrapper..
Removed 3 unused cells and 11 unused wires.
<suppressed ~4 debug messages>

5.8.14.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory test_wrapper.stimIn by address:
  Merging ports 0, 1 (address 1'1).

5.8.14.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

5.8.14.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_wrapper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

5.8.14.10. Executing MEMORY_COLLECT pass (generating $mem cells).

5.8.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_wrapper..

5.9. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory test_wrapper.stimIn
<suppressed ~636 debug messages>

5.10. Executing TECHMAP pass (map to technology primitives).

5.10.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/lutrams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/lutrams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_LUTRAM_'.
Successfully finished Verilog frontend.

5.10.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__GOWIN_SP_'.
Generating RTLIL representation for module `\$__GOWIN_DP_'.
Generating RTLIL representation for module `\$__GOWIN_SDP_'.
Successfully finished Verilog frontend.

5.10.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

5.11. Executing OPT pass (performing simple optimizations).

5.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.
<suppressed ~19 debug messages>

5.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_wrapper'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

5.11.3. Executing OPT_DFF pass (perform DFF optimizations).

5.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_wrapper..
Removed 1 unused cells and 13 unused wires.
<suppressed ~2 debug messages>

5.11.5. Finished fast OPT passes.

5.12. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \stimIn in module \test_wrapper:
  created 2 $dff cells and 0 static cells of width 8.
Extracted data FF from read port 0 of test_wrapper.stimIn: $\stimIn$rdreg[0]
  read interface: 1 $dff and 0 $mux cells.
  write interface: 2 write mux blocks.

5.13. Executing OPT pass (performing simple optimizations).

5.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.
<suppressed ~4 debug messages>

5.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_wrapper'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

5.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

5.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test_wrapper.
Performed a total of 0 changes.

5.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_wrapper'.
Removed a total of 0 cells.

5.13.6. Executing OPT_DFF pass (perform DFF optimizations).

5.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_wrapper..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

5.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.

5.13.9. Rerunning OPT passes. (Maybe there is more to do..)

5.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~8 debug messages>

5.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test_wrapper.
Performed a total of 0 changes.

5.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_wrapper'.
Removed a total of 0 cells.

5.13.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\stimIn[1]$1125 ($dff) from module test_wrapper (D = \Din_emu, Q = \stimIn[1]).
Adding EN signal on $memory\stimIn[0]$1123 ($dff) from module test_wrapper (D = \Din_emu, Q = \stimIn[0]).

5.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_wrapper..
Removed 2 unused cells and 2 unused wires.
<suppressed ~3 debug messages>

5.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.

5.13.16. Rerunning OPT passes. (Maybe there is more to do..)

5.13.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~6 debug messages>

5.13.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test_wrapper.
Performed a total of 0 changes.

5.13.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_wrapper'.
Removed a total of 0 cells.

5.13.20. Executing OPT_DFF pass (perform DFF optimizations).

5.13.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_wrapper..

5.13.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.

5.13.23. Finished OPT passes. (There is nothing left to do.)

5.14. Executing TECHMAP pass (map to technology primitives).

5.14.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.14.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$fc16b9f758000d363d24f130038bd99b46b4fa1b\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_90_alu for cells of type $alu.
Using template $paramod$c1541da5f794d97c480d1f3c7f254b7fb7fc1cf9\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000000100 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu_brent_kung\WIDTH=32'00000000000000000000000000001100 for cells of type $lcu.
Using extmapper simplemap for cells of type $or.
No more expansions possible.
<suppressed ~481 debug messages>

5.15. Executing OPT pass (performing simple optimizations).

5.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.
<suppressed ~52 debug messages>

5.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_wrapper'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

5.15.3. Executing OPT_DFF pass (perform DFF optimizations).

5.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_wrapper..
Removed 43 unused cells and 115 unused wires.
<suppressed ~44 debug messages>

5.15.5. Finished fast OPT passes.

5.16. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port test_wrapper.Addr_emu using IBUF.
Mapping port test_wrapper.Din_emu using IBUF.
Mapping port test_wrapper.Dout_emu using OBUF.
Mapping port test_wrapper.clk_dut using IBUF.
Mapping port test_wrapper.clk_emu using IBUF.
Mapping port test_wrapper.get_emu using IBUF.
Mapping port test_wrapper.load_emu using IBUF.

5.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_wrapper..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

5.18. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

5.19. Executing TECHMAP pass (map to technology primitives).

5.19.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

5.19.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFFE_PP0P_ for cells of type $_SDFFE_PP0P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFE_PP1P_ for cells of type $_SDFFE_PP1P_.
No more expansions possible.
<suppressed ~90 debug messages>

5.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.
<suppressed ~10 debug messages>

5.21. Executing SIMPLEMAP pass (map simple cells to gate primitives).

5.22. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

5.23. Executing ABC9 pass.

5.23.1. Executing ABC9_OPS pass (helper functions for ABC9).

5.23.2. Executing ABC9_OPS pass (helper functions for ABC9).

5.23.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module test_wrapper.
Found 0 SCCs.

5.23.4. Executing ABC9_OPS pass (helper functions for ABC9).

5.23.5. Executing PROC pass (convert processes to netlists).

5.23.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.23.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

5.23.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

5.23.5.4. Executing PROC_INIT pass (extract init attributes).

5.23.5.5. Executing PROC_ARST pass (detect async resets in processes).

5.23.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

5.23.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

5.23.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

5.23.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

5.23.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

5.23.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.23.5.12. Executing OPT_EXPR pass (perform const folding).

5.23.6. Executing TECHMAP pass (map to technology primitives).

5.23.6.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.23.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~250 debug messages>

5.23.7. Executing OPT pass (performing simple optimizations).

5.23.7.1. Executing OPT_EXPR pass (perform const folding).

5.23.7.2. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

5.23.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Removed 0 multiplexer ports.

5.23.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Performed a total of 0 changes.

5.23.7.5. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

5.23.7.6. Executing OPT_DFF pass (perform DFF optimizations).

5.23.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).

5.23.7.8. Executing OPT_EXPR pass (perform const folding).

5.23.7.9. Finished OPT passes. (There is nothing left to do.)

5.23.8. Executing TECHMAP pass (map to technology primitives).

5.23.8.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

5.23.8.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~2 debug messages>

5.23.9. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_model.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_model.v' to AST representation.
Replacing existing blackbox module `$__ABC9_DELAY' at /usr/local/bin/../share/yosys/abc9_model.v:2.1-7.10.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Replacing existing blackbox module `$__ABC9_SCC_BREAKER' at /usr/local/bin/../share/yosys/abc9_model.v:9.1-11.10.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Replacing existing module `$__DFF_N__$abc9_flop' at /usr/local/bin/../share/yosys/abc9_model.v:14.1-20.10.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Replacing existing module `$__DFF_P__$abc9_flop' at /usr/local/bin/../share/yosys/abc9_model.v:23.1-29.10.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

5.23.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~149 debug messages>

5.23.11. Executing ABC9_OPS pass (helper functions for ABC9).

5.23.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

5.23.13. Executing TECHMAP pass (map to technology primitives).

5.23.13.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.23.13.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~252 debug messages>

5.23.14. Executing OPT pass (performing simple optimizations).

5.23.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.

5.23.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_wrapper'.
Removed a total of 0 cells.

5.23.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \test_wrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

5.23.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \test_wrapper.
Performed a total of 0 changes.

5.23.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\test_wrapper'.
Removed a total of 0 cells.

5.23.14.6. Executing OPT_DFF pass (perform DFF optimizations).

5.23.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \test_wrapper..

5.23.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module test_wrapper.

5.23.14.9. Finished OPT passes. (There is nothing left to do.)

5.23.15. Executing AIGMAP pass (map logic to AIG).

5.23.16. Executing AIGMAP pass (map logic to AIG).
Module test_wrapper: replaced 68 cells with 389 new cells, skipped 321 cells.
  replaced 3 cell types:
      29 $_OR_
      26 $_XOR_
      13 $_MUX_
  not replaced 12 cell types:
       2 $scopeinfo
      13 $_NOT_
      69 $_AND_
      67 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000001001000000
      80 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000000111111
       1 DFF
      51 DFFE
       1 DFFSE
       1 DFFR
      13 DFFRE
      15 IBUF
       8 OBUF

5.23.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

5.23.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

5.23.16.3. Executing XAIGER backend.
<suppressed ~78 debug messages>
Extracted 215 AND gates and 755 wires from module `test_wrapper' to a netlist network with 104 inputs and 165 outputs.

5.23.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

5.23.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    104/    165  and =     173  lev =   14 (1.46)  mem = 0.01 MB  box = 147  bb = 147
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =    104/    165  and =     185  lev =   24 (1.64)  mem = 0.01 MB  ch =   17  box = 147  bb = 147
ABC: + &if -W 500 -v 
ABC: K = 8. Memory (bytes): Truth =    0. Cut =   68. Obj =  152. Set =  708. CutMin = no
ABC: Node =     185.  Ch =    12.  Total mem =    0.12 MB. Peak cut mem =    0.02 MB.
ABC: P:  Del = 5925.00.  Ar =     201.0.  Edge =      220.  Cut =     2667.  T =     0.00 sec
ABC: P:  Del = 5925.00.  Ar =     217.0.  Edge =      229.  Cut =     2658.  T =     0.00 sec
ABC: P:  Del = 5925.00.  Ar =     150.0.  Edge =      226.  Cut =     3371.  T =     0.00 sec
ABC: F:  Del = 5925.00.  Ar =     131.0.  Edge =      199.  Cut =     2717.  T =     0.00 sec
ABC: A:  Del = 5925.00.  Ar =     115.0.  Edge =      178.  Cut =     2930.  T =     0.00 sec
ABC: A:  Del = 5925.00.  Ar =     114.0.  Edge =      179.  Cut =     2915.  T =     0.00 sec
ABC: Total time =     0.00 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =    104/    165  and =     335  lev =   21 (1.62)  mem = 0.01 MB  box = 147  bb = 147
ABC: Mapping (K=8)  :  lut =     44  edge =     169  lev =    3 (0.68)  levB =    4  mem = 0.00 MB
ABC: LUT = 44 : 2=14 31.8 %  3=6 13.6 %  4=9 20.5 %  5=10 22.7 %  6=1 2.3 %  7=1 2.3 %  8=3 6.8 %  Ave = 3.84
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 0.02 seconds, total: 0.02 seconds

5.23.16.6. Executing AIGER frontend.
<suppressed ~550 debug messages>
Removed 581 unused cells and 1162 unused wires.

5.23.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:       44
ABC RESULTS:           input signals:       25
ABC RESULTS:          output signals:      151
Removing temp directory.

5.23.17. Executing TECHMAP pass (map to technology primitives).

5.23.17.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

5.23.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>
Removed 14 unused cells and 1231 unused wires.

5.24. Executing TECHMAP pass (map to technology primitives).

5.24.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/gowin/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/gowin/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

5.24.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010101 for cells of type $lut.
Using template $paramod$8e44661def013b6bf9fe6f8b049ef2c838d749f9\$lut for cells of type $lut.
Using template $paramod$fc9a29568712ccde4cf1db9c7b754dde95820a70\$lut for cells of type $lut.
Using template $paramod$2ce98e1642826b5e8da1f25d8cdb9e02cc78b555\$lut for cells of type $lut.
Using template $paramod$33156835187c5d148adddf9a6b6930f4f06f01ce\$lut for cells of type $lut.
Using template $paramod$2aeae87dd6a6e374fb2735a3db7d3292e8e6e46f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$364c9ffbffac467d60dfec81bba4e18476c15602\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000110 for cells of type $lut.
Using template $paramod$e15a0db9d6911f8bae5a75e6e67e8407bc6a67bd\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$05fb4c8e35f4210a4b17d24ba5c0d36d5f8205c4\$lut for cells of type $lut.
Using template $paramod$e6820a2ea217b2e0e0d94b254f881306cbe2a4fd\$lut for cells of type $lut.
Using template $paramod$b9d8b7e91a2c68da033af948ea0bd8bdebbaf6b2\$lut for cells of type $lut.
Using template $paramod$43920eead97cfe6c48d10f084962e7b11714ac27\$lut for cells of type $lut.
Using template $paramod$8c44bca5c97917074551ea37d2c6973de24f1e1a\$lut for cells of type $lut.
Using template $paramod$9bda61a32a8d906497c74905fc12c0a3bd426387\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11011000 for cells of type $lut.
Using template $paramod$ae8785c1368458b03472fe3b856d11173cc6a4d2\$lut for cells of type $lut.
Using template $paramod$15942ac7be0dd725beac7480dcc74ee28533af66\$lut for cells of type $lut.
Using template $paramod$109be716830a6f862b58ecad7bca96960460ecfc\$lut for cells of type $lut.
Using template $paramod$cbf56e414f35933d6bed6dd7f3e48da245c35d97\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101001 for cells of type $lut.
Using template $paramod$21739e7b9ce157e2a6c5f6ccd8d94ee4d6804cd4\$lut for cells of type $lut.
Using template $paramod$8d7e631403a80aa650e318c82a10887417c8ada0\$lut for cells of type $lut.
Using template $paramod$3b89569f0feb6269e02e20f0a89abe9ff6b13d6f\$lut for cells of type $lut.
Using template $paramod$6a045f3fed3d4e158289ae9741cced5ff9b38919\$lut for cells of type $lut.
Using template $paramod$a30baca5e8f54efabdd76538873694f1ed82709b\$lut for cells of type $lut.
Using template $paramod$11e478df2d28ad00475d5dd61d1cac264a05c1ce\$lut for cells of type $lut.
Using template $paramod$3ea91d8538b2385c026bb0d966fa119c80fe68a6\$lut for cells of type $lut.
Using template $paramod$609fc534cd448f984b8bc7c41347bc77c0201b5b\$lut for cells of type $lut.
Using template $paramod$ddf68d6e8bae7f241cae67cbdadeac149906a617\$lut for cells of type $lut.
Using template $paramod$495f554b2366b5ef0d915847d2c76a6f867efbe9\$lut for cells of type $lut.
Using template $paramod$c56b9b8cea8cf88dcf859ab2e032410e18fabd2b\$lut for cells of type $lut.
Using template $paramod$be9478aa04ec56d979ecc89c1ccf9b64003f8135\$lut for cells of type $lut.
Using template $paramod$1cc4140b925273148ac318ee64cccc1074a88851\$lut for cells of type $lut.
Using template $paramod$8cba32a4480047df765cd0afc1a7a7f42429f0f4\$lut for cells of type $lut.
Using template $paramod$9448d19ab51b71f74182dd67166a34468b501d93\$lut for cells of type $lut.
Using template $paramod$9664483609d9e726df9697364de1aad825ad3979\$lut for cells of type $lut.
Using template $paramod$1cc4ead1be7d20343e835592d0565bc12283c933\$lut for cells of type $lut.
Using template $paramod$a69aa62b09d2ab16a80c2b40a209c08dc52e5a5f\$lut for cells of type $lut.
Using template $paramod$1cbd5b6d3fb3431ae3e34f3e203986f1f36a81dc\$lut for cells of type $lut.
Using template $paramod$ace201f33bd2bd01787a4be3a7f07491ef80a146\$lut for cells of type $lut.
Using template $paramod$1b0bcb10af04082079fad7823ecdef99b9f06af0\$lut for cells of type $lut.
Using template $paramod$0f71ea37248b72e66d575a448ad832b3423dec7d\$lut for cells of type $lut.
Using template $paramod$efa8abae4babea430d822d3b66983d4e80d973ce\$lut for cells of type $lut.
Using template $paramod$7d13687b3ccad2a7c0ade43b822f088f7b4b6452\$lut for cells of type $lut.
Using template $paramod$745239c5f6bf139f6567f037e1f7ceec78049b7a\$lut for cells of type $lut.
Using template $paramod$9d63ef9f6b1c7752add45fdf26a22003d394c2b3\$lut for cells of type $lut.
Using template $paramod$00fb802f7ad7e2202437695c494002c7739eec04\$lut for cells of type $lut.
Using template $paramod$fb2ca8b73105e1694b1a7c462b6ce2fdf1b49307\$lut for cells of type $lut.
Using template $paramod$628590726de1f3570c1385a9c48a2ab810732d96\$lut for cells of type $lut.
Using template $paramod$eccb29620215a6bf88ad5ed43a42d27115f5de64\$lut for cells of type $lut.
Using template $paramod$a8f77c24fcfbcd1d5530ae53bb8a004c6ff1b7e7\$lut for cells of type $lut.
Using template $paramod$91dd7c72da8c0fe0cff201bd5c3b6da384c5314f\$lut for cells of type $lut.
Using template $paramod$256b4476ab26ca28f912426546bd8013929ef885\$lut for cells of type $lut.
Using template $paramod$ee185cbf2c3434c779b1193c0640c66a8b74c455\$lut for cells of type $lut.
Using template $paramod$0648a9971338eb5e0ed691e2a77f7ac35ca33a48\$lut for cells of type $lut.
Using template $paramod$d834624287be8f262b0bfe4c8a1f85c0623ad8f3\$lut for cells of type $lut.
Using template $paramod$82a48e5f5771a531ca9edba4cc6af5165f5035d5\$lut for cells of type $lut.
Using template $paramod$8c9f07c65d5dbc2638bf048db06973ef971c3b1b\$lut for cells of type $lut.
Using template $paramod$692927e279b3d5c42ee4aacb287247c0b34943ed\$lut for cells of type $lut.
Using template $paramod$c3b036155ceb41a04ac31ced486bbcc7d1e6e002\$lut for cells of type $lut.
Using template $paramod$5e27e2a5c88c8e0f5955e0edc79f80ef347eb2cd\$lut for cells of type $lut.
Using template $paramod$af7452187e639d6ce27ad8e3c93126afbd71f271\$lut for cells of type $lut.
Using template $paramod$67588a3ccbb49955a3efc1f3e377f24e70bb57b9\$lut for cells of type $lut.
Using template $paramod$55900b2e1d44f399aecd9ea9f416e1f28741d68b\$lut for cells of type $lut.
Using template $paramod$bb66d138bb5035f436eb4aa49a6ebd238da6361c\$lut for cells of type $lut.
Using template $paramod$7ba2d2813e89a20ed254e7d7dba236e313ac20f4\$lut for cells of type $lut.
Using template $paramod$be8a6bd9f53b1bf6ae96c5e04114fc93ad1c81da\$lut for cells of type $lut.
Using template $paramod$5462d365ba98f044f91421866268b77270bd8cc0\$lut for cells of type $lut.
Using template $paramod$40ad22224351726b53adfbb3c0361b5f5c8e3b5d\$lut for cells of type $lut.
Using template $paramod$ac93a91704506b99e110103c9b19e9b67bcd77a0\$lut for cells of type $lut.
Using template $paramod$9ed39a9db1e294c900d7e134acbe87c6d72fad50\$lut for cells of type $lut.
Using template $paramod$bf0d0292861bdee659ef5cbc5e58b330ac5871f9\$lut for cells of type $lut.
Using template $paramod$e0fb71676c93827a355a070ec497d4bcc724b3c4\$lut for cells of type $lut.
Using template $paramod$c9cab1e950984960521741fdd37ae993e6335524\$lut for cells of type $lut.
Using template $paramod$152ded2694b2dc952a637c48753532e592cec307\$lut for cells of type $lut.
Using template $paramod$e16be91cabcd3a41c70d66b3a41fde438758d50e\$lut for cells of type $lut.
Using template $paramod$0e2b55fc1c8de82810f87c8daad1912ec82a7d97\$lut for cells of type $lut.
Using template $paramod$dfdd8e22cf53c689794043015d2ccffbf99d2cd4\$lut for cells of type $lut.
Using template $paramod$fbbaa4cc7d04005f93abcc75b87fb33c1f0a5303\$lut for cells of type $lut.
Using template $paramod$cc778a82fd81ea9185402656ce1c9108e4328ce0\$lut for cells of type $lut.
Using template $paramod$90f5edaf81c3be6c9372875f444de8d5019e934b\$lut for cells of type $lut.
Using template $paramod$f1bdf5268949b7a35eadbfacdb53293543d36a3a\$lut for cells of type $lut.
Using template $paramod$6f6efad2409f713e8628b2ee9def742a1c9fad85\$lut for cells of type $lut.
Using template $paramod$36fffe6fe316f1787ee42ad596ab5745ee97b8d0\$lut for cells of type $lut.
Using template $paramod$ae9346c1f92826f8772ed23f7830e6ec8e8bd50c\$lut for cells of type $lut.
Using template $paramod$0ed4736b1191795b6e8974125fad0ebba3bd2971\$lut for cells of type $lut.
Using template $paramod$2c3833560edc1555e53a743042f5f92ebaa05400\$lut for cells of type $lut.
Using template $paramod$2661aa2601af93e362041e04a59405a491f36855\$lut for cells of type $lut.
Using template $paramod$40614bc945b57aab95fbc31af093a3fc79ada1f6\$lut for cells of type $lut.
Using template $paramod$cc6f168b93470fcc711df6312603d46c5e4b0e07\$lut for cells of type $lut.
Using template $paramod$61bc98ece8c76bffd4acdf40e5f231340cba90fc\$lut for cells of type $lut.
Using template $paramod$2acc56796dae1e7bbd8d34441a24f749523f3d30\$lut for cells of type $lut.
Using template $paramod$9c8c8fc9ab068d05356801ab4e8089a57a10a237\$lut for cells of type $lut.
Using template $paramod$550e018cb755d79f7ac98aa2903b15129a907e37\$lut for cells of type $lut.
Using template $paramod$71a96c621bf23b139038ce199a04f47b853774b7\$lut for cells of type $lut.
Using template $paramod$5256685f0631dcb7ac7f7270fe3822fefac41e01\$lut for cells of type $lut.
Using template $paramod$5b75da83ac7a1974960c1232880751d4288a09c0\$lut for cells of type $lut.
Using template $paramod$baee406d84fe0a8ab3e46482a4f51900848b9595\$lut for cells of type $lut.
Using template $paramod$01f259270bf50b82cd342c2217aa220d2ccaa309\$lut for cells of type $lut.
Using template $paramod$444b7b7c35e4af2d15a9bd1fd16584ea74a290cc\$lut for cells of type $lut.
Using template $paramod$007dc4e47f462f846d2fd9199361fba54d3a1fc5\$lut for cells of type $lut.
Using template $paramod$c5a6a89fd51d01394d1004213b367c4851962a75\$lut for cells of type $lut.
Using template $paramod$a8cb9dc6eccb911035b7155b3fa8bdcdb987b386\$lut for cells of type $lut.
Using template $paramod$0983c26432ee5f338d2a1d71ff3fc97bb478890c\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~1680 debug messages>

5.25. Executing OPT_LUT_INS pass (discard unused LUT inputs).
Optimizing LUTs in test_wrapper.
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$3013.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$3013.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$3013.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$3001$lut$aiger3000$564.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$3001$lut$aiger3000$310.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$3001$lut$aiger3000$310.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$3001$lut$aiger3000$310.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$3001$lut$aiger3000$310.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$3001$lut$aiger3000$310.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$3001$lut$aiger3000$294.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$3001$lut$aiger3000$294.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$3001$lut$aiger3000$294.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$3001$lut$aiger3000$294.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$3001$lut$aiger3000$294.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$3001$lut$aiger3000$294.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$3001$lut$aiger3000$310.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$3013.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $abc$3001$lut$aiger3000$310.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$3001$lut$aiger3000$564.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $abc$3001$lut$aiger3000$564.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$3013.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $abc$3001$lut$aiger3000$310.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 2)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$3013.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 3)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$3013.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$3001$lut$aiger3000$310.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 0)
  Optimizing lut $abc$3001$lut$aiger3000$310.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$3001$lut$aiger3000$310.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $abc$3001$lut$aiger3000$294.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$3001$lut$aiger3000$310.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$3001$lut$aiger3000$294.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 2)
  Optimizing lut $abc$3001$lut$aiger3000$327.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)
  Optimizing lut $abc$3001$lut$aiger3000$564.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$3001$lut$aiger3000$576.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 0)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$3003.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 1)
  Optimizing lut $abc$3001$lut$aiger3000$564.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0 (4 -> 1)
  Optimizing lut $auto$abc9_ops.cc:1549:reintegrate$3013.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.genblk1.lut0.genblk1.genblk1.genblk1.genblk1.genblk1.lut1 (4 -> 3)

5.26. Executing SETUNDEF pass (replace undef values with defined constants).

5.27. Executing HILOMAP pass (mapping to constant drivers).

5.28. Executing SPLITNETS pass (splitting up multi-bit signals).
Removed 1 unused cells and 952 unused wires.

5.29. Executing AUTONAME pass.
Renamed 3015 objects in module test_wrapper (28 iterations).
<suppressed ~463 debug messages>

5.30. Executing HIERARCHY pass (managing design hierarchy).
Attribute `top' found on module `test_wrapper'. Setting top module to test_wrapper.

5.30.1. Analyzing design hierarchy..
Top module:  \test_wrapper

5.30.2. Analyzing design hierarchy..
Top module:  \test_wrapper
Removed 0 unused modules.

5.31. Printing statistics.

=== test_wrapper ===

   Number of wires:                437
   Number of wire bits:            437
   Number of public wires:         437
   Number of public wire bits:     437
   Number of ports:                 23
   Number of port bits:             23
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                268
     $scopeinfo                      2
     DFF                             1
     DFFE                           51
     DFFR                            1
     DFFRE                          13
     DFFSE                           1
     GND                             1
     IBUF                           15
     LUT1                           17
     LUT2                           22
     LUT3                           18
     LUT4                           53
     MUX2_LUT5                      40
     MUX2_LUT6                      15
     MUX2_LUT7                       7
     MUX2_LUT8                       3
     OBUF                            8

5.32. Executing CHECK pass (checking for obvious problems).
Checking module test_wrapper...
Found and reported 0 problems.

5.33. Executing Verilog backend.

5.33.1. Executing BMUXMAP pass.

5.33.2. Executing DEMUXMAP pass.
Dumping module `\test_wrapper'.

6. Executing Verilog backend.

6.1. Executing BMUXMAP pass.

6.2. Executing DEMUXMAP pass.
Dumping module `\test_wrapper'.

7. Printing statistics.

=== test_wrapper ===

   Number of wires:                437
   Number of wire bits:            437
   Number of public wires:         437
   Number of public wire bits:     437
   Number of ports:                 23
   Number of port bits:             23
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                268
     $scopeinfo                      2
     DFF                             1
     DFFE                           51
     DFFR                            1
     DFFRE                          13
     DFFSE                           1
     GND                             1
     IBUF                           15
     LUT1                           17
     LUT2                           22
     LUT3                           18
     LUT4                           53
     MUX2_LUT5                      40
     MUX2_LUT6                      15
     MUX2_LUT7                       7
     MUX2_LUT8                       3
     OBUF                            8

Warnings: 4 unique messages, 4 total
End of script. Logfile hash: d94b05ec5a, CPU: user 0.81s system 0.01s, MEM: 41.30 MB peak
Yosys 0.50+56 (git sha1 176131b50, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)
Time spent: 19% 8x techmap (0 sec), 15% 23x read_verilog (0 sec), ...
